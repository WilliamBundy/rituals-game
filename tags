$	src/rituals_main.cpp	115;"	d	file:
AABB	src/rituals_math.cpp	/^union AABB$/;"	u	file:
AABB_x1	src/rituals_math.cpp	324;"	d	file:
AABB_x2	src/rituals_math.cpp	325;"	d	file:
AABB_y1	src/rituals_math.cpp	326;"	d	file:
AABB_y2	src/rituals_math.cpp	327;"	d	file:
APIENTRY	src/thirdparty/gl_core_3_3.h	47;"	d
Allocate	src/rituals_main.cpp	182;"	d	file:
Allocate	src/rituals_win32.cpp	69;"	d	file:
Anchor_Bottom	src/rituals_renderer.cpp	/^	Anchor_Bottom = 6 ,$/;"	e	enum:Sprite_Anchor	file:
Anchor_Bottom	src/wtb_sprite_renderer.h	/^	Anchor_Bottom = 6 ,$/;"	e	enum:Sprite_Anchor
Anchor_Bottom_Left	src/rituals_renderer.cpp	/^	Anchor_Bottom_Left = 7,$/;"	e	enum:Sprite_Anchor	file:
Anchor_Bottom_Left	src/wtb_sprite_renderer.h	/^	Anchor_Bottom_Left = 7,$/;"	e	enum:Sprite_Anchor
Anchor_Bottom_Right	src/rituals_renderer.cpp	/^	Anchor_Bottom_Right = 5,$/;"	e	enum:Sprite_Anchor	file:
Anchor_Bottom_Right	src/wtb_sprite_renderer.h	/^	Anchor_Bottom_Right = 5,$/;"	e	enum:Sprite_Anchor
Anchor_Center	src/rituals_renderer.cpp	/^	Anchor_Center = 0,$/;"	e	enum:Sprite_Anchor	file:
Anchor_Center	src/wtb_sprite_renderer.h	/^	Anchor_Center = 0,$/;"	e	enum:Sprite_Anchor
Anchor_Left	src/rituals_renderer.cpp	/^	Anchor_Left = 8$/;"	e	enum:Sprite_Anchor	file:
Anchor_Left	src/wtb_sprite_renderer.h	/^	Anchor_Left = 8$/;"	e	enum:Sprite_Anchor
Anchor_Right	src/rituals_renderer.cpp	/^	Anchor_Right = 4,$/;"	e	enum:Sprite_Anchor	file:
Anchor_Right	src/wtb_sprite_renderer.h	/^	Anchor_Right = 4,$/;"	e	enum:Sprite_Anchor
Anchor_Top	src/rituals_renderer.cpp	/^	Anchor_Top = 2,$/;"	e	enum:Sprite_Anchor	file:
Anchor_Top	src/wtb_sprite_renderer.h	/^	Anchor_Top = 2,$/;"	e	enum:Sprite_Anchor
Anchor_Top_Left	src/rituals_renderer.cpp	/^	Anchor_Top_Left = 1,$/;"	e	enum:Sprite_Anchor	file:
Anchor_Top_Left	src/wtb_sprite_renderer.h	/^	Anchor_Top_Left = 1,$/;"	e	enum:Sprite_Anchor
Anchor_Top_Right	src/rituals_renderer.cpp	/^	Anchor_Top_Right = 3,$/;"	e	enum:Sprite_Anchor	file:
Anchor_Top_Right	src/wtb_sprite_renderer.h	/^	Anchor_Top_Right = 3,$/;"	e	enum:Sprite_Anchor
Anim_Standing	src/rituals_world.cpp	/^isize Anim_Standing;$/;"	v
Anim_Walking	src/rituals_world.cpp	/^isize Anim_Walking;$/;"	v
Animated_Sprite	src/rituals_animations.cpp	/^struct Animated_Sprite$/;"	s	file:
Animation	src/rituals_animations.cpp	/^struct Animation$/;"	s	file:
Animation_Frame	src/rituals_animations.cpp	/^struct Animation_Frame$/;"	s	file:
AreaBiome_Desert	src/rituals_world_area.cpp	/^	AreaBiome_Desert$/;"	e	enum:World_Area_Biome	file:
AreaBiome_Grassland	src/rituals_world_area.cpp	/^	AreaBiome_Grassland,$/;"	e	enum:World_Area_Biome	file:
Area_Link	src/rituals_world_area.cpp	/^struct Area_Link$/;"	s	file:
AsciiPrintableCount	src/rituals_gui.cpp	17;"	d	file:
AsciiPrintableEnd	src/rituals_gui.cpp	16;"	d	file:
AsciiPrintableStart	src/rituals_gui.cpp	15;"	d	file:
Ascii_Printable_Count	rituals_gui.cpp	8;"	d	file:
Ascii_Printable_End	rituals_gui.cpp	7;"	d	file:
Ascii_Printable_Start	rituals_gui.cpp	6;"	d	file:
Backspace	src/rituals_game.cpp	157;"	d	file:
BackspaceStr	src/rituals_game.cpp	158;"	d	file:
Base_Arena	src/metaprogram/metaprogram_main.cpp	/^Memory_Arena* Base_Arena;$/;"	v
Body_Flag_Always_Contact	src/rituals_simulation.cpp	/^	Body_Flag_Always_Contact = Flag(4),$/;"	e	enum:Sim_Body_Flags	file:
Body_Flag_No_Friction	src/rituals_simulation.cpp	/^	Body_Flag_No_Friction = Flag(2),$/;"	e	enum:Sim_Body_Flags	file:
Body_Flag_None	src/rituals_simulation.cpp	/^	Body_Flag_None,$/;"	e	enum:Sim_Body_Flags	file:
Body_Flag_Sensor	src/rituals_simulation.cpp	/^	Body_Flag_Sensor = Flag(3),$/;"	e	enum:Sim_Body_Flags	file:
Body_Flag_Static	src/rituals_simulation.cpp	/^	Body_Flag_Static = Flag(1),$/;"	e	enum:Sim_Body_Flags	file:
Body_Font	src/rituals_game.cpp	/^Spritefont* Body_Font;$/;"	v
Button_State	src/rituals_game.cpp	/^enum Button_State$/;"	g	file:
Button_State_Count	src/rituals_game.cpp	/^	Button_State_Count$/;"	e	enum:Button_State	file:
CASE	src/thirdparty/stb_image.h	1360;"	d
CASE	src/thirdparty/stb_image.h	1378;"	d
CASE	src/thirdparty/stb_image.h	4084;"	d
CASE	src/thirdparty/stb_image.h	4097;"	d
CASE	src/thirdparty/stb_image.h	4101;"	d
CASE	src/thirdparty/stb_image.h	4114;"	d
CODEGEN_FUNCPTR	src/thirdparty/gl_core_3_3.h	54;"	d
CODEGEN_FUNCPTR	src/thirdparty/gl_core_3_3.h	56;"	d
CODEGEN_REMOVE_FUNCPTR	src/thirdparty/gl_core_3_3.h	52;"	d
COMBO	src/thirdparty/stb_image.h	1359;"	d
Color_Black	src/rituals_gui.cpp	/^Vec4 Color_Black = _color(0, 0, 0, 1);$/;"	v
Color_White	src/rituals_gui.cpp	/^Vec4 Color_White = _color(1, 1, 1, 1);$/;"	v
CurrentGroup	src/rituals_game.cpp	/^Renderer_Group* CurrentGroup;$/;"	v
Direction	src/rituals_game.cpp	/^enum Direction $/;"	g	file:
Direction_East	src/rituals_game.cpp	/^	Direction_East,$/;"	e	enum:Direction	file:
Direction_North	src/rituals_game.cpp	/^	Direction_North,$/;"	e	enum:Direction	file:
Direction_South	src/rituals_game.cpp	/^	Direction_South,$/;"	e	enum:Direction	file:
Direction_West	src/rituals_game.cpp	/^	Direction_West$/;"	e	enum:Direction	file:
Disable_Flag	src/rituals_main.cpp	201;"	d	file:
Emitter	src/rituals_particles.cpp	/^struct Emitter$/;"	s	file:
EmitterStyleCapacity	src/rituals_particles.cpp	136;"	d	file:
Enable_Flag	src/rituals_main.cpp	200;"	d	file:
EnemyKind_Bat	src/rituals_game_info.cpp	/^	EnemyKind_Bat,$/;"	e	enum:Rituals_Enemy_Kind	file:
EnemyKind_Goblin_Knight	src/rituals_game_info.cpp	/^	EnemyKind_Goblin_Knight,$/;"	e	enum:Rituals_Enemy_Kind	file:
EnemyKind_Slime	src/rituals_game_info.cpp	/^	EnemyKind_Slime,$/;"	e	enum:Rituals_Enemy_Kind	file:
EnemyKind_Snake	src/rituals_game_info.cpp	/^	EnemyKind_Snake,$/;"	e	enum:Rituals_Enemy_Kind	file:
Entity	src/rituals_game_info.cpp	/^typedef struct Entity Entity;$/;"	t	typeref:struct:Entity	file:
Entity	src/rituals_simulation.cpp	/^typedef struct Entity Entity;$/;"	t	typeref:struct:Entity	file:
Entity	src/rituals_world_area.cpp	/^struct Entity$/;"	s	file:
Entity	src/rituals_world_area.cpp	/^typedef struct Entity Entity;$/;"	t	typeref:struct:Entity	file:
EntityEvent_Activate	src/rituals_game_info.cpp	/^	EntityEvent_Activate = Flag(7), \/\/ singular$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_Animate	src/rituals_game_info.cpp	/^	EntityEvent_Animate = Flag(3),$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_Contact	src/rituals_game_info.cpp	/^	EntityEvent_Contact = Flag(9),$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_Destroy	src/rituals_game_info.cpp	/^	EntityEvent_Destroy = Flag(6), \/\/ singular$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_FrameTick	src/rituals_game_info.cpp	/^	EntityEvent_FrameTick = Flag(4),$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_Hit	src/rituals_game_info.cpp	/^	EntityEvent_Hit = Flag(8),$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_Interact	src/rituals_game_info.cpp	/^	EntityEvent_Interact = Flag(2),$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_None	src/rituals_game_info.cpp	/^	EntityEvent_None = Flag(0),$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_SlowTick	src/rituals_game_info.cpp	/^	EntityEvent_SlowTick = Flag(5),$/;"	e	enum:Entity_Event_Type	file:
EntityEvent_Walk	src/rituals_game_info.cpp	/^	EntityEvent_Walk = Flag(1),$/;"	e	enum:Entity_Event_Type	file:
EntityFlag_None	src/rituals_world_area.cpp	/^	EntityFlag_None,$/;"	e	enum:Entity_Flags	file:
EntityFlag_SameShadow	src/rituals_world_area.cpp	/^	EntityFlag_SameShadow = Flag(2)$/;"	e	enum:Entity_Flags	file:
EntityFlag_Tail	src/rituals_world_area.cpp	/^	EntityFlag_Tail = Flag(1),$/;"	e	enum:Entity_Flags	file:
EntityKind_Bullet	src/rituals_game_info.cpp	/^	EntityKind_Bullet,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Enemy	src/rituals_game_info.cpp	/^	EntityKind_Enemy,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Pickup	src/rituals_game_info.cpp	/^	EntityKind_Pickup,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Player	src/rituals_game_info.cpp	/^	EntityKind_Player,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Prop	src/rituals_game_info.cpp	/^	EntityKind_Prop,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Static	src/rituals_game_info.cpp	/^	EntityKind_Static,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityOnActivateDecl	src/rituals_game_info.cpp	/^typedef EntityOnActivateDecl((*Entity_On_Activate));$/;"	t	file:
EntityOnActivateDecl	src/rituals_game_info.cpp	22;"	d	file:
Entity_Event_Type	src/rituals_game_info.cpp	/^enum Entity_Event_Type$/;"	g	file:
Entity_Flags	src/rituals_world_area.cpp	/^enum Entity_Flags$/;"	g	file:
FAST_BITS	src/thirdparty/stb_image.h	1456;"	d
FilePathMaxLength	src/metaprogram/metaprogram_main.cpp	62;"	d	file:
FilePathMaxLength	src/rituals_main.cpp	190;"	d	file:
File_Path_Max_Length	src/rituals_win32.cpp	77;"	d	file:
Flag	src/metaprogram/metaprogram_main.cpp	70;"	d	file:
Flag	src/rituals_main.cpp	198;"	d	file:
GLAPI	src/thirdparty/gl_core_3_3.h	61;"	d
GLDEBUGPROC	src/thirdparty/gl_core_3_3.h	/^		typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDEBUGPROCAMD	src/thirdparty/gl_core_3_3.h	/^		typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);$/;"	t
GLDEBUGPROCARB	src/thirdparty/gl_core_3_3.h	/^		typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLEXT_64_TYPES_DEFINED	src/thirdparty/gl_core_3_3.h	75;"	d
GL_ACTIVE_ATTRIBUTES	src/thirdparty/gl_core_3_3.h	510;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	src/thirdparty/gl_core_3_3.h	511;"	d
GL_ACTIVE_TEXTURE	src/thirdparty/gl_core_3_3.h	394;"	d
GL_ACTIVE_UNIFORMS	src/thirdparty/gl_core_3_3.h	512;"	d
GL_ACTIVE_UNIFORM_BLOCKS	src/thirdparty/gl_core_3_3.h	840;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	src/thirdparty/gl_core_3_3.h	841;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	src/thirdparty/gl_core_3_3.h	513;"	d
GL_ALIASED_LINE_WIDTH_RANGE	src/thirdparty/gl_core_3_3.h	357;"	d
GL_ALPHA	src/thirdparty/gl_core_3_3.h	156;"	d
GL_ALREADY_SIGNALED	src/thirdparty/gl_core_3_3.h	902;"	d
GL_ALWAYS	src/thirdparty/gl_core_3_3.h	157;"	d
GL_AND	src/thirdparty/gl_core_3_3.h	158;"	d
GL_AND_INVERTED	src/thirdparty/gl_core_3_3.h	159;"	d
GL_AND_REVERSE	src/thirdparty/gl_core_3_3.h	160;"	d
GL_ANY_SAMPLES_PASSED	src/thirdparty/gl_core_3_3.h	967;"	d
GL_ARRAY_BUFFER	src/thirdparty/gl_core_3_3.h	481;"	d
GL_ARRAY_BUFFER_BINDING	src/thirdparty/gl_core_3_3.h	482;"	d
GL_ATTACHED_SHADERS	src/thirdparty/gl_core_3_3.h	514;"	d
GL_BACK	src/thirdparty/gl_core_3_3.h	161;"	d
GL_BACK_LEFT	src/thirdparty/gl_core_3_3.h	162;"	d
GL_BACK_RIGHT	src/thirdparty/gl_core_3_3.h	163;"	d
GL_BGR	src/thirdparty/gl_core_3_3.h	358;"	d
GL_BGRA	src/thirdparty/gl_core_3_3.h	359;"	d
GL_BGRA_INTEGER	src/thirdparty/gl_core_3_3.h	608;"	d
GL_BGR_INTEGER	src/thirdparty/gl_core_3_3.h	609;"	d
GL_BLEND	src/thirdparty/gl_core_3_3.h	164;"	d
GL_BLEND_COLOR	src/thirdparty/gl_core_3_3.h	454;"	d
GL_BLEND_DST	src/thirdparty/gl_core_3_3.h	165;"	d
GL_BLEND_DST_ALPHA	src/thirdparty/gl_core_3_3.h	455;"	d
GL_BLEND_DST_RGB	src/thirdparty/gl_core_3_3.h	456;"	d
GL_BLEND_EQUATION_ALPHA	src/thirdparty/gl_core_3_3.h	515;"	d
GL_BLEND_EQUATION_RGB	src/thirdparty/gl_core_3_3.h	516;"	d
GL_BLEND_SRC	src/thirdparty/gl_core_3_3.h	166;"	d
GL_BLEND_SRC_ALPHA	src/thirdparty/gl_core_3_3.h	457;"	d
GL_BLEND_SRC_RGB	src/thirdparty/gl_core_3_3.h	458;"	d
GL_BLUE	src/thirdparty/gl_core_3_3.h	167;"	d
GL_BLUE_INTEGER	src/thirdparty/gl_core_3_3.h	610;"	d
GL_BOOL	src/thirdparty/gl_core_3_3.h	517;"	d
GL_BOOL_VEC2	src/thirdparty/gl_core_3_3.h	518;"	d
GL_BOOL_VEC3	src/thirdparty/gl_core_3_3.h	519;"	d
GL_BOOL_VEC4	src/thirdparty/gl_core_3_3.h	520;"	d
GL_BUFFER_ACCESS	src/thirdparty/gl_core_3_3.h	483;"	d
GL_BUFFER_ACCESS_FLAGS	src/thirdparty/gl_core_3_3.h	611;"	d
GL_BUFFER_MAPPED	src/thirdparty/gl_core_3_3.h	484;"	d
GL_BUFFER_MAP_LENGTH	src/thirdparty/gl_core_3_3.h	612;"	d
GL_BUFFER_MAP_OFFSET	src/thirdparty/gl_core_3_3.h	613;"	d
GL_BUFFER_MAP_POINTER	src/thirdparty/gl_core_3_3.h	485;"	d
GL_BUFFER_SIZE	src/thirdparty/gl_core_3_3.h	486;"	d
GL_BUFFER_USAGE	src/thirdparty/gl_core_3_3.h	487;"	d
GL_BYTE	src/thirdparty/gl_core_3_3.h	168;"	d
GL_CCW	src/thirdparty/gl_core_3_3.h	169;"	d
GL_CLAMP_READ_COLOR	src/thirdparty/gl_core_3_3.h	614;"	d
GL_CLAMP_TO_BORDER	src/thirdparty/gl_core_3_3.h	395;"	d
GL_CLAMP_TO_EDGE	src/thirdparty/gl_core_3_3.h	360;"	d
GL_CLEAR	src/thirdparty/gl_core_3_3.h	170;"	d
GL_CLIP_DISTANCE0	src/thirdparty/gl_core_3_3.h	615;"	d
GL_CLIP_DISTANCE1	src/thirdparty/gl_core_3_3.h	616;"	d
GL_CLIP_DISTANCE2	src/thirdparty/gl_core_3_3.h	617;"	d
GL_CLIP_DISTANCE3	src/thirdparty/gl_core_3_3.h	618;"	d
GL_CLIP_DISTANCE4	src/thirdparty/gl_core_3_3.h	619;"	d
GL_CLIP_DISTANCE5	src/thirdparty/gl_core_3_3.h	620;"	d
GL_CLIP_DISTANCE6	src/thirdparty/gl_core_3_3.h	621;"	d
GL_CLIP_DISTANCE7	src/thirdparty/gl_core_3_3.h	622;"	d
GL_COLOR	src/thirdparty/gl_core_3_3.h	171;"	d
GL_COLOR_ATTACHMENT0	src/thirdparty/gl_core_3_3.h	623;"	d
GL_COLOR_ATTACHMENT1	src/thirdparty/gl_core_3_3.h	624;"	d
GL_COLOR_ATTACHMENT10	src/thirdparty/gl_core_3_3.h	625;"	d
GL_COLOR_ATTACHMENT11	src/thirdparty/gl_core_3_3.h	626;"	d
GL_COLOR_ATTACHMENT12	src/thirdparty/gl_core_3_3.h	627;"	d
GL_COLOR_ATTACHMENT13	src/thirdparty/gl_core_3_3.h	628;"	d
GL_COLOR_ATTACHMENT14	src/thirdparty/gl_core_3_3.h	629;"	d
GL_COLOR_ATTACHMENT15	src/thirdparty/gl_core_3_3.h	630;"	d
GL_COLOR_ATTACHMENT16	src/thirdparty/gl_core_3_3.h	631;"	d
GL_COLOR_ATTACHMENT17	src/thirdparty/gl_core_3_3.h	632;"	d
GL_COLOR_ATTACHMENT18	src/thirdparty/gl_core_3_3.h	633;"	d
GL_COLOR_ATTACHMENT19	src/thirdparty/gl_core_3_3.h	634;"	d
GL_COLOR_ATTACHMENT2	src/thirdparty/gl_core_3_3.h	635;"	d
GL_COLOR_ATTACHMENT20	src/thirdparty/gl_core_3_3.h	636;"	d
GL_COLOR_ATTACHMENT21	src/thirdparty/gl_core_3_3.h	637;"	d
GL_COLOR_ATTACHMENT22	src/thirdparty/gl_core_3_3.h	638;"	d
GL_COLOR_ATTACHMENT23	src/thirdparty/gl_core_3_3.h	639;"	d
GL_COLOR_ATTACHMENT24	src/thirdparty/gl_core_3_3.h	640;"	d
GL_COLOR_ATTACHMENT25	src/thirdparty/gl_core_3_3.h	641;"	d
GL_COLOR_ATTACHMENT26	src/thirdparty/gl_core_3_3.h	642;"	d
GL_COLOR_ATTACHMENT27	src/thirdparty/gl_core_3_3.h	643;"	d
GL_COLOR_ATTACHMENT28	src/thirdparty/gl_core_3_3.h	644;"	d
GL_COLOR_ATTACHMENT29	src/thirdparty/gl_core_3_3.h	645;"	d
GL_COLOR_ATTACHMENT3	src/thirdparty/gl_core_3_3.h	646;"	d
GL_COLOR_ATTACHMENT30	src/thirdparty/gl_core_3_3.h	647;"	d
GL_COLOR_ATTACHMENT31	src/thirdparty/gl_core_3_3.h	648;"	d
GL_COLOR_ATTACHMENT4	src/thirdparty/gl_core_3_3.h	649;"	d
GL_COLOR_ATTACHMENT5	src/thirdparty/gl_core_3_3.h	650;"	d
GL_COLOR_ATTACHMENT6	src/thirdparty/gl_core_3_3.h	651;"	d
GL_COLOR_ATTACHMENT7	src/thirdparty/gl_core_3_3.h	652;"	d
GL_COLOR_ATTACHMENT8	src/thirdparty/gl_core_3_3.h	653;"	d
GL_COLOR_ATTACHMENT9	src/thirdparty/gl_core_3_3.h	654;"	d
GL_COLOR_BUFFER_BIT	src/thirdparty/gl_core_3_3.h	172;"	d
GL_COLOR_CLEAR_VALUE	src/thirdparty/gl_core_3_3.h	173;"	d
GL_COLOR_LOGIC_OP	src/thirdparty/gl_core_3_3.h	174;"	d
GL_COLOR_WRITEMASK	src/thirdparty/gl_core_3_3.h	175;"	d
GL_COMPARE_REF_TO_TEXTURE	src/thirdparty/gl_core_3_3.h	655;"	d
GL_COMPILE_STATUS	src/thirdparty/gl_core_3_3.h	521;"	d
GL_COMPRESSED_RED	src/thirdparty/gl_core_3_3.h	656;"	d
GL_COMPRESSED_RED_RGTC1	src/thirdparty/gl_core_3_3.h	657;"	d
GL_COMPRESSED_RG	src/thirdparty/gl_core_3_3.h	658;"	d
GL_COMPRESSED_RGB	src/thirdparty/gl_core_3_3.h	396;"	d
GL_COMPRESSED_RGBA	src/thirdparty/gl_core_3_3.h	397;"	d
GL_COMPRESSED_RG_RGTC2	src/thirdparty/gl_core_3_3.h	659;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	src/thirdparty/gl_core_3_3.h	660;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	src/thirdparty/gl_core_3_3.h	661;"	d
GL_COMPRESSED_SRGB	src/thirdparty/gl_core_3_3.h	591;"	d
GL_COMPRESSED_SRGB_ALPHA	src/thirdparty/gl_core_3_3.h	592;"	d
GL_COMPRESSED_TEXTURE_FORMATS	src/thirdparty/gl_core_3_3.h	398;"	d
GL_CONDITION_SATISFIED	src/thirdparty/gl_core_3_3.h	903;"	d
GL_CONSTANT_ALPHA	src/thirdparty/gl_core_3_3.h	459;"	d
GL_CONSTANT_COLOR	src/thirdparty/gl_core_3_3.h	460;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	src/thirdparty/gl_core_3_3.h	904;"	d
GL_CONTEXT_CORE_PROFILE_BIT	src/thirdparty/gl_core_3_3.h	905;"	d
GL_CONTEXT_FLAGS	src/thirdparty/gl_core_3_3.h	662;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	src/thirdparty/gl_core_3_3.h	663;"	d
GL_CONTEXT_PROFILE_MASK	src/thirdparty/gl_core_3_3.h	906;"	d
GL_COPY	src/thirdparty/gl_core_3_3.h	176;"	d
GL_COPY_INVERTED	src/thirdparty/gl_core_3_3.h	177;"	d
GL_COPY_READ_BUFFER	src/thirdparty/gl_core_3_3.h	842;"	d
GL_COPY_WRITE_BUFFER	src/thirdparty/gl_core_3_3.h	843;"	d
GL_CULL_FACE	src/thirdparty/gl_core_3_3.h	178;"	d
GL_CULL_FACE_MODE	src/thirdparty/gl_core_3_3.h	179;"	d
GL_CURRENT_PROGRAM	src/thirdparty/gl_core_3_3.h	522;"	d
GL_CURRENT_QUERY	src/thirdparty/gl_core_3_3.h	488;"	d
GL_CURRENT_VERTEX_ATTRIB	src/thirdparty/gl_core_3_3.h	523;"	d
GL_CW	src/thirdparty/gl_core_3_3.h	180;"	d
GL_DECR	src/thirdparty/gl_core_3_3.h	181;"	d
GL_DECR_WRAP	src/thirdparty/gl_core_3_3.h	461;"	d
GL_DELETE_STATUS	src/thirdparty/gl_core_3_3.h	524;"	d
GL_DEPTH	src/thirdparty/gl_core_3_3.h	182;"	d
GL_DEPTH24_STENCIL8	src/thirdparty/gl_core_3_3.h	664;"	d
GL_DEPTH32F_STENCIL8	src/thirdparty/gl_core_3_3.h	665;"	d
GL_DEPTH_ATTACHMENT	src/thirdparty/gl_core_3_3.h	666;"	d
GL_DEPTH_BUFFER_BIT	src/thirdparty/gl_core_3_3.h	183;"	d
GL_DEPTH_CLAMP	src/thirdparty/gl_core_3_3.h	907;"	d
GL_DEPTH_CLEAR_VALUE	src/thirdparty/gl_core_3_3.h	184;"	d
GL_DEPTH_COMPONENT	src/thirdparty/gl_core_3_3.h	185;"	d
GL_DEPTH_COMPONENT16	src/thirdparty/gl_core_3_3.h	462;"	d
GL_DEPTH_COMPONENT24	src/thirdparty/gl_core_3_3.h	463;"	d
GL_DEPTH_COMPONENT32	src/thirdparty/gl_core_3_3.h	464;"	d
GL_DEPTH_COMPONENT32F	src/thirdparty/gl_core_3_3.h	667;"	d
GL_DEPTH_FUNC	src/thirdparty/gl_core_3_3.h	186;"	d
GL_DEPTH_RANGE	src/thirdparty/gl_core_3_3.h	187;"	d
GL_DEPTH_STENCIL	src/thirdparty/gl_core_3_3.h	668;"	d
GL_DEPTH_STENCIL_ATTACHMENT	src/thirdparty/gl_core_3_3.h	669;"	d
GL_DEPTH_TEST	src/thirdparty/gl_core_3_3.h	188;"	d
GL_DEPTH_WRITEMASK	src/thirdparty/gl_core_3_3.h	189;"	d
GL_DITHER	src/thirdparty/gl_core_3_3.h	190;"	d
GL_DONT_CARE	src/thirdparty/gl_core_3_3.h	191;"	d
GL_DOUBLE	src/thirdparty/gl_core_3_3.h	192;"	d
GL_DOUBLEBUFFER	src/thirdparty/gl_core_3_3.h	193;"	d
GL_DRAW_BUFFER	src/thirdparty/gl_core_3_3.h	194;"	d
GL_DRAW_BUFFER0	src/thirdparty/gl_core_3_3.h	525;"	d
GL_DRAW_BUFFER1	src/thirdparty/gl_core_3_3.h	526;"	d
GL_DRAW_BUFFER10	src/thirdparty/gl_core_3_3.h	527;"	d
GL_DRAW_BUFFER11	src/thirdparty/gl_core_3_3.h	528;"	d
GL_DRAW_BUFFER12	src/thirdparty/gl_core_3_3.h	529;"	d
GL_DRAW_BUFFER13	src/thirdparty/gl_core_3_3.h	530;"	d
GL_DRAW_BUFFER14	src/thirdparty/gl_core_3_3.h	531;"	d
GL_DRAW_BUFFER15	src/thirdparty/gl_core_3_3.h	532;"	d
GL_DRAW_BUFFER2	src/thirdparty/gl_core_3_3.h	533;"	d
GL_DRAW_BUFFER3	src/thirdparty/gl_core_3_3.h	534;"	d
GL_DRAW_BUFFER4	src/thirdparty/gl_core_3_3.h	535;"	d
GL_DRAW_BUFFER5	src/thirdparty/gl_core_3_3.h	536;"	d
GL_DRAW_BUFFER6	src/thirdparty/gl_core_3_3.h	537;"	d
GL_DRAW_BUFFER7	src/thirdparty/gl_core_3_3.h	538;"	d
GL_DRAW_BUFFER8	src/thirdparty/gl_core_3_3.h	539;"	d
GL_DRAW_BUFFER9	src/thirdparty/gl_core_3_3.h	540;"	d
GL_DRAW_FRAMEBUFFER	src/thirdparty/gl_core_3_3.h	670;"	d
GL_DRAW_FRAMEBUFFER_BINDING	src/thirdparty/gl_core_3_3.h	671;"	d
GL_DST_ALPHA	src/thirdparty/gl_core_3_3.h	195;"	d
GL_DST_COLOR	src/thirdparty/gl_core_3_3.h	196;"	d
GL_DYNAMIC_COPY	src/thirdparty/gl_core_3_3.h	489;"	d
GL_DYNAMIC_DRAW	src/thirdparty/gl_core_3_3.h	490;"	d
GL_DYNAMIC_READ	src/thirdparty/gl_core_3_3.h	491;"	d
GL_ELEMENT_ARRAY_BUFFER	src/thirdparty/gl_core_3_3.h	492;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	src/thirdparty/gl_core_3_3.h	493;"	d
GL_EQUAL	src/thirdparty/gl_core_3_3.h	197;"	d
GL_EQUIV	src/thirdparty/gl_core_3_3.h	198;"	d
GL_EXTENSIONS	src/thirdparty/gl_core_3_3.h	199;"	d
GL_FALSE	src/thirdparty/gl_core_3_3.h	200;"	d
GL_FASTEST	src/thirdparty/gl_core_3_3.h	201;"	d
GL_FILL	src/thirdparty/gl_core_3_3.h	202;"	d
GL_FIRST_VERTEX_CONVENTION	src/thirdparty/gl_core_3_3.h	908;"	d
GL_FIXED_ONLY	src/thirdparty/gl_core_3_3.h	672;"	d
GL_FLOAT	src/thirdparty/gl_core_3_3.h	203;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	src/thirdparty/gl_core_3_3.h	673;"	d
GL_FLOAT_MAT2	src/thirdparty/gl_core_3_3.h	541;"	d
GL_FLOAT_MAT2x3	src/thirdparty/gl_core_3_3.h	593;"	d
GL_FLOAT_MAT2x4	src/thirdparty/gl_core_3_3.h	594;"	d
GL_FLOAT_MAT3	src/thirdparty/gl_core_3_3.h	542;"	d
GL_FLOAT_MAT3x2	src/thirdparty/gl_core_3_3.h	595;"	d
GL_FLOAT_MAT3x4	src/thirdparty/gl_core_3_3.h	596;"	d
GL_FLOAT_MAT4	src/thirdparty/gl_core_3_3.h	543;"	d
GL_FLOAT_MAT4x2	src/thirdparty/gl_core_3_3.h	597;"	d
GL_FLOAT_MAT4x3	src/thirdparty/gl_core_3_3.h	598;"	d
GL_FLOAT_VEC2	src/thirdparty/gl_core_3_3.h	544;"	d
GL_FLOAT_VEC3	src/thirdparty/gl_core_3_3.h	545;"	d
GL_FLOAT_VEC4	src/thirdparty/gl_core_3_3.h	546;"	d
GL_FRAGMENT_SHADER	src/thirdparty/gl_core_3_3.h	547;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	src/thirdparty/gl_core_3_3.h	548;"	d
GL_FRAMEBUFFER	src/thirdparty/gl_core_3_3.h	674;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	src/thirdparty/gl_core_3_3.h	675;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	src/thirdparty/gl_core_3_3.h	676;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	src/thirdparty/gl_core_3_3.h	677;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	src/thirdparty/gl_core_3_3.h	678;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	src/thirdparty/gl_core_3_3.h	679;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	src/thirdparty/gl_core_3_3.h	680;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	src/thirdparty/gl_core_3_3.h	909;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	src/thirdparty/gl_core_3_3.h	681;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	src/thirdparty/gl_core_3_3.h	682;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	src/thirdparty/gl_core_3_3.h	683;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	src/thirdparty/gl_core_3_3.h	684;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	src/thirdparty/gl_core_3_3.h	685;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	src/thirdparty/gl_core_3_3.h	686;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	src/thirdparty/gl_core_3_3.h	687;"	d
GL_FRAMEBUFFER_BINDING	src/thirdparty/gl_core_3_3.h	688;"	d
GL_FRAMEBUFFER_COMPLETE	src/thirdparty/gl_core_3_3.h	689;"	d
GL_FRAMEBUFFER_DEFAULT	src/thirdparty/gl_core_3_3.h	690;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	src/thirdparty/gl_core_3_3.h	691;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	src/thirdparty/gl_core_3_3.h	692;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	src/thirdparty/gl_core_3_3.h	910;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	src/thirdparty/gl_core_3_3.h	693;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	src/thirdparty/gl_core_3_3.h	694;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	src/thirdparty/gl_core_3_3.h	695;"	d
GL_FRAMEBUFFER_SRGB	src/thirdparty/gl_core_3_3.h	696;"	d
GL_FRAMEBUFFER_UNDEFINED	src/thirdparty/gl_core_3_3.h	697;"	d
GL_FRAMEBUFFER_UNSUPPORTED	src/thirdparty/gl_core_3_3.h	698;"	d
GL_FRONT	src/thirdparty/gl_core_3_3.h	204;"	d
GL_FRONT_AND_BACK	src/thirdparty/gl_core_3_3.h	205;"	d
GL_FRONT_FACE	src/thirdparty/gl_core_3_3.h	206;"	d
GL_FRONT_LEFT	src/thirdparty/gl_core_3_3.h	207;"	d
GL_FRONT_RIGHT	src/thirdparty/gl_core_3_3.h	208;"	d
GL_FUNC_ADD	src/thirdparty/gl_core_3_3.h	465;"	d
GL_FUNC_REVERSE_SUBTRACT	src/thirdparty/gl_core_3_3.h	466;"	d
GL_FUNC_SUBTRACT	src/thirdparty/gl_core_3_3.h	467;"	d
GL_GEOMETRY_INPUT_TYPE	src/thirdparty/gl_core_3_3.h	911;"	d
GL_GEOMETRY_OUTPUT_TYPE	src/thirdparty/gl_core_3_3.h	912;"	d
GL_GEOMETRY_SHADER	src/thirdparty/gl_core_3_3.h	913;"	d
GL_GEOMETRY_VERTICES_OUT	src/thirdparty/gl_core_3_3.h	914;"	d
GL_GEQUAL	src/thirdparty/gl_core_3_3.h	209;"	d
GL_GREATER	src/thirdparty/gl_core_3_3.h	210;"	d
GL_GREEN	src/thirdparty/gl_core_3_3.h	211;"	d
GL_GREEN_INTEGER	src/thirdparty/gl_core_3_3.h	699;"	d
GL_HALF_FLOAT	src/thirdparty/gl_core_3_3.h	700;"	d
GL_INCR	src/thirdparty/gl_core_3_3.h	212;"	d
GL_INCR_WRAP	src/thirdparty/gl_core_3_3.h	468;"	d
GL_INFO_LOG_LENGTH	src/thirdparty/gl_core_3_3.h	549;"	d
GL_INT	src/thirdparty/gl_core_3_3.h	213;"	d
GL_INTERLEAVED_ATTRIBS	src/thirdparty/gl_core_3_3.h	701;"	d
GL_INT_2_10_10_10_REV	src/thirdparty/gl_core_3_3.h	968;"	d
GL_INT_SAMPLER_1D	src/thirdparty/gl_core_3_3.h	702;"	d
GL_INT_SAMPLER_1D_ARRAY	src/thirdparty/gl_core_3_3.h	703;"	d
GL_INT_SAMPLER_2D	src/thirdparty/gl_core_3_3.h	704;"	d
GL_INT_SAMPLER_2D_ARRAY	src/thirdparty/gl_core_3_3.h	705;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	src/thirdparty/gl_core_3_3.h	915;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	src/thirdparty/gl_core_3_3.h	916;"	d
GL_INT_SAMPLER_2D_RECT	src/thirdparty/gl_core_3_3.h	844;"	d
GL_INT_SAMPLER_3D	src/thirdparty/gl_core_3_3.h	706;"	d
GL_INT_SAMPLER_BUFFER	src/thirdparty/gl_core_3_3.h	845;"	d
GL_INT_SAMPLER_CUBE	src/thirdparty/gl_core_3_3.h	707;"	d
GL_INT_VEC2	src/thirdparty/gl_core_3_3.h	550;"	d
GL_INT_VEC3	src/thirdparty/gl_core_3_3.h	551;"	d
GL_INT_VEC4	src/thirdparty/gl_core_3_3.h	552;"	d
GL_INVALID_ENUM	src/thirdparty/gl_core_3_3.h	214;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	src/thirdparty/gl_core_3_3.h	708;"	d
GL_INVALID_INDEX	src/thirdparty/gl_core_3_3.h	846;"	d
GL_INVALID_OPERATION	src/thirdparty/gl_core_3_3.h	215;"	d
GL_INVALID_VALUE	src/thirdparty/gl_core_3_3.h	216;"	d
GL_INVERT	src/thirdparty/gl_core_3_3.h	217;"	d
GL_KEEP	src/thirdparty/gl_core_3_3.h	218;"	d
GL_LAST_VERTEX_CONVENTION	src/thirdparty/gl_core_3_3.h	917;"	d
GL_LEFT	src/thirdparty/gl_core_3_3.h	219;"	d
GL_LEQUAL	src/thirdparty/gl_core_3_3.h	220;"	d
GL_LESS	src/thirdparty/gl_core_3_3.h	221;"	d
GL_LINE	src/thirdparty/gl_core_3_3.h	222;"	d
GL_LINEAR	src/thirdparty/gl_core_3_3.h	223;"	d
GL_LINEAR_MIPMAP_LINEAR	src/thirdparty/gl_core_3_3.h	224;"	d
GL_LINEAR_MIPMAP_NEAREST	src/thirdparty/gl_core_3_3.h	225;"	d
GL_LINES	src/thirdparty/gl_core_3_3.h	226;"	d
GL_LINES_ADJACENCY	src/thirdparty/gl_core_3_3.h	918;"	d
GL_LINE_LOOP	src/thirdparty/gl_core_3_3.h	227;"	d
GL_LINE_SMOOTH	src/thirdparty/gl_core_3_3.h	228;"	d
GL_LINE_SMOOTH_HINT	src/thirdparty/gl_core_3_3.h	229;"	d
GL_LINE_STRIP	src/thirdparty/gl_core_3_3.h	230;"	d
GL_LINE_STRIP_ADJACENCY	src/thirdparty/gl_core_3_3.h	919;"	d
GL_LINE_WIDTH	src/thirdparty/gl_core_3_3.h	231;"	d
GL_LINE_WIDTH_GRANULARITY	src/thirdparty/gl_core_3_3.h	232;"	d
GL_LINE_WIDTH_RANGE	src/thirdparty/gl_core_3_3.h	233;"	d
GL_LINK_STATUS	src/thirdparty/gl_core_3_3.h	553;"	d
GL_LOAD_GEN_BASIC_OPENGL_TYPEDEFS	src/thirdparty/gl_core_3_3.h	66;"	d
GL_LOGIC_OP_MODE	src/thirdparty/gl_core_3_3.h	234;"	d
GL_LOWER_LEFT	src/thirdparty/gl_core_3_3.h	554;"	d
GL_MAJOR_VERSION	src/thirdparty/gl_core_3_3.h	709;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	src/thirdparty/gl_core_3_3.h	710;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	src/thirdparty/gl_core_3_3.h	711;"	d
GL_MAP_INVALIDATE_RANGE_BIT	src/thirdparty/gl_core_3_3.h	712;"	d
GL_MAP_READ_BIT	src/thirdparty/gl_core_3_3.h	713;"	d
GL_MAP_UNSYNCHRONIZED_BIT	src/thirdparty/gl_core_3_3.h	714;"	d
GL_MAP_WRITE_BIT	src/thirdparty/gl_core_3_3.h	715;"	d
GL_MAX	src/thirdparty/gl_core_3_3.h	469;"	d
GL_MAX_3D_TEXTURE_SIZE	src/thirdparty/gl_core_3_3.h	361;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	src/thirdparty/gl_core_3_3.h	716;"	d
GL_MAX_CLIP_DISTANCES	src/thirdparty/gl_core_3_3.h	717;"	d
GL_MAX_COLOR_ATTACHMENTS	src/thirdparty/gl_core_3_3.h	718;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	src/thirdparty/gl_core_3_3.h	920;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	src/thirdparty/gl_core_3_3.h	847;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	src/thirdparty/gl_core_3_3.h	848;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	src/thirdparty/gl_core_3_3.h	555;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	src/thirdparty/gl_core_3_3.h	849;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	src/thirdparty/gl_core_3_3.h	850;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	src/thirdparty/gl_core_3_3.h	399;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	src/thirdparty/gl_core_3_3.h	921;"	d
GL_MAX_DRAW_BUFFERS	src/thirdparty/gl_core_3_3.h	556;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	src/thirdparty/gl_core_3_3.h	969;"	d
GL_MAX_ELEMENTS_INDICES	src/thirdparty/gl_core_3_3.h	362;"	d
GL_MAX_ELEMENTS_VERTICES	src/thirdparty/gl_core_3_3.h	363;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	src/thirdparty/gl_core_3_3.h	922;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	src/thirdparty/gl_core_3_3.h	851;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	src/thirdparty/gl_core_3_3.h	557;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	src/thirdparty/gl_core_3_3.h	923;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	src/thirdparty/gl_core_3_3.h	924;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	src/thirdparty/gl_core_3_3.h	925;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	src/thirdparty/gl_core_3_3.h	926;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	src/thirdparty/gl_core_3_3.h	927;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	src/thirdparty/gl_core_3_3.h	852;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	src/thirdparty/gl_core_3_3.h	928;"	d
GL_MAX_INTEGER_SAMPLES	src/thirdparty/gl_core_3_3.h	929;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	src/thirdparty/gl_core_3_3.h	719;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	src/thirdparty/gl_core_3_3.h	853;"	d
GL_MAX_RENDERBUFFER_SIZE	src/thirdparty/gl_core_3_3.h	720;"	d
GL_MAX_SAMPLES	src/thirdparty/gl_core_3_3.h	721;"	d
GL_MAX_SAMPLE_MASK_WORDS	src/thirdparty/gl_core_3_3.h	930;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	src/thirdparty/gl_core_3_3.h	931;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	src/thirdparty/gl_core_3_3.h	854;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	src/thirdparty/gl_core_3_3.h	558;"	d
GL_MAX_TEXTURE_LOD_BIAS	src/thirdparty/gl_core_3_3.h	470;"	d
GL_MAX_TEXTURE_SIZE	src/thirdparty/gl_core_3_3.h	235;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	src/thirdparty/gl_core_3_3.h	722;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	src/thirdparty/gl_core_3_3.h	723;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	src/thirdparty/gl_core_3_3.h	724;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	src/thirdparty/gl_core_3_3.h	855;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	src/thirdparty/gl_core_3_3.h	856;"	d
GL_MAX_VARYING_COMPONENTS	src/thirdparty/gl_core_3_3.h	725;"	d
GL_MAX_VARYING_FLOATS	src/thirdparty/gl_core_3_3.h	559;"	d
GL_MAX_VERTEX_ATTRIBS	src/thirdparty/gl_core_3_3.h	560;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	src/thirdparty/gl_core_3_3.h	932;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	src/thirdparty/gl_core_3_3.h	561;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	src/thirdparty/gl_core_3_3.h	857;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	src/thirdparty/gl_core_3_3.h	562;"	d
GL_MAX_VIEWPORT_DIMS	src/thirdparty/gl_core_3_3.h	236;"	d
GL_MIN	src/thirdparty/gl_core_3_3.h	471;"	d
GL_MINOR_VERSION	src/thirdparty/gl_core_3_3.h	726;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	src/thirdparty/gl_core_3_3.h	727;"	d
GL_MIRRORED_REPEAT	src/thirdparty/gl_core_3_3.h	472;"	d
GL_MULTISAMPLE	src/thirdparty/gl_core_3_3.h	400;"	d
GL_NAND	src/thirdparty/gl_core_3_3.h	237;"	d
GL_NEAREST	src/thirdparty/gl_core_3_3.h	238;"	d
GL_NEAREST_MIPMAP_LINEAR	src/thirdparty/gl_core_3_3.h	239;"	d
GL_NEAREST_MIPMAP_NEAREST	src/thirdparty/gl_core_3_3.h	240;"	d
GL_NEVER	src/thirdparty/gl_core_3_3.h	241;"	d
GL_NICEST	src/thirdparty/gl_core_3_3.h	242;"	d
GL_NONE	src/thirdparty/gl_core_3_3.h	243;"	d
GL_NOOP	src/thirdparty/gl_core_3_3.h	244;"	d
GL_NOR	src/thirdparty/gl_core_3_3.h	245;"	d
GL_NOTEQUAL	src/thirdparty/gl_core_3_3.h	246;"	d
GL_NO_ERROR	src/thirdparty/gl_core_3_3.h	247;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	src/thirdparty/gl_core_3_3.h	401;"	d
GL_NUM_EXTENSIONS	src/thirdparty/gl_core_3_3.h	728;"	d
GL_OBJECT_TYPE	src/thirdparty/gl_core_3_3.h	933;"	d
GL_ONE	src/thirdparty/gl_core_3_3.h	248;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	src/thirdparty/gl_core_3_3.h	473;"	d
GL_ONE_MINUS_CONSTANT_COLOR	src/thirdparty/gl_core_3_3.h	474;"	d
GL_ONE_MINUS_DST_ALPHA	src/thirdparty/gl_core_3_3.h	249;"	d
GL_ONE_MINUS_DST_COLOR	src/thirdparty/gl_core_3_3.h	250;"	d
GL_ONE_MINUS_SRC1_ALPHA	src/thirdparty/gl_core_3_3.h	970;"	d
GL_ONE_MINUS_SRC1_COLOR	src/thirdparty/gl_core_3_3.h	971;"	d
GL_ONE_MINUS_SRC_ALPHA	src/thirdparty/gl_core_3_3.h	251;"	d
GL_ONE_MINUS_SRC_COLOR	src/thirdparty/gl_core_3_3.h	252;"	d
GL_OR	src/thirdparty/gl_core_3_3.h	253;"	d
GL_OR_INVERTED	src/thirdparty/gl_core_3_3.h	254;"	d
GL_OR_REVERSE	src/thirdparty/gl_core_3_3.h	255;"	d
GL_OUT_OF_MEMORY	src/thirdparty/gl_core_3_3.h	256;"	d
GL_PACK_ALIGNMENT	src/thirdparty/gl_core_3_3.h	257;"	d
GL_PACK_IMAGE_HEIGHT	src/thirdparty/gl_core_3_3.h	364;"	d
GL_PACK_LSB_FIRST	src/thirdparty/gl_core_3_3.h	258;"	d
GL_PACK_ROW_LENGTH	src/thirdparty/gl_core_3_3.h	259;"	d
GL_PACK_SKIP_IMAGES	src/thirdparty/gl_core_3_3.h	365;"	d
GL_PACK_SKIP_PIXELS	src/thirdparty/gl_core_3_3.h	260;"	d
GL_PACK_SKIP_ROWS	src/thirdparty/gl_core_3_3.h	261;"	d
GL_PACK_SWAP_BYTES	src/thirdparty/gl_core_3_3.h	262;"	d
GL_PIXEL_PACK_BUFFER	src/thirdparty/gl_core_3_3.h	599;"	d
GL_PIXEL_PACK_BUFFER_BINDING	src/thirdparty/gl_core_3_3.h	600;"	d
GL_PIXEL_UNPACK_BUFFER	src/thirdparty/gl_core_3_3.h	601;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	src/thirdparty/gl_core_3_3.h	602;"	d
GL_POINT	src/thirdparty/gl_core_3_3.h	263;"	d
GL_POINTS	src/thirdparty/gl_core_3_3.h	264;"	d
GL_POINT_FADE_THRESHOLD_SIZE	src/thirdparty/gl_core_3_3.h	475;"	d
GL_POINT_SIZE	src/thirdparty/gl_core_3_3.h	265;"	d
GL_POINT_SIZE_GRANULARITY	src/thirdparty/gl_core_3_3.h	266;"	d
GL_POINT_SIZE_RANGE	src/thirdparty/gl_core_3_3.h	267;"	d
GL_POINT_SPRITE_COORD_ORIGIN	src/thirdparty/gl_core_3_3.h	563;"	d
GL_POLYGON_MODE	src/thirdparty/gl_core_3_3.h	268;"	d
GL_POLYGON_OFFSET_FACTOR	src/thirdparty/gl_core_3_3.h	269;"	d
GL_POLYGON_OFFSET_FILL	src/thirdparty/gl_core_3_3.h	270;"	d
GL_POLYGON_OFFSET_LINE	src/thirdparty/gl_core_3_3.h	271;"	d
GL_POLYGON_OFFSET_POINT	src/thirdparty/gl_core_3_3.h	272;"	d
GL_POLYGON_OFFSET_UNITS	src/thirdparty/gl_core_3_3.h	273;"	d
GL_POLYGON_SMOOTH	src/thirdparty/gl_core_3_3.h	274;"	d
GL_POLYGON_SMOOTH_HINT	src/thirdparty/gl_core_3_3.h	275;"	d
GL_PRIMITIVES_GENERATED	src/thirdparty/gl_core_3_3.h	729;"	d
GL_PRIMITIVE_RESTART	src/thirdparty/gl_core_3_3.h	858;"	d
GL_PRIMITIVE_RESTART_INDEX	src/thirdparty/gl_core_3_3.h	859;"	d
GL_PROGRAM_POINT_SIZE	src/thirdparty/gl_core_3_3.h	934;"	d
GL_PROVOKING_VERTEX	src/thirdparty/gl_core_3_3.h	935;"	d
GL_PROXY_TEXTURE_1D	src/thirdparty/gl_core_3_3.h	276;"	d
GL_PROXY_TEXTURE_1D_ARRAY	src/thirdparty/gl_core_3_3.h	730;"	d
GL_PROXY_TEXTURE_2D	src/thirdparty/gl_core_3_3.h	277;"	d
GL_PROXY_TEXTURE_2D_ARRAY	src/thirdparty/gl_core_3_3.h	731;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	src/thirdparty/gl_core_3_3.h	936;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	src/thirdparty/gl_core_3_3.h	937;"	d
GL_PROXY_TEXTURE_3D	src/thirdparty/gl_core_3_3.h	366;"	d
GL_PROXY_TEXTURE_CUBE_MAP	src/thirdparty/gl_core_3_3.h	402;"	d
GL_PROXY_TEXTURE_RECTANGLE	src/thirdparty/gl_core_3_3.h	860;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	src/thirdparty/gl_core_3_3.h	938;"	d
GL_QUERY_BY_REGION_NO_WAIT	src/thirdparty/gl_core_3_3.h	732;"	d
GL_QUERY_BY_REGION_WAIT	src/thirdparty/gl_core_3_3.h	733;"	d
GL_QUERY_COUNTER_BITS	src/thirdparty/gl_core_3_3.h	494;"	d
GL_QUERY_NO_WAIT	src/thirdparty/gl_core_3_3.h	734;"	d
GL_QUERY_RESULT	src/thirdparty/gl_core_3_3.h	495;"	d
GL_QUERY_RESULT_AVAILABLE	src/thirdparty/gl_core_3_3.h	496;"	d
GL_QUERY_WAIT	src/thirdparty/gl_core_3_3.h	735;"	d
GL_R11F_G11F_B10F	src/thirdparty/gl_core_3_3.h	736;"	d
GL_R16	src/thirdparty/gl_core_3_3.h	737;"	d
GL_R16F	src/thirdparty/gl_core_3_3.h	738;"	d
GL_R16I	src/thirdparty/gl_core_3_3.h	739;"	d
GL_R16UI	src/thirdparty/gl_core_3_3.h	740;"	d
GL_R16_SNORM	src/thirdparty/gl_core_3_3.h	861;"	d
GL_R32F	src/thirdparty/gl_core_3_3.h	741;"	d
GL_R32I	src/thirdparty/gl_core_3_3.h	742;"	d
GL_R32UI	src/thirdparty/gl_core_3_3.h	743;"	d
GL_R3_G3_B2	src/thirdparty/gl_core_3_3.h	278;"	d
GL_R8	src/thirdparty/gl_core_3_3.h	744;"	d
GL_R8I	src/thirdparty/gl_core_3_3.h	745;"	d
GL_R8UI	src/thirdparty/gl_core_3_3.h	746;"	d
GL_R8_SNORM	src/thirdparty/gl_core_3_3.h	862;"	d
GL_RASTERIZER_DISCARD	src/thirdparty/gl_core_3_3.h	747;"	d
GL_READ_BUFFER	src/thirdparty/gl_core_3_3.h	279;"	d
GL_READ_FRAMEBUFFER	src/thirdparty/gl_core_3_3.h	748;"	d
GL_READ_FRAMEBUFFER_BINDING	src/thirdparty/gl_core_3_3.h	749;"	d
GL_READ_ONLY	src/thirdparty/gl_core_3_3.h	497;"	d
GL_READ_WRITE	src/thirdparty/gl_core_3_3.h	498;"	d
GL_RED	src/thirdparty/gl_core_3_3.h	280;"	d
GL_RED_INTEGER	src/thirdparty/gl_core_3_3.h	750;"	d
GL_RENDERBUFFER	src/thirdparty/gl_core_3_3.h	751;"	d
GL_RENDERBUFFER_ALPHA_SIZE	src/thirdparty/gl_core_3_3.h	752;"	d
GL_RENDERBUFFER_BINDING	src/thirdparty/gl_core_3_3.h	753;"	d
GL_RENDERBUFFER_BLUE_SIZE	src/thirdparty/gl_core_3_3.h	754;"	d
GL_RENDERBUFFER_DEPTH_SIZE	src/thirdparty/gl_core_3_3.h	755;"	d
GL_RENDERBUFFER_GREEN_SIZE	src/thirdparty/gl_core_3_3.h	756;"	d
GL_RENDERBUFFER_HEIGHT	src/thirdparty/gl_core_3_3.h	757;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	src/thirdparty/gl_core_3_3.h	758;"	d
GL_RENDERBUFFER_RED_SIZE	src/thirdparty/gl_core_3_3.h	759;"	d
GL_RENDERBUFFER_SAMPLES	src/thirdparty/gl_core_3_3.h	760;"	d
GL_RENDERBUFFER_STENCIL_SIZE	src/thirdparty/gl_core_3_3.h	761;"	d
GL_RENDERBUFFER_WIDTH	src/thirdparty/gl_core_3_3.h	762;"	d
GL_RENDERER	src/thirdparty/gl_core_3_3.h	281;"	d
GL_REPEAT	src/thirdparty/gl_core_3_3.h	282;"	d
GL_REPLACE	src/thirdparty/gl_core_3_3.h	283;"	d
GL_RG	src/thirdparty/gl_core_3_3.h	763;"	d
GL_RG16	src/thirdparty/gl_core_3_3.h	764;"	d
GL_RG16F	src/thirdparty/gl_core_3_3.h	765;"	d
GL_RG16I	src/thirdparty/gl_core_3_3.h	766;"	d
GL_RG16UI	src/thirdparty/gl_core_3_3.h	767;"	d
GL_RG16_SNORM	src/thirdparty/gl_core_3_3.h	863;"	d
GL_RG32F	src/thirdparty/gl_core_3_3.h	768;"	d
GL_RG32I	src/thirdparty/gl_core_3_3.h	769;"	d
GL_RG32UI	src/thirdparty/gl_core_3_3.h	770;"	d
GL_RG8	src/thirdparty/gl_core_3_3.h	771;"	d
GL_RG8I	src/thirdparty/gl_core_3_3.h	772;"	d
GL_RG8UI	src/thirdparty/gl_core_3_3.h	773;"	d
GL_RG8_SNORM	src/thirdparty/gl_core_3_3.h	864;"	d
GL_RGB	src/thirdparty/gl_core_3_3.h	284;"	d
GL_RGB10	src/thirdparty/gl_core_3_3.h	285;"	d
GL_RGB10_A2	src/thirdparty/gl_core_3_3.h	286;"	d
GL_RGB10_A2UI	src/thirdparty/gl_core_3_3.h	972;"	d
GL_RGB12	src/thirdparty/gl_core_3_3.h	287;"	d
GL_RGB16	src/thirdparty/gl_core_3_3.h	288;"	d
GL_RGB16F	src/thirdparty/gl_core_3_3.h	774;"	d
GL_RGB16I	src/thirdparty/gl_core_3_3.h	775;"	d
GL_RGB16UI	src/thirdparty/gl_core_3_3.h	776;"	d
GL_RGB16_SNORM	src/thirdparty/gl_core_3_3.h	865;"	d
GL_RGB32F	src/thirdparty/gl_core_3_3.h	777;"	d
GL_RGB32I	src/thirdparty/gl_core_3_3.h	778;"	d
GL_RGB32UI	src/thirdparty/gl_core_3_3.h	779;"	d
GL_RGB4	src/thirdparty/gl_core_3_3.h	289;"	d
GL_RGB5	src/thirdparty/gl_core_3_3.h	290;"	d
GL_RGB5_A1	src/thirdparty/gl_core_3_3.h	291;"	d
GL_RGB8	src/thirdparty/gl_core_3_3.h	292;"	d
GL_RGB8I	src/thirdparty/gl_core_3_3.h	780;"	d
GL_RGB8UI	src/thirdparty/gl_core_3_3.h	781;"	d
GL_RGB8_SNORM	src/thirdparty/gl_core_3_3.h	866;"	d
GL_RGB9_E5	src/thirdparty/gl_core_3_3.h	782;"	d
GL_RGBA	src/thirdparty/gl_core_3_3.h	293;"	d
GL_RGBA12	src/thirdparty/gl_core_3_3.h	294;"	d
GL_RGBA16	src/thirdparty/gl_core_3_3.h	295;"	d
GL_RGBA16F	src/thirdparty/gl_core_3_3.h	783;"	d
GL_RGBA16I	src/thirdparty/gl_core_3_3.h	784;"	d
GL_RGBA16UI	src/thirdparty/gl_core_3_3.h	785;"	d
GL_RGBA16_SNORM	src/thirdparty/gl_core_3_3.h	867;"	d
GL_RGBA2	src/thirdparty/gl_core_3_3.h	296;"	d
GL_RGBA32F	src/thirdparty/gl_core_3_3.h	786;"	d
GL_RGBA32I	src/thirdparty/gl_core_3_3.h	787;"	d
GL_RGBA32UI	src/thirdparty/gl_core_3_3.h	788;"	d
GL_RGBA4	src/thirdparty/gl_core_3_3.h	297;"	d
GL_RGBA8	src/thirdparty/gl_core_3_3.h	298;"	d
GL_RGBA8I	src/thirdparty/gl_core_3_3.h	789;"	d
GL_RGBA8UI	src/thirdparty/gl_core_3_3.h	790;"	d
GL_RGBA8_SNORM	src/thirdparty/gl_core_3_3.h	868;"	d
GL_RGBA_INTEGER	src/thirdparty/gl_core_3_3.h	791;"	d
GL_RGB_INTEGER	src/thirdparty/gl_core_3_3.h	792;"	d
GL_RG_INTEGER	src/thirdparty/gl_core_3_3.h	793;"	d
GL_RIGHT	src/thirdparty/gl_core_3_3.h	299;"	d
GL_SAMPLER_1D	src/thirdparty/gl_core_3_3.h	564;"	d
GL_SAMPLER_1D_ARRAY	src/thirdparty/gl_core_3_3.h	794;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	src/thirdparty/gl_core_3_3.h	795;"	d
GL_SAMPLER_1D_SHADOW	src/thirdparty/gl_core_3_3.h	565;"	d
GL_SAMPLER_2D	src/thirdparty/gl_core_3_3.h	566;"	d
GL_SAMPLER_2D_ARRAY	src/thirdparty/gl_core_3_3.h	796;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	src/thirdparty/gl_core_3_3.h	797;"	d
GL_SAMPLER_2D_MULTISAMPLE	src/thirdparty/gl_core_3_3.h	939;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	src/thirdparty/gl_core_3_3.h	940;"	d
GL_SAMPLER_2D_RECT	src/thirdparty/gl_core_3_3.h	869;"	d
GL_SAMPLER_2D_RECT_SHADOW	src/thirdparty/gl_core_3_3.h	870;"	d
GL_SAMPLER_2D_SHADOW	src/thirdparty/gl_core_3_3.h	567;"	d
GL_SAMPLER_3D	src/thirdparty/gl_core_3_3.h	568;"	d
GL_SAMPLER_BINDING	src/thirdparty/gl_core_3_3.h	973;"	d
GL_SAMPLER_BUFFER	src/thirdparty/gl_core_3_3.h	871;"	d
GL_SAMPLER_CUBE	src/thirdparty/gl_core_3_3.h	569;"	d
GL_SAMPLER_CUBE_SHADOW	src/thirdparty/gl_core_3_3.h	798;"	d
GL_SAMPLES	src/thirdparty/gl_core_3_3.h	403;"	d
GL_SAMPLES_PASSED	src/thirdparty/gl_core_3_3.h	499;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	src/thirdparty/gl_core_3_3.h	404;"	d
GL_SAMPLE_ALPHA_TO_ONE	src/thirdparty/gl_core_3_3.h	405;"	d
GL_SAMPLE_BUFFERS	src/thirdparty/gl_core_3_3.h	406;"	d
GL_SAMPLE_COVERAGE	src/thirdparty/gl_core_3_3.h	407;"	d
GL_SAMPLE_COVERAGE_INVERT	src/thirdparty/gl_core_3_3.h	408;"	d
GL_SAMPLE_COVERAGE_VALUE	src/thirdparty/gl_core_3_3.h	409;"	d
GL_SAMPLE_MASK	src/thirdparty/gl_core_3_3.h	941;"	d
GL_SAMPLE_MASK_VALUE	src/thirdparty/gl_core_3_3.h	942;"	d
GL_SAMPLE_POSITION	src/thirdparty/gl_core_3_3.h	943;"	d
GL_SCISSOR_BOX	src/thirdparty/gl_core_3_3.h	300;"	d
GL_SCISSOR_TEST	src/thirdparty/gl_core_3_3.h	301;"	d
GL_SEPARATE_ATTRIBS	src/thirdparty/gl_core_3_3.h	799;"	d
GL_SET	src/thirdparty/gl_core_3_3.h	302;"	d
GL_SHADER_SOURCE_LENGTH	src/thirdparty/gl_core_3_3.h	570;"	d
GL_SHADER_TYPE	src/thirdparty/gl_core_3_3.h	571;"	d
GL_SHADING_LANGUAGE_VERSION	src/thirdparty/gl_core_3_3.h	572;"	d
GL_SHORT	src/thirdparty/gl_core_3_3.h	303;"	d
GL_SIGNALED	src/thirdparty/gl_core_3_3.h	944;"	d
GL_SIGNED_NORMALIZED	src/thirdparty/gl_core_3_3.h	872;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	src/thirdparty/gl_core_3_3.h	367;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	src/thirdparty/gl_core_3_3.h	368;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	src/thirdparty/gl_core_3_3.h	369;"	d
GL_SMOOTH_POINT_SIZE_RANGE	src/thirdparty/gl_core_3_3.h	370;"	d
GL_SRC1_ALPHA	src/thirdparty/gl_core_3_3.h	500;"	d
GL_SRC1_COLOR	src/thirdparty/gl_core_3_3.h	974;"	d
GL_SRC_ALPHA	src/thirdparty/gl_core_3_3.h	304;"	d
GL_SRC_ALPHA_SATURATE	src/thirdparty/gl_core_3_3.h	305;"	d
GL_SRC_COLOR	src/thirdparty/gl_core_3_3.h	306;"	d
GL_SRGB	src/thirdparty/gl_core_3_3.h	603;"	d
GL_SRGB8	src/thirdparty/gl_core_3_3.h	604;"	d
GL_SRGB8_ALPHA8	src/thirdparty/gl_core_3_3.h	605;"	d
GL_SRGB_ALPHA	src/thirdparty/gl_core_3_3.h	606;"	d
GL_STATIC_COPY	src/thirdparty/gl_core_3_3.h	501;"	d
GL_STATIC_DRAW	src/thirdparty/gl_core_3_3.h	502;"	d
GL_STATIC_READ	src/thirdparty/gl_core_3_3.h	503;"	d
GL_STENCIL	src/thirdparty/gl_core_3_3.h	307;"	d
GL_STENCIL_ATTACHMENT	src/thirdparty/gl_core_3_3.h	800;"	d
GL_STENCIL_BACK_FAIL	src/thirdparty/gl_core_3_3.h	573;"	d
GL_STENCIL_BACK_FUNC	src/thirdparty/gl_core_3_3.h	574;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	src/thirdparty/gl_core_3_3.h	575;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	src/thirdparty/gl_core_3_3.h	576;"	d
GL_STENCIL_BACK_REF	src/thirdparty/gl_core_3_3.h	577;"	d
GL_STENCIL_BACK_VALUE_MASK	src/thirdparty/gl_core_3_3.h	578;"	d
GL_STENCIL_BACK_WRITEMASK	src/thirdparty/gl_core_3_3.h	579;"	d
GL_STENCIL_BUFFER_BIT	src/thirdparty/gl_core_3_3.h	308;"	d
GL_STENCIL_CLEAR_VALUE	src/thirdparty/gl_core_3_3.h	309;"	d
GL_STENCIL_FAIL	src/thirdparty/gl_core_3_3.h	310;"	d
GL_STENCIL_FUNC	src/thirdparty/gl_core_3_3.h	311;"	d
GL_STENCIL_INDEX	src/thirdparty/gl_core_3_3.h	312;"	d
GL_STENCIL_INDEX1	src/thirdparty/gl_core_3_3.h	801;"	d
GL_STENCIL_INDEX16	src/thirdparty/gl_core_3_3.h	802;"	d
GL_STENCIL_INDEX4	src/thirdparty/gl_core_3_3.h	803;"	d
GL_STENCIL_INDEX8	src/thirdparty/gl_core_3_3.h	804;"	d
GL_STENCIL_PASS_DEPTH_FAIL	src/thirdparty/gl_core_3_3.h	313;"	d
GL_STENCIL_PASS_DEPTH_PASS	src/thirdparty/gl_core_3_3.h	314;"	d
GL_STENCIL_REF	src/thirdparty/gl_core_3_3.h	315;"	d
GL_STENCIL_TEST	src/thirdparty/gl_core_3_3.h	316;"	d
GL_STENCIL_VALUE_MASK	src/thirdparty/gl_core_3_3.h	317;"	d
GL_STENCIL_WRITEMASK	src/thirdparty/gl_core_3_3.h	318;"	d
GL_STEREO	src/thirdparty/gl_core_3_3.h	319;"	d
GL_STREAM_COPY	src/thirdparty/gl_core_3_3.h	504;"	d
GL_STREAM_DRAW	src/thirdparty/gl_core_3_3.h	505;"	d
GL_STREAM_READ	src/thirdparty/gl_core_3_3.h	506;"	d
GL_SUBPIXEL_BITS	src/thirdparty/gl_core_3_3.h	320;"	d
GL_SYNC_CONDITION	src/thirdparty/gl_core_3_3.h	945;"	d
GL_SYNC_FENCE	src/thirdparty/gl_core_3_3.h	946;"	d
GL_SYNC_FLAGS	src/thirdparty/gl_core_3_3.h	947;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	src/thirdparty/gl_core_3_3.h	948;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	src/thirdparty/gl_core_3_3.h	949;"	d
GL_SYNC_STATUS	src/thirdparty/gl_core_3_3.h	950;"	d
GL_TEXTURE	src/thirdparty/gl_core_3_3.h	321;"	d
GL_TEXTURE0	src/thirdparty/gl_core_3_3.h	410;"	d
GL_TEXTURE1	src/thirdparty/gl_core_3_3.h	411;"	d
GL_TEXTURE10	src/thirdparty/gl_core_3_3.h	412;"	d
GL_TEXTURE11	src/thirdparty/gl_core_3_3.h	413;"	d
GL_TEXTURE12	src/thirdparty/gl_core_3_3.h	414;"	d
GL_TEXTURE13	src/thirdparty/gl_core_3_3.h	415;"	d
GL_TEXTURE14	src/thirdparty/gl_core_3_3.h	416;"	d
GL_TEXTURE15	src/thirdparty/gl_core_3_3.h	417;"	d
GL_TEXTURE16	src/thirdparty/gl_core_3_3.h	418;"	d
GL_TEXTURE17	src/thirdparty/gl_core_3_3.h	419;"	d
GL_TEXTURE18	src/thirdparty/gl_core_3_3.h	420;"	d
GL_TEXTURE19	src/thirdparty/gl_core_3_3.h	421;"	d
GL_TEXTURE2	src/thirdparty/gl_core_3_3.h	422;"	d
GL_TEXTURE20	src/thirdparty/gl_core_3_3.h	423;"	d
GL_TEXTURE21	src/thirdparty/gl_core_3_3.h	424;"	d
GL_TEXTURE22	src/thirdparty/gl_core_3_3.h	425;"	d
GL_TEXTURE23	src/thirdparty/gl_core_3_3.h	426;"	d
GL_TEXTURE24	src/thirdparty/gl_core_3_3.h	427;"	d
GL_TEXTURE25	src/thirdparty/gl_core_3_3.h	428;"	d
GL_TEXTURE26	src/thirdparty/gl_core_3_3.h	429;"	d
GL_TEXTURE27	src/thirdparty/gl_core_3_3.h	430;"	d
GL_TEXTURE28	src/thirdparty/gl_core_3_3.h	431;"	d
GL_TEXTURE29	src/thirdparty/gl_core_3_3.h	432;"	d
GL_TEXTURE3	src/thirdparty/gl_core_3_3.h	433;"	d
GL_TEXTURE30	src/thirdparty/gl_core_3_3.h	434;"	d
GL_TEXTURE31	src/thirdparty/gl_core_3_3.h	435;"	d
GL_TEXTURE4	src/thirdparty/gl_core_3_3.h	436;"	d
GL_TEXTURE5	src/thirdparty/gl_core_3_3.h	437;"	d
GL_TEXTURE6	src/thirdparty/gl_core_3_3.h	438;"	d
GL_TEXTURE7	src/thirdparty/gl_core_3_3.h	439;"	d
GL_TEXTURE8	src/thirdparty/gl_core_3_3.h	440;"	d
GL_TEXTURE9	src/thirdparty/gl_core_3_3.h	441;"	d
GL_TEXTURE_1D	src/thirdparty/gl_core_3_3.h	322;"	d
GL_TEXTURE_1D_ARRAY	src/thirdparty/gl_core_3_3.h	805;"	d
GL_TEXTURE_2D	src/thirdparty/gl_core_3_3.h	323;"	d
GL_TEXTURE_2D_ARRAY	src/thirdparty/gl_core_3_3.h	806;"	d
GL_TEXTURE_2D_MULTISAMPLE	src/thirdparty/gl_core_3_3.h	951;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	src/thirdparty/gl_core_3_3.h	952;"	d
GL_TEXTURE_3D	src/thirdparty/gl_core_3_3.h	371;"	d
GL_TEXTURE_ALPHA_SIZE	src/thirdparty/gl_core_3_3.h	324;"	d
GL_TEXTURE_ALPHA_TYPE	src/thirdparty/gl_core_3_3.h	807;"	d
GL_TEXTURE_BASE_LEVEL	src/thirdparty/gl_core_3_3.h	372;"	d
GL_TEXTURE_BINDING_1D	src/thirdparty/gl_core_3_3.h	325;"	d
GL_TEXTURE_BINDING_1D_ARRAY	src/thirdparty/gl_core_3_3.h	808;"	d
GL_TEXTURE_BINDING_2D	src/thirdparty/gl_core_3_3.h	326;"	d
GL_TEXTURE_BINDING_2D_ARRAY	src/thirdparty/gl_core_3_3.h	809;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	src/thirdparty/gl_core_3_3.h	953;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	src/thirdparty/gl_core_3_3.h	954;"	d
GL_TEXTURE_BINDING_3D	src/thirdparty/gl_core_3_3.h	373;"	d
GL_TEXTURE_BINDING_BUFFER	src/thirdparty/gl_core_3_3.h	873;"	d
GL_TEXTURE_BINDING_CUBE_MAP	src/thirdparty/gl_core_3_3.h	442;"	d
GL_TEXTURE_BINDING_RECTANGLE	src/thirdparty/gl_core_3_3.h	874;"	d
GL_TEXTURE_BLUE_SIZE	src/thirdparty/gl_core_3_3.h	327;"	d
GL_TEXTURE_BLUE_TYPE	src/thirdparty/gl_core_3_3.h	810;"	d
GL_TEXTURE_BORDER_COLOR	src/thirdparty/gl_core_3_3.h	328;"	d
GL_TEXTURE_BUFFER	src/thirdparty/gl_core_3_3.h	875;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	src/thirdparty/gl_core_3_3.h	876;"	d
GL_TEXTURE_COMPARE_FUNC	src/thirdparty/gl_core_3_3.h	476;"	d
GL_TEXTURE_COMPARE_MODE	src/thirdparty/gl_core_3_3.h	477;"	d
GL_TEXTURE_COMPRESSED	src/thirdparty/gl_core_3_3.h	443;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	src/thirdparty/gl_core_3_3.h	444;"	d
GL_TEXTURE_COMPRESSION_HINT	src/thirdparty/gl_core_3_3.h	445;"	d
GL_TEXTURE_CUBE_MAP	src/thirdparty/gl_core_3_3.h	446;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	src/thirdparty/gl_core_3_3.h	447;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	src/thirdparty/gl_core_3_3.h	448;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	src/thirdparty/gl_core_3_3.h	449;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	src/thirdparty/gl_core_3_3.h	450;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	src/thirdparty/gl_core_3_3.h	451;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	src/thirdparty/gl_core_3_3.h	452;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	src/thirdparty/gl_core_3_3.h	955;"	d
GL_TEXTURE_DEPTH	src/thirdparty/gl_core_3_3.h	374;"	d
GL_TEXTURE_DEPTH_SIZE	src/thirdparty/gl_core_3_3.h	478;"	d
GL_TEXTURE_DEPTH_TYPE	src/thirdparty/gl_core_3_3.h	811;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	src/thirdparty/gl_core_3_3.h	956;"	d
GL_TEXTURE_GREEN_SIZE	src/thirdparty/gl_core_3_3.h	329;"	d
GL_TEXTURE_GREEN_TYPE	src/thirdparty/gl_core_3_3.h	812;"	d
GL_TEXTURE_HEIGHT	src/thirdparty/gl_core_3_3.h	330;"	d
GL_TEXTURE_INTERNAL_FORMAT	src/thirdparty/gl_core_3_3.h	331;"	d
GL_TEXTURE_LOD_BIAS	src/thirdparty/gl_core_3_3.h	479;"	d
GL_TEXTURE_MAG_FILTER	src/thirdparty/gl_core_3_3.h	332;"	d
GL_TEXTURE_MAX_LEVEL	src/thirdparty/gl_core_3_3.h	375;"	d
GL_TEXTURE_MAX_LOD	src/thirdparty/gl_core_3_3.h	376;"	d
GL_TEXTURE_MIN_FILTER	src/thirdparty/gl_core_3_3.h	333;"	d
GL_TEXTURE_MIN_LOD	src/thirdparty/gl_core_3_3.h	377;"	d
GL_TEXTURE_RECTANGLE	src/thirdparty/gl_core_3_3.h	877;"	d
GL_TEXTURE_RED_SIZE	src/thirdparty/gl_core_3_3.h	334;"	d
GL_TEXTURE_RED_TYPE	src/thirdparty/gl_core_3_3.h	813;"	d
GL_TEXTURE_SAMPLES	src/thirdparty/gl_core_3_3.h	957;"	d
GL_TEXTURE_SHARED_SIZE	src/thirdparty/gl_core_3_3.h	814;"	d
GL_TEXTURE_STENCIL_SIZE	src/thirdparty/gl_core_3_3.h	815;"	d
GL_TEXTURE_SWIZZLE_A	src/thirdparty/gl_core_3_3.h	975;"	d
GL_TEXTURE_SWIZZLE_B	src/thirdparty/gl_core_3_3.h	976;"	d
GL_TEXTURE_SWIZZLE_G	src/thirdparty/gl_core_3_3.h	977;"	d
GL_TEXTURE_SWIZZLE_R	src/thirdparty/gl_core_3_3.h	978;"	d
GL_TEXTURE_SWIZZLE_RGBA	src/thirdparty/gl_core_3_3.h	979;"	d
GL_TEXTURE_WIDTH	src/thirdparty/gl_core_3_3.h	335;"	d
GL_TEXTURE_WRAP_R	src/thirdparty/gl_core_3_3.h	378;"	d
GL_TEXTURE_WRAP_S	src/thirdparty/gl_core_3_3.h	336;"	d
GL_TEXTURE_WRAP_T	src/thirdparty/gl_core_3_3.h	337;"	d
GL_TIMEOUT_EXPIRED	src/thirdparty/gl_core_3_3.h	958;"	d
GL_TIMEOUT_IGNORED	src/thirdparty/gl_core_3_3.h	959;"	d
GL_TIMESTAMP	src/thirdparty/gl_core_3_3.h	980;"	d
GL_TIME_ELAPSED	src/thirdparty/gl_core_3_3.h	981;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	src/thirdparty/gl_core_3_3.h	816;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	src/thirdparty/gl_core_3_3.h	817;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	src/thirdparty/gl_core_3_3.h	818;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	src/thirdparty/gl_core_3_3.h	819;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	src/thirdparty/gl_core_3_3.h	820;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	src/thirdparty/gl_core_3_3.h	821;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	src/thirdparty/gl_core_3_3.h	822;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	src/thirdparty/gl_core_3_3.h	823;"	d
GL_TRIANGLES	src/thirdparty/gl_core_3_3.h	338;"	d
GL_TRIANGLES_ADJACENCY	src/thirdparty/gl_core_3_3.h	960;"	d
GL_TRIANGLE_FAN	src/thirdparty/gl_core_3_3.h	339;"	d
GL_TRIANGLE_STRIP	src/thirdparty/gl_core_3_3.h	340;"	d
GL_TRIANGLE_STRIP_ADJACENCY	src/thirdparty/gl_core_3_3.h	961;"	d
GL_TRUE	src/thirdparty/gl_core_3_3.h	341;"	d
GL_UNIFORM_ARRAY_STRIDE	src/thirdparty/gl_core_3_3.h	878;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	src/thirdparty/gl_core_3_3.h	879;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	src/thirdparty/gl_core_3_3.h	880;"	d
GL_UNIFORM_BLOCK_BINDING	src/thirdparty/gl_core_3_3.h	881;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	src/thirdparty/gl_core_3_3.h	882;"	d
GL_UNIFORM_BLOCK_INDEX	src/thirdparty/gl_core_3_3.h	883;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	src/thirdparty/gl_core_3_3.h	884;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	src/thirdparty/gl_core_3_3.h	885;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	src/thirdparty/gl_core_3_3.h	886;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	src/thirdparty/gl_core_3_3.h	887;"	d
GL_UNIFORM_BUFFER	src/thirdparty/gl_core_3_3.h	888;"	d
GL_UNIFORM_BUFFER_BINDING	src/thirdparty/gl_core_3_3.h	889;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	src/thirdparty/gl_core_3_3.h	890;"	d
GL_UNIFORM_BUFFER_SIZE	src/thirdparty/gl_core_3_3.h	891;"	d
GL_UNIFORM_BUFFER_START	src/thirdparty/gl_core_3_3.h	892;"	d
GL_UNIFORM_IS_ROW_MAJOR	src/thirdparty/gl_core_3_3.h	893;"	d
GL_UNIFORM_MATRIX_STRIDE	src/thirdparty/gl_core_3_3.h	894;"	d
GL_UNIFORM_NAME_LENGTH	src/thirdparty/gl_core_3_3.h	895;"	d
GL_UNIFORM_OFFSET	src/thirdparty/gl_core_3_3.h	896;"	d
GL_UNIFORM_SIZE	src/thirdparty/gl_core_3_3.h	897;"	d
GL_UNIFORM_TYPE	src/thirdparty/gl_core_3_3.h	898;"	d
GL_UNPACK_ALIGNMENT	src/thirdparty/gl_core_3_3.h	342;"	d
GL_UNPACK_IMAGE_HEIGHT	src/thirdparty/gl_core_3_3.h	379;"	d
GL_UNPACK_LSB_FIRST	src/thirdparty/gl_core_3_3.h	343;"	d
GL_UNPACK_ROW_LENGTH	src/thirdparty/gl_core_3_3.h	344;"	d
GL_UNPACK_SKIP_IMAGES	src/thirdparty/gl_core_3_3.h	380;"	d
GL_UNPACK_SKIP_PIXELS	src/thirdparty/gl_core_3_3.h	345;"	d
GL_UNPACK_SKIP_ROWS	src/thirdparty/gl_core_3_3.h	346;"	d
GL_UNPACK_SWAP_BYTES	src/thirdparty/gl_core_3_3.h	347;"	d
GL_UNSIGNALED	src/thirdparty/gl_core_3_3.h	962;"	d
GL_UNSIGNED_BYTE	src/thirdparty/gl_core_3_3.h	348;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	src/thirdparty/gl_core_3_3.h	381;"	d
GL_UNSIGNED_BYTE_3_3_2	src/thirdparty/gl_core_3_3.h	382;"	d
GL_UNSIGNED_INT	src/thirdparty/gl_core_3_3.h	349;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	src/thirdparty/gl_core_3_3.h	824;"	d
GL_UNSIGNED_INT_10_10_10_2	src/thirdparty/gl_core_3_3.h	383;"	d
GL_UNSIGNED_INT_24_8	src/thirdparty/gl_core_3_3.h	825;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	src/thirdparty/gl_core_3_3.h	384;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	src/thirdparty/gl_core_3_3.h	826;"	d
GL_UNSIGNED_INT_8_8_8_8	src/thirdparty/gl_core_3_3.h	385;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	src/thirdparty/gl_core_3_3.h	386;"	d
GL_UNSIGNED_INT_SAMPLER_1D	src/thirdparty/gl_core_3_3.h	827;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	src/thirdparty/gl_core_3_3.h	828;"	d
GL_UNSIGNED_INT_SAMPLER_2D	src/thirdparty/gl_core_3_3.h	829;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	src/thirdparty/gl_core_3_3.h	830;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	src/thirdparty/gl_core_3_3.h	963;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	src/thirdparty/gl_core_3_3.h	964;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	src/thirdparty/gl_core_3_3.h	899;"	d
GL_UNSIGNED_INT_SAMPLER_3D	src/thirdparty/gl_core_3_3.h	831;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	src/thirdparty/gl_core_3_3.h	900;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	src/thirdparty/gl_core_3_3.h	832;"	d
GL_UNSIGNED_INT_VEC2	src/thirdparty/gl_core_3_3.h	833;"	d
GL_UNSIGNED_INT_VEC3	src/thirdparty/gl_core_3_3.h	834;"	d
GL_UNSIGNED_INT_VEC4	src/thirdparty/gl_core_3_3.h	835;"	d
GL_UNSIGNED_NORMALIZED	src/thirdparty/gl_core_3_3.h	836;"	d
GL_UNSIGNED_SHORT	src/thirdparty/gl_core_3_3.h	350;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	src/thirdparty/gl_core_3_3.h	387;"	d
GL_UNSIGNED_SHORT_4_4_4_4	src/thirdparty/gl_core_3_3.h	388;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	src/thirdparty/gl_core_3_3.h	389;"	d
GL_UNSIGNED_SHORT_5_5_5_1	src/thirdparty/gl_core_3_3.h	390;"	d
GL_UNSIGNED_SHORT_5_6_5	src/thirdparty/gl_core_3_3.h	391;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	src/thirdparty/gl_core_3_3.h	392;"	d
GL_UPPER_LEFT	src/thirdparty/gl_core_3_3.h	580;"	d
GL_VALIDATE_STATUS	src/thirdparty/gl_core_3_3.h	581;"	d
GL_VENDOR	src/thirdparty/gl_core_3_3.h	351;"	d
GL_VERSION	src/thirdparty/gl_core_3_3.h	352;"	d
GL_VERTEX_ARRAY_BINDING	src/thirdparty/gl_core_3_3.h	837;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	src/thirdparty/gl_core_3_3.h	507;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	src/thirdparty/gl_core_3_3.h	982;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	src/thirdparty/gl_core_3_3.h	582;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	src/thirdparty/gl_core_3_3.h	838;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	src/thirdparty/gl_core_3_3.h	583;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	src/thirdparty/gl_core_3_3.h	584;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	src/thirdparty/gl_core_3_3.h	585;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	src/thirdparty/gl_core_3_3.h	586;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	src/thirdparty/gl_core_3_3.h	587;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	src/thirdparty/gl_core_3_3.h	588;"	d
GL_VERTEX_SHADER	src/thirdparty/gl_core_3_3.h	589;"	d
GL_VIEWPORT	src/thirdparty/gl_core_3_3.h	353;"	d
GL_WAIT_FAILED	src/thirdparty/gl_core_3_3.h	965;"	d
GL_WRITE_ONLY	src/thirdparty/gl_core_3_3.h	508;"	d
GL_XOR	src/thirdparty/gl_core_3_3.h	354;"	d
GL_ZERO	src/thirdparty/gl_core_3_3.h	355;"	d
GLbitfield	src/thirdparty/gl_core_3_3.h	/^	typedef unsigned int GLbitfield;$/;"	t
GLboolean	src/thirdparty/gl_core_3_3.h	/^	typedef unsigned char GLboolean;$/;"	t
GLbyte	src/thirdparty/gl_core_3_3.h	/^	typedef signed char GLbyte;$/;"	t
GLchar	src/thirdparty/gl_core_3_3.h	/^	typedef char GLchar;$/;"	t
GLcharARB	src/thirdparty/gl_core_3_3.h	/^	typedef char GLcharARB;$/;"	t
GLclampd	src/thirdparty/gl_core_3_3.h	/^	typedef double GLclampd;$/;"	t
GLclampf	src/thirdparty/gl_core_3_3.h	/^	typedef float GLclampf;$/;"	t
GLdouble	src/thirdparty/gl_core_3_3.h	/^	typedef double GLdouble;$/;"	t
GLenum	src/thirdparty/gl_core_3_3.h	/^	typedef unsigned int GLenum;$/;"	t
GLfixed	src/thirdparty/gl_core_3_3.h	/^		typedef GLint GLfixed;$/;"	t
GLfloat	src/thirdparty/gl_core_3_3.h	/^	typedef float GLfloat;$/;"	t
GLhalf	src/thirdparty/gl_core_3_3.h	/^		typedef unsigned short GLhalf;$/;"	t
GLhalfARB	src/thirdparty/gl_core_3_3.h	/^		typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	src/thirdparty/gl_core_3_3.h	/^		typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	src/thirdparty/gl_core_3_3.h	/^typedef unsigned int GLhandleARB;$/;"	t
GLhandleARB	src/thirdparty/gl_core_3_3.h	/^typedef void *GLhandleARB;$/;"	t
GLint	src/thirdparty/gl_core_3_3.h	/^	typedef int GLint;$/;"	t
GLint64	src/thirdparty/gl_core_3_3.h	/^		typedef int64_t GLint64;$/;"	t
GLint64EXT	src/thirdparty/gl_core_3_3.h	/^		typedef int64_t GLint64EXT;$/;"	t
GLintptr	src/thirdparty/gl_core_3_3.h	/^		typedef ptrdiff_t GLintptr;$/;"	t
GLintptrARB	src/thirdparty/gl_core_3_3.h	/^		typedef ptrdiff_t GLintptrARB;$/;"	t
GLshort	src/thirdparty/gl_core_3_3.h	/^	typedef short GLshort;$/;"	t
GLsizei	src/thirdparty/gl_core_3_3.h	/^	typedef int GLsizei;$/;"	t
GLsizeiptr	src/thirdparty/gl_core_3_3.h	/^		typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptrARB	src/thirdparty/gl_core_3_3.h	/^		typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLsync	src/thirdparty/gl_core_3_3.h	/^		typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	src/thirdparty/gl_core_3_3.h	/^	typedef unsigned char GLubyte;$/;"	t
GLuint	src/thirdparty/gl_core_3_3.h	/^	typedef unsigned int GLuint;$/;"	t
GLuint64	src/thirdparty/gl_core_3_3.h	/^		typedef uint64_t GLuint64;$/;"	t
GLuint64EXT	src/thirdparty/gl_core_3_3.h	/^		typedef uint64_t GLuint64EXT;$/;"	t
GLushort	src/thirdparty/gl_core_3_3.h	/^	typedef unsigned short GLushort;$/;"	t
GLvdpauSurfaceNV	src/thirdparty/gl_core_3_3.h	/^		typedef GLintptr GLvdpauSurfaceNV;$/;"	t
GLvoid	src/thirdparty/gl_core_3_3.h	/^	typedef void GLvoid;$/;"	t
Game	src/rituals_game.cpp	/^Game_Main* Game;$/;"	v
Game_Input	src/rituals_game.cpp	/^struct Game_Input$/;"	s	file:
Game_Main	src/rituals_game.cpp	/^struct Game_Main$/;"	s	file:
Game_Registry	src/rituals_game.cpp	/^typedef struct Game_Registry Game_Registry;$/;"	t	typeref:struct:Game_Registry	file:
Game_Registry	src/rituals_game_registry.cpp	/^struct Game_Registry$/;"	s	file:
Game_State	src/rituals_game.cpp	/^enum Game_State$/;"	g	file:
Game_State_Menu	src/rituals_game.cpp	/^	Game_State_Menu,$/;"	e	enum:Game_State	file:
Game_State_None	src/rituals_game.cpp	/^	Game_State_None,$/;"	e	enum:Game_State	file:
Game_State_Play	src/rituals_game.cpp	/^	Game_State_Play$/;"	e	enum:Game_State	file:
GenerateBinarySearchForType	src/rituals_sort_generator.cpp	86;"	d	file:
GenerateBinarySearchForType	src/rituals_sort_macros.cpp	82;"	d	file:
GenerateInsertionSortForType	src/rituals_sort_generator.cpp	35;"	d	file:
GenerateInsertionSortForType	src/rituals_sort_macros.cpp	35;"	d	file:
GenerateIntrosortForType	src/rituals_sort_generator.cpp	49;"	d	file:
GenerateIntrosortForType	src/rituals_sort_macros.cpp	49;"	d	file:
GenerateQuicksortForType	src/rituals_sort_generator.cpp	12;"	d	file:
GenerateQuicksortForType	src/rituals_sort_macros.cpp	12;"	d	file:
Gigabytes	src/metaprogram/metaprogram_main.cpp	75;"	d	file:
Gigabytes	src/rituals_main.cpp	205;"	d	file:
Gigabytes	src/rituals_win32.cpp	84;"	d	file:
Gui_ButtonActiveColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonActiveColor = _color(.9, .9, .9, 1) * Gui_Tint;$/;"	v
Gui_ButtonDownColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonDownColor = _color(.5, .5, .5, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineActiveColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineActiveColor = _color(1, 1, 1, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineActiveColor2	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineActiveColor2 = _color(0.5, 0.5, 0.5, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineDownColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineDownColor = _color(.4, .4, .4, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineDownColor2	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineDownColor2 = _color(.7, .7, .7, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineRestColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineRestColor = _color(.9, .9, .9, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineRestColor2	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineRestColor2 = _color(0.5, 0.5, 0.5, 1) * Gui_Tint;$/;"	v
Gui_ButtonRestColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonRestColor = _color(.8, .8, .8, 1) * Gui_Tint;$/;"	v
Gui_ButtonTextColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonTextColor = _color(0, 0, 0, 1);$/;"	v
Gui_ButtonTextDownColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonTextDownColor = Gui_ButtonTextColor;$/;"	v
Gui_Context	src/rituals_gui.cpp	/^struct Gui_Context$/;"	s	file:
Gui_TextBackgroundColor	src/rituals_gui.cpp	/^Vec4 Gui_TextBackgroundColor = Vec4{0, 0, 0, 0.8f};$/;"	v
Gui_TextInputActiveColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputActiveColor = _color(0.5, 0.5, 0.5, 1) * Gui_Tint;$/;"	v
Gui_TextInputHotColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputHotColor = _color(0.6, 0.6, 0.6, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineActiveColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineActiveColor = _color(0.4, 0.4, 0.4, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineActiveColor2	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineActiveColor2 = _color(0.7, 0.7, 0.7, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineHotColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineHotColor = _color(0.5, 0.5, 0.5, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineHotColor2	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineHotColor2 = _color(0.7, 0.7, 0.7, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineRestColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineRestColor = _color(0.2, 0.2, 0.2, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineRestColor2	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineRestColor2 = _color(0.4, 0.4, 0.4, 1) * Gui_Tint;$/;"	v
Gui_TextInputRestColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputRestColor = _color(0.3, 0.3, 0.3, 1) * Gui_Tint;$/;"	v
Gui_Text_Input_Handle	src/rituals_gui.cpp	/^struct Gui_Text_Input_Handle$/;"	s	file:
Gui_Tint	src/rituals_gui.cpp	/^Vec4 Gui_Tint = _color(0.88, 0.89, 1, 1);$/;"	v
Gui_Window_Handle	src/rituals_gui.cpp	/^struct Gui_Window_Handle$/;"	s	file:
Half_TS	src/rituals_game_registry.cpp	133;"	d	file:
Has_Flag	src/metaprogram/metaprogram_main.cpp	71;"	d	file:
Has_Flag	src/rituals_main.cpp	199;"	d	file:
Hash	src/metaprogram/metaprogram_parser.cpp	/^typedef uint64 Hash;$/;"	t	file:
Hitbox	src/rituals_world_area.cpp	/^struct Hitbox$/;"	s	file:
Hitbox_Contact	src/rituals_world_area.cpp	/^struct Hitbox_Contact$/;"	s	file:
Input	src/rituals_game.cpp	/^Game_Input* Input;$/;"	v
InputTextCapacity	src/rituals_game.cpp	44;"	d	file:
Inventory	src/rituals_inventory.cpp	/^struct Inventory$/;"	s	file:
Item_Book	src/rituals_game_info.cpp	/^	Item_Book,$/;"	e	enum:Item_Info_Types	file:
Item_Hooknife	src/rituals_game_info.cpp	/^	Item_Hooknife,$/;"	e	enum:Item_Info_Types	file:
Item_Info	src/rituals_game_info.cpp	/^struct Item_Info$/;"	s	file:
Item_Info_Types	src/rituals_game_info.cpp	/^enum Item_Info_Types$/;"	g	file:
Item_Info_Types_Count	src/rituals_game_info.cpp	/^	Item_Info_Types_Count$/;"	e	enum:Item_Info_Types	file:
Item_None	src/rituals_game_info.cpp	/^	Item_None,$/;"	e	enum:Item_Info_Types	file:
Item_Rock	src/rituals_game_info.cpp	/^	Item_Rock,$/;"	e	enum:Item_Info_Types	file:
Item_Rope	src/rituals_game_info.cpp	/^	Item_Rope,$/;"	e	enum:Item_Info_Types	file:
Item_Stack	src/rituals_inventory.cpp	/^struct Item_Stack$/;"	s	file:
Kilobytes	src/metaprogram/metaprogram_main.cpp	73;"	d	file:
Kilobytes	src/rituals_main.cpp	203;"	d	file:
Kilobytes	src/rituals_win32.cpp	82;"	d	file:
Lexer	src/metaprogram/metaprogram_parser.cpp	/^struct Lexer$/;"	s	file:
Lexer_File	src/metaprogram/metaprogram_parser.cpp	/^struct Lexer_File$/;"	s	file:
Lexer_Location	src/metaprogram/metaprogram_parser.cpp	/^struct Lexer_Location$/;"	s	file:
Log_Error	src/metaprogram/metaprogram_main.cpp	77;"	d	file:
Log_Error	src/rituals_game.cpp	26;"	d	file:
Map	helping_gb.cpp	/^struct Map {$/;"	s	file:
MapEntry	helping_gb.cpp	/^struct MapEntry {$/;"	s	file:
MapFindResult	helping_gb.cpp	/^typedef struct MapFindResult {$/;"	s	file:
MapFindResult	helping_gb.cpp	/^} MapFindResult;$/;"	t	typeref:struct:MapFindResult	file:
Math_Deg2Rad	src/rituals_win32.cpp	67;"	d	file:
Math_DegToRad	src/rituals_main.cpp	180;"	d	file:
Math_InvSqrt2	src/rituals_main.cpp	176;"	d	file:
Math_InvSqrt2	src/rituals_win32.cpp	63;"	d	file:
Math_Pi	src/rituals_main.cpp	177;"	d	file:
Math_Pi	src/rituals_win32.cpp	64;"	d	file:
Math_Rad2Deg	src/rituals_win32.cpp	66;"	d	file:
Math_RadToDeg	src/rituals_main.cpp	179;"	d	file:
Math_Sqrt2	src/rituals_main.cpp	175;"	d	file:
Math_Sqrt2	src/rituals_win32.cpp	62;"	d	file:
Math_Tau	src/rituals_main.cpp	178;"	d	file:
Math_Tau	src/rituals_win32.cpp	65;"	d	file:
Max	src/metaprogram/metaprogram_main.cpp	68;"	d	file:
Max	src/rituals_main.cpp	196;"	d	file:
MaxRegistryInfoEntries	src/rituals_game_registry.cpp	41;"	d	file:
Megabytes	src/metaprogram/metaprogram_main.cpp	74;"	d	file:
Megabytes	src/rituals_main.cpp	204;"	d	file:
Megabytes	src/rituals_win32.cpp	83;"	d	file:
Memory_Arena	src/rituals_memory.cpp	/^struct Memory_Arena$/;"	s	file:
Menu_State	src/rituals_main.cpp	/^struct Menu_State$/;"	s	file:
Metaprogram	src/metaprogram/metaprogram_main.cpp	/^Metaprogram_Core* Metaprogram;$/;"	v
Metaprogram_Core	src/metaprogram/metaprogram_main.cpp	/^struct Metaprogram_Core$/;"	s	file:
Min	src/metaprogram/metaprogram_main.cpp	67;"	d	file:
Min	src/rituals_main.cpp	195;"	d	file:
MixerNumberOfChannels	src/rituals_main.cpp	188;"	d	file:
Mixer_Number_Of_Channels	src/rituals_win32.cpp	75;"	d	file:
NOMINMAX	src/thirdparty/gl_core_3_3.h	35;"	d
NOMINMAX	src/thirdparty/gl_core_3_3.h	43;"	d
OpenGL_Renderer	src/rituals_game.cpp	/^typedef struct OpenGL_Renderer OpenGL_Renderer;$/;"	t	typeref:struct:OpenGL_Renderer	file:
OpenGL_Renderer	src/rituals_renderer.cpp	/^struct OpenGL_Renderer$/;"	s	file:
OpenGL_Renderer	src/wtb_sprite_renderer.h	/^struct OpenGL_Renderer$/;"	s
Operator_BooleanEquals	src/metaprogram/metaprogram_parser.cpp	/^	Operator_BooleanEquals,$/;"	e	enum:Token_Kind	file:
Operator_BooleanGreaterEquals	src/metaprogram/metaprogram_parser.cpp	/^	Operator_BooleanGreaterEquals,$/;"	e	enum:Token_Kind	file:
Operator_BooleanLessEquals	src/metaprogram/metaprogram_parser.cpp	/^	Operator_BooleanLessEquals,$/;"	e	enum:Token_Kind	file:
Operator_BooleanNotEquals	src/metaprogram/metaprogram_parser.cpp	/^	Operator_BooleanNotEquals,$/;"	e	enum:Token_Kind	file:
Operator_Decrement	src/metaprogram/metaprogram_parser.cpp	/^	Operator_Decrement,$/;"	e	enum:Token_Kind	file:
Operator_Increment	src/metaprogram/metaprogram_parser.cpp	/^	Operator_Increment,$/;"	e	enum:Token_Kind	file:
Operator_LogicalAnd	src/metaprogram/metaprogram_parser.cpp	/^	Operator_LogicalAnd,$/;"	e	enum:Token_Kind	file:
Operator_LogicalOr	src/metaprogram/metaprogram_parser.cpp	/^	Operator_LogicalOr,$/;"	e	enum:Token_Kind	file:
Operator_PtrMemberAccess	src/metaprogram/metaprogram_parser.cpp	/^	Operator_PtrMemberAccess,$/;"	e	enum:Token_Kind	file:
POINTER_C_GENERATED_HEADER_OPENGL_H	src/thirdparty/gl_core_3_3.h	2;"	d
Particle	src/rituals_particles.cpp	/^struct Particle$/;"	s	file:
Particle_Style	src/rituals_particles.cpp	/^struct Particle_Style$/;"	s	file:
PathSeparator	src/metaprogram/metaprogram_main.cpp	64;"	d	file:
PathSeparator	src/rituals_main.cpp	192;"	d	file:
PathSeparatorChar	src/metaprogram/metaprogram_main.cpp	65;"	d	file:
PathSeparatorChar	src/rituals_main.cpp	193;"	d	file:
Path_Separator	src/rituals_win32.cpp	79;"	d	file:
Path_Separator_Char	src/rituals_win32.cpp	80;"	d	file:
PickupKind_Health	src/rituals_game_info.cpp	/^	PickupKind_Health$/;"	e	enum:Rituals_Pickup_Kind	file:
PickupKind_Item	src/rituals_game_info.cpp	/^	PickupKind_Item,$/;"	e	enum:Rituals_Pickup_Kind	file:
Play_State	src/rituals_main.cpp	/^struct Play_State$/;"	s	file:
Proc_Arg	src/metaprogram/metaprogram_parser.cpp	/^struct Proc_Arg$/;"	s	file:
Proc_Prototype	src/metaprogram/metaprogram_parser.cpp	/^struct Proc_Prototype$/;"	s	file:
RITUALS_USE_FLOAT32	src/rituals_main.cpp	164;"	d	file:
Random	src/rituals_random.cpp	/^struct Random$/;"	s	file:
Rect2	src/rituals_math.cpp	/^union Rect2$/;"	u	file:
Rect2_Clip_Info	src/rituals_math.cpp	/^struct Rect2_Clip_Info$/;"	s	file:
Rect2i	src/rituals_math.cpp	/^struct Rect2i$/;"	s	file:
Registry	src/rituals_game_registry.cpp	/^Game_Registry* Registry;$/;"	v
Render_Group	src/rituals_renderer.cpp	/^struct Render_Group$/;"	s	file:
Render_Group	src/wtb_sprite_renderer.h	/^struct Render_Group$/;"	s
Renderer	src/rituals_game.cpp	/^OpenGL_Renderer* Renderer;$/;"	v
Renderer_Group	src/rituals_game.cpp	/^typedef struct Render_Group Renderer_Group;$/;"	t	typeref:struct:Render_Group	file:
Rituals_Enemy_Kind	src/rituals_game_info.cpp	/^enum Rituals_Enemy_Kind$/;"	g	file:
Rituals_Entity_Kinds	src/rituals_game_info.cpp	/^enum Rituals_Entity_Kinds$/;"	g	file:
Rituals_Entity_Userdata	src/rituals_game_info.cpp	/^union Rituals_Entity_Userdata$/;"	u	file:
Rituals_Pickup_Kind	src/rituals_game_info.cpp	/^enum Rituals_Pickup_Kind$/;"	g	file:
STBIDEF	src/thirdparty/stb_image.h	415;"	d
STBIDEF	src/thirdparty/stb_image.h	417;"	d
STBI_ASSERT	src/thirdparty/stb_image.h	580;"	d
STBI_FREE	src/thirdparty/stb_image.h	638;"	d
STBI_HAS_LROTL	src/thirdparty/stb_image.h	618;"	d
STBI_INCLUDE_STB_IMAGE_H	src/thirdparty/stb_image.h	220;"	d
STBI_MALLOC	src/thirdparty/stb_image.h	636;"	d
STBI_NEON	src/thirdparty/stb_image.h	729;"	d
STBI_NOTUSED	src/thirdparty/stb_image.h	612;"	d
STBI_NOTUSED	src/thirdparty/stb_image.h	614;"	d
STBI_NO_BMP	src/thirdparty/stb_image.h	538;"	d
STBI_NO_GIF	src/thirdparty/stb_image.h	547;"	d
STBI_NO_HDR	src/thirdparty/stb_image.h	550;"	d
STBI_NO_JPEG	src/thirdparty/stb_image.h	532;"	d
STBI_NO_PIC	src/thirdparty/stb_image.h	553;"	d
STBI_NO_PNG	src/thirdparty/stb_image.h	535;"	d
STBI_NO_PNM	src/thirdparty/stb_image.h	556;"	d
STBI_NO_PSD	src/thirdparty/stb_image.h	541;"	d
STBI_NO_SIMD	src/thirdparty/stb_image.h	658;"	d
STBI_NO_SIMD	src/thirdparty/stb_image.h	673;"	d
STBI_NO_TGA	src/thirdparty/stb_image.h	544;"	d
STBI_NO_ZLIB	src/thirdparty/stb_image.h	561;"	d
STBI_ONLY_PNG	src/thirdparty.h	21;"	d
STBI_REALLOC	src/thirdparty/stb_image.h	637;"	d
STBI_REALLOC_SIZED	src/thirdparty/stb_image.h	642;"	d
STBI_SIMD_ALIGN	src/thirdparty/stb_image.h	703;"	d
STBI_SIMD_ALIGN	src/thirdparty/stb_image.h	711;"	d
STBI_SIMD_ALIGN	src/thirdparty/stb_image.h	735;"	d
STBI_SIMD_ALIGN	src/thirdparty/stb_image.h	739;"	d
STBI_SSE2	src/thirdparty/stb_image.h	677;"	d
STBI_VERSION	src/thirdparty/stb_image.h	396;"	d
STBI__BYTECAST	src/thirdparty/stb_image.h	1322;"	d
STBI__F_avg	src/thirdparty/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon13
STBI__F_avg_first	src/thirdparty/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anon13
STBI__F_none	src/thirdparty/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon13
STBI__F_paeth	src/thirdparty/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon13
STBI__F_paeth_first	src/thirdparty/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anon13
STBI__F_sub	src/thirdparty/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon13
STBI__F_up	src/thirdparty/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon13
STBI__HDR_BUFLEN	src/thirdparty/stb_image.h	6089;"	d
STBI__IDCT_1D	src/thirdparty/stb_image.h	1932;"	d
STBI__MARKER_none	src/thirdparty/stb_image.h	2417;"	d
STBI__PNG_TYPE	src/thirdparty/stb_image.h	4419;"	d
STBI__RESTART	src/thirdparty/stb_image.h	2434;"	d
STBI__SCAN_header	src/thirdparty/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon4
STBI__SCAN_load	src/thirdparty/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon4
STBI__SCAN_type	src/thirdparty/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon4
STBI__X64_TARGET	src/thirdparty/stb_image.h	647;"	d
STBI__X86_TARGET	src/thirdparty/stb_image.h	649;"	d
STBI__ZFAST_BITS	src/thirdparty/stb_image.h	3482;"	d
STBI__ZFAST_MASK	src/thirdparty/stb_image.h	3483;"	d
STBI_default	src/thirdparty/stb_image.h	/^   STBI_default = 0, \/\/ only used for req_comp$/;"	e	enum:__anon1
STBI_grey	src/thirdparty/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon1
STBI_grey_alpha	src/thirdparty/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon1
STBI_rgb	src/thirdparty/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon1
STBI_rgb_alpha	src/thirdparty/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon1
STB_IMAGE_IMPLEMENTATION	src/thirdparty.h	20;"	d
SimGridCellSide	src/rituals_simulation.cpp	74;"	d	file:
SimIter	src/rituals_simulation.cpp	253;"	d	file:
SimIter_i	src/rituals_simulation.cpp	252;"	d	file:
Sim_Body	src/rituals_simulation.cpp	/^struct Sim_Body$/;"	s	file:
Sim_Body_Flags	src/rituals_simulation.cpp	/^enum Sim_Body_Flags$/;"	g	file:
Sim_Contact	src/rituals_simulation.cpp	/^struct Sim_Contact$/;"	s	file:
Sim_Grid_Cell	src/rituals_simulation.cpp	/^struct Sim_Grid_Cell$/;"	s	file:
Sim_Static_Grid	src/rituals_simulation.cpp	/^struct Sim_Static_Grid$/;"	s	file:
Simulator	src/rituals_simulation.cpp	/^struct Simulator$/;"	s	file:
Sprite	src/rituals_renderer.cpp	/^struct Sprite$/;"	s	file:
Sprite	src/wtb_sprite_renderer.h	/^struct Sprite$/;"	s
Sprite4	src/rituals_renderer.cpp	/^struct Sprite4$/;"	s	file:
Sprite4	src/wtb_sprite_renderer.h	/^struct Sprite4$/;"	s
SpriteAnchorX	src/rituals_renderer.cpp	/^real SpriteAnchorX[] = {$/;"	v
SpriteAnchorX	src/wtb_sprite_renderer.h	/^real SpriteAnchorX[] = {$/;"	v
SpriteAnchorY	src/rituals_renderer.cpp	/^real SpriteAnchorY[] = {$/;"	v
SpriteAnchorY	src/wtb_sprite_renderer.h	/^real SpriteAnchorY[] = {$/;"	v
SpriteFlag_FlipHoriz	src/rituals_renderer.cpp	/^	SpriteFlag_FlipHoriz = Flag(4),$/;"	e	enum:Sprite_Flags	file:
SpriteFlag_FlipHoriz	src/wtb_sprite_renderer.h	/^	SpriteFlag_FlipHoriz = Flag(4),$/;"	e	enum:Sprite_Flags
SpriteFlag_FlipVert	src/rituals_renderer.cpp	/^	SpriteFlag_FlipVert = Flag(5)$/;"	e	enum:Sprite_Flags	file:
SpriteFlag_FlipVert	src/wtb_sprite_renderer.h	/^	SpriteFlag_FlipVert = Flag(5)$/;"	e	enum:Sprite_Flags
Sprite_Anchor	src/rituals_renderer.cpp	/^enum Sprite_Anchor$/;"	g	file:
Sprite_Anchor	src/wtb_sprite_renderer.h	/^enum Sprite_Anchor$/;"	g
Sprite_Anchor_Mask	src/rituals_renderer.cpp	/^uint32 Sprite_Anchor_Mask = 0xF;$/;"	v
Sprite_Anchor_Mask	src/wtb_sprite_renderer.h	/^uint32 Sprite_Anchor_Mask = 0xF;$/;"	v
Sprite_Flags	src/rituals_renderer.cpp	/^enum Sprite_Flags$/;"	g	file:
Sprite_Flags	src/wtb_sprite_renderer.h	/^enum Sprite_Flags$/;"	g
Spritefont	rituals_gui.cpp	/^struct Spritefont$/;"	s	file:
Spritefont	src/rituals_game.cpp	/^typedef struct Spritefont Spritefont;$/;"	t	typeref:struct:Spritefont	file:
Spritefont	src/rituals_gui.cpp	/^struct Spritefont$/;"	s	file:
StackAlloc	src/rituals_main.cpp	183;"	d	file:
StackAlloc	src/rituals_win32.cpp	70;"	d	file:
State_Just_Pressed	src/rituals_game.cpp	/^	State_Just_Pressed = 2,$/;"	e	enum:Button_State	file:
State_Just_Released	src/rituals_game.cpp	/^	State_Just_Released = -1,$/;"	e	enum:Button_State	file:
State_Pressed	src/rituals_game.cpp	/^	State_Pressed = 1,$/;"	e	enum:Button_State	file:
State_Released	src/rituals_game.cpp	/^	State_Released = 0,$/;"	e	enum:Button_State	file:
StructKind_Member	src/metaprogram/metaprogram_parser.cpp	/^	StructKind_Member$/;"	e	enum:Struct_Kind	file:
StructKind_None	src/metaprogram/metaprogram_parser.cpp	/^	StructKind_None,$/;"	e	enum:Struct_Kind	file:
StructKind_Struct	src/metaprogram/metaprogram_parser.cpp	/^	StructKind_Struct,$/;"	e	enum:Struct_Kind	file:
StructKind_Union	src/metaprogram/metaprogram_parser.cpp	/^	StructKind_Union,$/;"	e	enum:Struct_Kind	file:
StructMemberCapacity	src/metaprogram/metaprogram_parser.cpp	747;"	d	file:
Struct_Def	src/metaprogram/metaprogram_parser.cpp	/^struct Struct_Def$/;"	s	file:
Struct_Kind	src/metaprogram/metaprogram_parser.cpp	/^enum Struct_Kind$/;"	g	file:
Struct_Member	src/metaprogram/metaprogram_parser.cpp	/^typedef union Struct_Member Struct_Member;$/;"	t	typeref:union:Struct_Member	file:
Struct_Member	src/metaprogram/metaprogram_parser.cpp	/^union Struct_Member$/;"	u	file:
TINYDIR_H	src/thirdparty/tinydir.h	30;"	d
TINYDIR_STRING	src/thirdparty/tinydir.h	69;"	d
TINYDIR_STRING	src/thirdparty/tinydir.h	78;"	d
Temp_Arena	src/metaprogram/metaprogram_main.cpp	/^Memory_Arena* Temp_Arena;$/;"	v
Tile	src/rituals_game_info.cpp	/^typedef int32 Tile;$/;"	t	file:
Tile_Cracked_Road	src/rituals_game_registry.cpp	/^isize Tile_Cracked_Road = 0;$/;"	v
Tile_Dense_Grass	src/rituals_game_registry.cpp	/^isize Tile_Dense_Grass = 0;$/;"	v
Tile_Dug_Earth	src/rituals_game_registry.cpp	/^isize Tile_Dug_Earth = 0;$/;"	v
Tile_Grass	src/rituals_game_registry.cpp	/^isize Tile_Grass = 0;$/;"	v
Tile_Info	src/rituals_game_info.cpp	/^struct Tile_Info$/;"	s	file:
Tile_Pristine_Road	src/rituals_game_registry.cpp	/^isize Tile_Pristine_Road = 0;$/;"	v
Tile_Sand	src/rituals_game_registry.cpp	/^isize Tile_Sand = 0;$/;"	v
Tile_Shallow_Water	src/rituals_game_registry.cpp	/^isize Tile_Shallow_Water = 0;$/;"	v
Tile_Size	src/rituals_game_registry.cpp	132;"	d	file:
Tile_Slab_Wall	src/rituals_game_registry.cpp	/^isize Tile_Slab_Wall = 0;$/;"	v
Tile_State	src/rituals_game_info.cpp	/^struct Tile_State$/;"	s	file:
Tile_Stone_Road	src/rituals_game_registry.cpp	/^isize Tile_Stone_Road = 0;$/;"	v
Tile_Tree_Wall	src/rituals_game_registry.cpp	/^isize Tile_Tree_Wall = 0;$/;"	v
Tile_Void	src/rituals_game_registry.cpp	/^isize Tile_Void = 0;$/;"	v
Tile_Water	src/rituals_game_registry.cpp	/^isize Tile_Water = 0;$/;"	v
Tilemap	src/rituals_tilemap.cpp	/^struct Tilemap$/;"	s	file:
TimeStep	src/rituals_simulation.cpp	251;"	d	file:
Time_Step	src/rituals_win32.cpp	225;"	d	file:
Title_Font	src/rituals_game.cpp	/^Spritefont* Title_Font;$/;"	v
Token	src/metaprogram/metaprogram_parser.cpp	/^struct Token$/;"	s	file:
Token_Ampersand	src/metaprogram/metaprogram_parser.cpp	/^	Token_Ampersand,$/;"	e	enum:Token_Kind	file:
Token_Asterisk	src/metaprogram/metaprogram_parser.cpp	/^	Token_Asterisk,$/;"	e	enum:Token_Kind	file:
Token_Backslash	src/metaprogram/metaprogram_parser.cpp	/^	Token_Backslash,$/;"	e	enum:Token_Kind	file:
Token_Caret	src/metaprogram/metaprogram_parser.cpp	/^	Token_Caret,$/;"	e	enum:Token_Kind	file:
Token_Char	src/metaprogram/metaprogram_parser.cpp	/^	Token_Char,$/;"	e	enum:Token_Kind	file:
Token_CloseBrace	src/metaprogram/metaprogram_parser.cpp	/^	Token_CloseBrace,$/;"	e	enum:Token_Kind	file:
Token_CloseBracket	src/metaprogram/metaprogram_parser.cpp	/^	Token_CloseBracket,$/;"	e	enum:Token_Kind	file:
Token_CloseParen	src/metaprogram/metaprogram_parser.cpp	/^	Token_CloseParen,$/;"	e	enum:Token_Kind	file:
Token_Colon	src/metaprogram/metaprogram_parser.cpp	/^	Token_Colon,$/;"	e	enum:Token_Kind	file:
Token_Comma	src/metaprogram/metaprogram_parser.cpp	/^	Token_Comma,$/;"	e	enum:Token_Kind	file:
Token_CompilerDirective	src/metaprogram/metaprogram_parser.cpp	/^	Token_CompilerDirective,$/;"	e	enum:Token_Kind	file:
Token_Divide	src/metaprogram/metaprogram_parser.cpp	/^	Token_Divide, $/;"	e	enum:Token_Kind	file:
Token_DollarSign	src/metaprogram/metaprogram_parser.cpp	/^	Token_DollarSign,$/;"	e	enum:Token_Kind	file:
Token_Dot	src/metaprogram/metaprogram_parser.cpp	/^	Token_Dot,$/;"	e	enum:Token_Kind	file:
Token_EndOfFile	src/metaprogram/metaprogram_parser.cpp	/^	Token_EndOfFile,$/;"	e	enum:Token_Kind	file:
Token_Equals	src/metaprogram/metaprogram_parser.cpp	/^	Token_Equals,$/;"	e	enum:Token_Kind	file:
Token_ExclamationMark	src/metaprogram/metaprogram_parser.cpp	/^	Token_ExclamationMark,$/;"	e	enum:Token_Kind	file:
Token_Float	src/metaprogram/metaprogram_parser.cpp	/^	Token_Float,$/;"	e	enum:Token_Kind	file:
Token_GreaterThan	src/metaprogram/metaprogram_parser.cpp	/^	Token_GreaterThan,$/;"	e	enum:Token_Kind	file:
Token_Identifier	src/metaprogram/metaprogram_parser.cpp	/^	Token_Identifier,$/;"	e	enum:Token_Kind	file:
Token_Integer	src/metaprogram/metaprogram_parser.cpp	/^	Token_Integer,$/;"	e	enum:Token_Kind	file:
Token_Kind	src/metaprogram/metaprogram_parser.cpp	/^enum Token_Kind$/;"	g	file:
Token_Kind_Count	src/metaprogram/metaprogram_parser.cpp	/^	Token_Kind_Count,$/;"	e	enum:Token_Kind	file:
Token_LessThan	src/metaprogram/metaprogram_parser.cpp	/^	Token_LessThan,$/;"	e	enum:Token_Kind	file:
Token_Minus	src/metaprogram/metaprogram_parser.cpp	/^	Token_Minus,$/;"	e	enum:Token_Kind	file:
Token_Modulo	src/metaprogram/metaprogram_parser.cpp	/^	Token_Modulo,$/;"	e	enum:Token_Kind	file:
Token_Number	src/metaprogram/metaprogram_parser.cpp	/^	Token_Number,$/;"	e	enum:Token_Kind	file:
Token_OpenBrace	src/metaprogram/metaprogram_parser.cpp	/^	Token_OpenBrace,$/;"	e	enum:Token_Kind	file:
Token_OpenBracket	src/metaprogram/metaprogram_parser.cpp	/^	Token_OpenBracket,$/;"	e	enum:Token_Kind	file:
Token_OpenParen	src/metaprogram/metaprogram_parser.cpp	/^	Token_OpenParen,$/;"	e	enum:Token_Kind	file:
Token_Pipe	src/metaprogram/metaprogram_parser.cpp	/^	Token_Pipe,$/;"	e	enum:Token_Kind	file:
Token_Plus	src/metaprogram/metaprogram_parser.cpp	/^	Token_Plus,$/;"	e	enum:Token_Kind	file:
Token_QuestionMark	src/metaprogram/metaprogram_parser.cpp	/^	Token_QuestionMark,$/;"	e	enum:Token_Kind	file:
Token_Semicolon	src/metaprogram/metaprogram_parser.cpp	/^	Token_Semicolon,$/;"	e	enum:Token_Kind	file:
Token_String	src/metaprogram/metaprogram_parser.cpp	/^	Token_String,$/;"	e	enum:Token_Kind	file:
Token_Tilde	src/metaprogram/metaprogram_parser.cpp	/^	Token_Tilde,$/;"	e	enum:Token_Kind	file:
Token_Unknown	src/metaprogram/metaprogram_parser.cpp	/^	Token_Unknown,$/;"	e	enum:Token_Kind	file:
UNICODE	src/thirdparty/tinydir.h	37;"	d
Vec2	src/rituals_math.cpp	/^union Vec2 $/;"	u	file:
Vec2i	src/rituals_math.cpp	/^union Vec2i$/;"	u	file:
Vec3	src/rituals_math.cpp	/^union Vec3$/;"	u	file:
Vec4	src/rituals_math.cpp	/^union Vec4$/;"	u	file:
WIN32_LEAN_AND_MEAN	src/thirdparty/gl_core_3_3.h	32;"	d
WIN32_LEAN_AND_MEAN	src/thirdparty/gl_core_3_3.h	40;"	d
WIN32_LEAN_AND_MEAN	src/thirdparty/tinydir.h	48;"	d
Work_Arena	src/metaprogram/metaprogram_main.cpp	/^Memory_Arena* Work_Arena;$/;"	v
World	src/rituals_game_info.cpp	/^typedef struct World World;$/;"	t	typeref:struct:World	file:
World	src/rituals_main.cpp	/^typedef struct World World;$/;"	t	typeref:struct:World	file:
World	src/rituals_world.cpp	/^struct World$/;"	s	file:
WorldAreaEntityCapacity	src/rituals_world_area.cpp	95;"	d	file:
WorldAreaTilemapHeight	src/rituals_tilemap.cpp	24;"	d	file:
WorldAreaTilemapWidth	src/rituals_tilemap.cpp	23;"	d	file:
World_Area	src/rituals_game_info.cpp	/^typedef struct World_Area World_Area;$/;"	t	typeref:struct:World_Area	file:
World_Area	src/rituals_world_area.cpp	/^struct World_Area$/;"	s	file:
World_Area_Biome	src/rituals_world_area.cpp	/^enum World_Area_Biome$/;"	g	file:
World_Area_Stub	src/rituals_world_area.cpp	/^struct World_Area_Stub$/;"	s	file:
World_Area_Stub	src/rituals_world_area.cpp	/^typedef struct World_Area_Stub World_Area_Stub;$/;"	t	typeref:struct:World_Area_Stub	file:
YCbCr_to_RGB_kernel	src/thirdparty/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon6
_CRT_SECURE_NO_WARNINGS	src/metaprogram/metaprogram_main.cpp	28;"	d	file:
_CRT_SECURE_NO_WARNINGS	src/rituals_main.cpp	124;"	d	file:
_CRT_SECURE_NO_WARNINGS	src/rituals_win32.cpp	26;"	d	file:
_TINYDIR_DIR	src/thirdparty/tinydir.h	131;"	d
_TINYDIR_DIR	src/thirdparty/tinydir.h	137;"	d
_TINYDIR_FILENAME_MAX	src/thirdparty/tinydir.h	94;"	d
_TINYDIR_FREE	src/thirdparty/tinydir.h	154;"	d
_TINYDIR_FUNC	src/thirdparty/tinydir.h	101;"	d
_TINYDIR_FUNC	src/thirdparty/tinydir.h	97;"	d
_TINYDIR_FUNC	src/thirdparty/tinydir.h	99;"	d
_TINYDIR_HAS_DIRFD	src/thirdparty/tinydir.h	116;"	d
_TINYDIR_HAS_FPATHCONF	src/thirdparty/tinydir.h	111;"	d
_TINYDIR_HAS_READDIR_R	src/thirdparty/tinydir.h	108;"	d
_TINYDIR_MALLOC	src/thirdparty/tinydir.h	153;"	d
_TINYDIR_PATH_EXTRA	src/thirdparty/tinydir.h	90;"	d
_TINYDIR_PATH_EXTRA	src/thirdparty/tinydir.h	92;"	d
_TINYDIR_PATH_MAX	src/thirdparty/tinydir.h	87;"	d
_TINYDIR_USE_FPATHCONF	src/thirdparty/tinydir.h	121;"	d
_TINYDIR_USE_READDIR	src/thirdparty/tinydir.h	125;"	d
_UNICODE	src/thirdparty/tinydir.h	41;"	d
__GLEW_H__	src/thirdparty/gl_core_3_3.h	21;"	d
__GLEXT_H_	src/thirdparty/gl_core_3_3.h	25;"	d
__GL_H__	src/thirdparty/gl_core_3_3.h	23;"	d
__gl_ATI_h_	src/thirdparty/gl_core_3_3.h	27;"	d
__gl_h_	src/thirdparty/gl_core_3_3.h	22;"	d
__glew_h__	src/thirdparty/gl_core_3_3.h	20;"	d
__glext_h_	src/thirdparty/gl_core_3_3.h	24;"	d
__gltypes_h_	src/thirdparty/gl_core_3_3.h	26;"	d
_add_item	src/rituals_game_registry.cpp	190;"	d	file:
_body_get_id	src/rituals_simulation.cpp	57;"	d	file:
_body_get_min_x	src/rituals_simulation.cpp	49;"	d	file:
_body_get_min_y	src/rituals_simulation.cpp	50;"	d	file:
_body_get_not_static	src/rituals_simulation.cpp	54;"	d	file:
_check	src/rituals_entity.cpp	16;"	d	file:
_check	src/rituals_entity_events.cpp	187;"	d	file:
_check_gl_attribute	src/rituals_main.cpp	522;"	d	file:
_check_gl_attribute	src/rituals_win32.cpp	414;"	d	file:
_collision_slop	src/rituals_simulation.cpp	254;"	d	file:
_color	src/rituals_gui.cpp	353;"	d	file:
_d	src/thirdparty/tinydir.h	/^	_TINYDIR_DIR *_d;$/;"	m	struct:tinydir_dir
_do_collide_bodies	src/rituals_simulation.cpp	/^int32 _do_collide_bodies(Sim_Body* a, Sim_Body* b, Simulator* sim, bool do_sweep)$/;"	f
_e	src/thirdparty/tinydir.h	/^	struct _tinydir_dirent *_e;$/;"	m	struct:tinydir_dir	typeref:struct:tinydir_dir::_tinydir_dirent
_entity_get_id	src/rituals_world_area.cpp	76;"	d	file:
_ep	src/thirdparty/tinydir.h	/^	struct _tinydir_dirent *_ep;$/;"	m	struct:tinydir_dir	typeref:struct:tinydir_dir::_tinydir_dirent
_f	src/thirdparty/tinydir.h	/^	WIN32_FIND_DATA _f;$/;"	m	struct:tinydir_dir
_files	src/thirdparty/tinydir.h	/^	tinydir_file *_files;$/;"	m	struct:tinydir_dir
_game_registry__key_macro	src/rituals_game_registry.cpp	59;"	d	file:
_generate_registry_lookup	src/rituals_game_registry.cpp	60;"	d	file:
_generate_sort_and_search_for_numeric_type	src/rituals_sort_generator.cpp	108;"	d	file:
_generate_sort_and_search_for_numeric_type	src/rituals_sort_macros.cpp	104;"	d	file:
_get_at	src/rituals_simulation.cpp	/^Tile_Info* _get_at(isize x, isize y)$/;"	f
_get_at	src/rituals_win32.cpp	/^uint8 _get_at(isize x, isize y)$/;"	f
_get_member_address	src/rituals_renderer.cpp	131;"	d	file:
_get_member_address	src/wtb_sprite_renderer.h	123;"	d
_get_sprite_y_base	src/rituals_renderer.cpp	80;"	d	file:
_get_sprite_y_base	src/wtb_sprite_renderer.h	72;"	d
_gl_offset	src/rituals_renderer.cpp	132;"	d	file:
_gl_offset	src/wtb_sprite_renderer.h	124;"	d
_h	src/thirdparty/tinydir.h	/^	HANDLE _h;$/;"	m	struct:tinydir_dir
_hitbox_get_x1	src/rituals_world_area.cpp	34;"	d	file:
_hitbox_get_y1	src/rituals_world_area.cpp	36;"	d	file:
_isnt_spritefont_separator	rituals_gui.cpp	/^static inline bool _isnt_spritefont_separator(char c)$/;"	f	file:
_isnt_spritefont_separator	src/rituals_gui.cpp	/^static inline bool _isnt_spritefont_separator(char c)$/;"	f	file:
_naive_generate_statics_for_tilemap	src/rituals_win32.cpp	/^void _naive_generate_statics_for_tilemap(Simulator* sim, Tilemap* tilemap)$/;"	f
_new_tile	src/rituals_game_registry.cpp	136;"	d	file:
_passthru_macro	src/rituals_sort_generator.cpp	107;"	d	file:
_passthru_macro	src/rituals_sort_macros.cpp	103;"	d	file:
_recursive_delete	src/rituals_serialization.cpp	/^int _recursive_delete(const char* last_path, isize last_path_len, char* path)$/;"	f
_rotate_left	src/rituals_random.cpp	/^static inline uint64 _rotate_left(const uint64 t, int64 k)$/;"	f	file:
_s	src/thirdparty/tinydir.h	/^	struct _stat _s;$/;"	m	struct:tinydir_file	typeref:struct:tinydir_file::_stat
_s	src/thirdparty/tinydir.h	/^	struct stat _s;$/;"	m	struct:tinydir_file	typeref:struct:tinydir_file::stat
_scancode	src/rituals_entity_events.cpp	188;"	d	file:
_separate_bodies	src/rituals_simulation.cpp	/^void _separate_bodies(Sim_Body* a, Sim_Body* b, bool capture_contacts, int32 times, Simulator* sim)$/;"	f
_set_registry_arrays	src/rituals_game_registry.cpp	45;"	d	file:
_splitmix64	src/rituals_random.cpp	/^static inline uint64 _splitmix64(uint64* x)$/;"	f	file:
_th	src/rituals_simulation.cpp	/^isize _tw, _th;$/;"	v
_th	src/rituals_win32.cpp	/^isize _tw, _th;$/;"	v
_tile_texture	src/rituals_game_registry.cpp	135;"	d	file:
_tiles	src/rituals_simulation.cpp	/^Tile* _tiles;$/;"	v
_tiles	src/rituals_win32.cpp	/^uint8* _tiles;$/;"	v
_tinydir_char_t	src/thirdparty/tinydir.h	68;"	d
_tinydir_char_t	src/thirdparty/tinydir.h	77;"	d
_tinydir_closedir	src/thirdparty/tinydir.h	135;"	d
_tinydir_closedir	src/thirdparty/tinydir.h	141;"	d
_tinydir_dirent	src/thirdparty/tinydir.h	132;"	d
_tinydir_dirent	src/thirdparty/tinydir.h	138;"	d
_tinydir_dirent_buf_size	src/thirdparty/tinydir.h	/^size_t _tinydir_dirent_buf_size(_TINYDIR_DIR *dirp)$/;"	f
_tinydir_file_cmp	src/thirdparty/tinydir.h	/^int _tinydir_file_cmp(const void *a, const void *b)$/;"	f
_tinydir_get_ext	src/thirdparty/tinydir.h	/^void _tinydir_get_ext(tinydir_file *file)$/;"	f
_tinydir_opendir	src/thirdparty/tinydir.h	133;"	d
_tinydir_opendir	src/thirdparty/tinydir.h	139;"	d
_tinydir_readdir	src/thirdparty/tinydir.h	134;"	d
_tinydir_readdir	src/thirdparty/tinydir.h	140;"	d
_tinydir_strcat	src/thirdparty/tinydir.h	72;"	d
_tinydir_strcat	src/thirdparty/tinydir.h	81;"	d
_tinydir_strcmp	src/thirdparty/tinydir.h	73;"	d
_tinydir_strcmp	src/thirdparty/tinydir.h	82;"	d
_tinydir_strcpy	src/thirdparty/tinydir.h	71;"	d
_tinydir_strcpy	src/thirdparty/tinydir.h	80;"	d
_tinydir_strlen	src/thirdparty/tinydir.h	70;"	d
_tinydir_strlen	src/thirdparty/tinydir.h	79;"	d
_tinydir_strncmp	src/thirdparty/tinydir.h	75;"	d
_tinydir_strncmp	src/thirdparty/tinydir.h	84;"	d
_tinydir_strrchr	src/thirdparty/tinydir.h	74;"	d
_tinydir_strrchr	src/thirdparty/tinydir.h	83;"	d
_tw	src/rituals_simulation.cpp	/^isize _tw, _th;$/;"	v
_tw	src/rituals_win32.cpp	/^isize _tw, _th;$/;"	v
a	src/rituals_world_area.cpp	/^	Entity* a;$/;"	m	struct:Hitbox_Contact	file:
a_id	src/rituals_simulation.cpp	/^	isize a_id;$/;"	m	struct:Sim_Contact	file:
a_id	src/rituals_world_area.cpp	/^	isize a_id;$/;"	m	struct:Hitbox_Contact	file:
aabb	src/rituals_math.cpp	/^static inline AABB aabb(Vec2 c, real hw, real hh)$/;"	f	file:
aabb	src/rituals_math.cpp	/^static inline AABB aabb(real x, real y, real hw, real hh)$/;"	f	file:
aabb_intersect	src/rituals_math.cpp	/^static inline bool aabb_intersect(AABB a, AABB b)$/;"	f	file:
aabb_intersect	src/rituals_math.cpp	/^static inline bool aabb_intersect(AABB* a, AABB* b)$/;"	f	file:
aabb_overlap	src/rituals_math.cpp	/^static inline void aabb_overlap(AABB* a, AABB* b, Vec2* s)$/;"	f	file:
aabb_to_intrect	src/rituals_math.cpp	/^static inline Rect2i aabb_to_intrect(AABB* b)$/;"	f	file:
aabb_to_rect	src/rituals_math.cpp	/^static inline Rect2 aabb_to_rect(AABB* b)$/;"	f	file:
acceleration	src/rituals_particles.cpp	/^	Vec3 acceleration;$/;"	m	struct:Particle_Style	file:
accept_newlines	src/rituals_gui.cpp	/^	bool accept_newlines;$/;"	m	struct:Gui_Text_Input_Handle	file:
accept_tabs	src/rituals_gui.cpp	/^	bool accept_tabs;$/;"	m	struct:Gui_Text_Input_Handle	file:
accumulator	src/rituals_main.cpp	/^	real accumulator = 0;$/;"	m	struct:Play_State	file:
accumulator	src/rituals_win32.cpp	/^real accumulator = 0;$/;"	v
active	src/rituals_gui.cpp	/^	bool active;$/;"	m	struct:Gui_Text_Input_Handle	file:
add_animation	src/rituals_animations.cpp	/^isize add_animation(Animated_Sprite* s, Animation* a) $/;"	f
add_item_type	src/rituals_game_registry.cpp	/^Item_Info* add_item_type(const char* name, int32 max_stack, Rect2 texture)$/;"	f
add_tile_info	src/rituals_game_registry.cpp	/^Tile_Info* add_tile_info(const char* name, real movement_modifier, real friction, Rect2 texture, bool solid, char* break_to_name)$/;"	f
alert_dist	src/rituals_game_info.cpp	/^		real alert_dist;$/;"	m	struct:Rituals_Entity_Userdata::__anon3	file:
all_a	src/thirdparty/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon14
amount	src/rituals_game_info.cpp	/^				isize amount;$/;"	m	struct:Rituals_Entity_Userdata::__anon8::__anon9::__anon11	file:
amount	src/rituals_game_info.cpp	/^		isize amount;$/;"	m	struct:Rituals_Entity_Userdata::__anon1	file:
angle	src/rituals_animations.cpp	/^	real angle;$/;"	m	struct:Animation_Frame	file:
angle	src/rituals_particles.cpp	/^	real angle;$/;"	m	struct:Particle	file:
angle	src/rituals_renderer.cpp	/^	real angle;$/;"	m	struct:Sprite	file:
angle	src/wtb_sprite_renderer.h	/^	real angle;$/;"	m	struct:Sprite
angle_max	src/rituals_particles.cpp	/^	real angle_max;$/;"	m	struct:Particle_Style	file:
angle_min	src/rituals_particles.cpp	/^	real angle_min;$/;"	m	struct:Particle_Style	file:
angle_vel_max	src/rituals_particles.cpp	/^	real angle_vel_max;$/;"	m	struct:Particle_Style	file:
angle_vel_min	src/rituals_particles.cpp	/^	real angle_vel_min;$/;"	m	struct:Particle_Style	file:
angular_vel	src/rituals_particles.cpp	/^	real angular_vel;$/;"	m	struct:Particle	file:
anim	src/rituals_world_area.cpp	/^	Animated_Sprite* anim;$/;"	m	struct:Entity	file:
animated_sprite_update	src/rituals_animations.cpp	/^void animated_sprite_update(Animated_Sprite* s, real timestep)$/;"	f
animations	src/rituals_animations.cpp	/^	Animation** animations;$/;"	m	struct:Animated_Sprite	file:
animations_capacity	src/rituals_animations.cpp	/^	isize animations_count, animations_capacity;$/;"	m	struct:Animated_Sprite	file:
animations_count	src/rituals_animations.cpp	/^	isize animations_count, animations_capacity;$/;"	m	struct:Animated_Sprite	file:
anon_struct	src/metaprogram/metaprogram_parser.cpp	/^	} anon_struct;$/;"	m	union:Struct_Member	typeref:struct:Struct_Member::__anon1	file:
append_input_text	src/rituals_game.cpp	/^isize append_input_text(char* str, isize str_cap, isize str_len, isize insert_from_end=0)$/;"	f
area_stubs	src/rituals_world.cpp	/^	World_Area_Stub* area_stubs;$/;"	m	struct:World	file:
areas_capacity	src/rituals_world.cpp	/^	isize areas_count, areas_capacity;$/;"	m	struct:World	file:
areas_count	src/rituals_world.cpp	/^	isize areas_count, areas_capacity;$/;"	m	struct:World	file:
areas_height	src/rituals_world.cpp	/^	isize areas_width, areas_height;$/;"	m	struct:World	file:
areas_width	src/rituals_world.cpp	/^	isize areas_width, areas_height;$/;"	m	struct:World	file:
arena_push	src/rituals_memory.cpp	/^uint8* arena_push(Memory_Arena* arena, isize size)$/;"	f
arena_push_array	src/rituals_memory.cpp	15;"	d	file:
arena_push_struct	src/rituals_memory.cpp	14;"	d	file:
args	src/metaprogram/metaprogram_parser.cpp	/^	Proc_Arg* args;$/;"	m	struct:Proc_Prototype	file:
args_count	src/metaprogram/metaprogram_parser.cpp	/^	isize args_count;$/;"	m	struct:Proc_Prototype	file:
array_levels	src/metaprogram/metaprogram_parser.cpp	/^		isize array_levels;$/;"	m	struct:Struct_Member::__anon1	file:
array_levels	src/metaprogram/metaprogram_parser.cpp	/^		isize array_levels;$/;"	m	struct:Struct_Member::__anon2	file:
array_sizes	src/metaprogram/metaprogram_parser.cpp	/^		char** array_sizes;$/;"	m	struct:Struct_Member::__anon1	file:
array_sizes	src/metaprogram/metaprogram_parser.cpp	/^		char** array_sizes;$/;"	m	struct:Struct_Member::__anon2	file:
asset_arena	src/rituals_game.cpp	/^	Memory_Arena* asset_arena;$/;"	m	struct:Game_Main	file:
asterisk_count	src/metaprogram/metaprogram_parser.cpp	/^		int32 asterisk_count;$/;"	m	struct:Struct_Member::__anon2	file:
attack	src/rituals_world_area.cpp	/^	int32 attack;$/;"	m	struct:Entity	file:
attack_interval	src/rituals_world_area.cpp	/^	real attack_interval;$/;"	m	struct:Entity	file:
attack_timer	src/rituals_world_area.cpp	/^	real attack_timer;$/;"	m	struct:Entity	file:
axis	src/rituals_gui.cpp	/^	isize axis;$/;"	m	struct:Gui_Context	file:
b	src/rituals_main.cpp	/^bool b = false;$/;"	v
b	src/rituals_world_area.cpp	/^	Entity* b;$/;"	m	struct:Hitbox_Contact	file:
b_id	src/rituals_simulation.cpp	/^	isize b_id;$/;"	m	struct:Sim_Contact	file:
b_id	src/rituals_world_area.cpp	/^	isize b_id;$/;"	m	struct:Hitbox_Contact	file:
base_arena	src/metaprogram/metaprogram_main.cpp	/^	Memory_Arena base_arena;$/;"	m	struct:Metaprogram_Core	file:
base_path	src/rituals_game.cpp	/^	const char* base_path;$/;"	m	struct:Game_Main	file:
base_path_length	src/rituals_game.cpp	/^	isize base_path_length;$/;"	m	struct:Game_Main	file:
base_style	src/rituals_world.cpp	/^	Particle_Style base_style;$/;"	m	struct:World	file:
bat	src/rituals_game_info.cpp	/^			} bat;$/;"	m	union:Rituals_Entity_Userdata::__anon3::__anon4	typeref:struct:Rituals_Entity_Userdata::__anon3::__anon4::__anon5	file:
bgindex	src/thirdparty/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon17
biome	src/rituals_world_area.cpp	/^	World_Area_Biome biome;$/;"	m	struct:World_Area_Stub	file:
bodies	src/rituals_simulation.cpp	/^	Sim_Body* bodies;$/;"	m	struct:Simulator	file:
bodies_capacity	src/rituals_simulation.cpp	/^	isize bodies_count, bodies_capacity, next_body_id;$/;"	m	struct:Simulator	file:
bodies_count	src/rituals_simulation.cpp	/^	isize bodies_count, bodies_capacity, next_body_id;$/;"	m	struct:Simulator	file:
body	src/rituals_simulation.cpp	/^	Sim_Body* body;$/;"	m	struct:Sim_Grid_Cell	file:
body	src/rituals_world_area.cpp	/^	Sim_Body* body;$/;"	m	struct:Entity	file:
body_font	src/rituals_game.cpp	/^	Spritefont* body_font;$/;"	m	struct:Game_Main	file:
body_group	src/rituals_game_info.cpp	/^	uint64 body_group;$/;"	m	struct:Tile_Info	file:
body_id	src/rituals_world_area.cpp	/^	isize body_id;$/;"	m	struct:Entity	file:
body_mask	src/rituals_game_info.cpp	/^	uint64 body_mask;$/;"	m	struct:Tile_Info	file:
bottom_texture	src/rituals_game_info.cpp	/^	Rect2 bottom_texture;$/;"	m	struct:Tile_Info	file:
box	src/rituals_world_area.cpp	/^	AABB box;$/;"	m	struct:Hitbox	file:
boxes	src/rituals_main.cpp	/^Sprite* boxes;$/;"	v
bpp	src/thirdparty/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon14
break_to_id	src/rituals_game_info.cpp	/^	isize break_to_id;$/;"	m	struct:Tile_Info	file:
break_to_name	src/rituals_game_info.cpp	/^	char* break_to_name;$/;"	m	struct:Tile_Info	file:
buffer	src/rituals_gui.cpp	/^	char* buffer;$/;"	m	struct:Gui_Text_Input_Handle	file:
buffer_capacity	src/rituals_gui.cpp	/^	isize buffer_length, buffer_capacity;$/;"	m	struct:Gui_Text_Input_Handle	file:
buffer_length	src/rituals_gui.cpp	/^	isize buffer_length, buffer_capacity;$/;"	m	struct:Gui_Text_Input_Handle	file:
buffer_start	src/thirdparty/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon3
buflen	src/thirdparty/stb_image.h	/^   int buflen;$/;"	m	struct:__anon3
build_static_grid	src/rituals_simulation.cpp	/^void build_static_grid(Sim_Static_Grid* grid, Sim_Body* bodies, isize count)$/;"	f
capacity	src/rituals_memory.cpp	/^	isize capacity, head;$/;"	m	struct:Memory_Arena	file:
capture_newlines	src/rituals_game.cpp	/^	bool capture_newlines;$/;"	m	struct:Game_Input	file:
capture_tabs	src/rituals_game.cpp	/^	bool capture_tabs;$/;"	m	struct:Game_Input	file:
cell_storage	src/rituals_simulation.cpp	/^	Sim_Grid_Cell* cell_storage;$/;"	m	struct:Sim_Static_Grid	file:
cell_storage_capacity	src/rituals_simulation.cpp	/^	isize cell_storage_count, cell_storage_capacity;$/;"	m	struct:Sim_Static_Grid	file:
cell_storage_count	src/rituals_simulation.cpp	/^	isize cell_storage_count, cell_storage_capacity;$/;"	m	struct:Sim_Static_Grid	file:
cells	src/rituals_simulation.cpp	/^	Sim_Grid_Cell** cells;$/;"	m	struct:Sim_Static_Grid	file:
cells_length	src/rituals_simulation.cpp	/^	isize cells_length;$/;"	m	struct:Sim_Static_Grid	file:
center	src/rituals_math.cpp	/^		Vec2 center;$/;"	m	struct:AABB::__anon5	file:
center	src/rituals_renderer.cpp	/^	Vec2 center;$/;"	m	struct:Sprite	file:
center	src/wtb_sprite_renderer.h	/^	Vec2 center;$/;"	m	struct:Sprite
channel	src/thirdparty/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon15
character_padding	rituals_gui.cpp	/^	int32 character_padding;$/;"	m	struct:Spritefont	file:
character_padding	src/rituals_gui.cpp	/^	int32 character_padding;$/;"	m	struct:Spritefont	file:
chase_speed_modifier	src/rituals_game_info.cpp	/^				real chase_speed_modifier;$/;"	m	struct:Rituals_Entity_Userdata::__anon3::__anon4::__anon6	file:
check_dir	src/rituals_serialization.cpp	/^void check_dir(char* dir)$/;"	f
check_path	src/rituals_serialization.cpp	/^int check_path(char* path)$/;"	f
clamp	src/rituals_math.cpp	/^inline real clamp(real x, real min, real max)$/;"	f
clamp_01	src/rituals_math.cpp	/^real clamp_01(real x)$/;"	f
clear_arena	src/rituals_memory.cpp	/^void clear_arena(Memory_Arena* arena)$/;"	f
clip	src/rituals_renderer.cpp	/^	Rect2 clip;$/;"	m	struct:Render_Group	file:
clip	src/wtb_sprite_renderer.h	/^	Rect2 clip;$/;"	m	struct:Render_Group
code	src/thirdparty/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon5
code_bits	src/thirdparty/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon6
code_buffer	src/thirdparty/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon6
code_buffer	src/thirdparty/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon10
codes	src/thirdparty/stb_image.h	/^   stbi__gif_lzw codes[4096];$/;"	m	struct:__anon17
coeff	src/thirdparty/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon6::__anon7
coeff_h	src/thirdparty/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon6::__anon7
coeff_w	src/thirdparty/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon6::__anon7
collision_vel	src/rituals_simulation.cpp	/^	Vec2 velocity, force, collision_vel;$/;"	m	struct:Sim_Body	file:
color	rituals_gui.cpp	/^	Vec4 color;$/;"	m	struct:Spritefont	file:
color	src/rituals_animations.cpp	/^	Vec4 color;$/;"	m	struct:Animation_Frame	file:
color	src/rituals_gui.cpp	/^	Vec4 color;$/;"	m	struct:Spritefont	file:
color	src/rituals_particles.cpp	/^	Vec4 color;$/;"	m	struct:Particle_Style	file:
color	src/rituals_renderer.cpp	/^	Vec4 color;$/;"	m	struct:Sprite	file:
color	src/wtb_sprite_renderer.h	/^	Vec4 color;$/;"	m	struct:Sprite
color_table	src/thirdparty/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon17
contacts	src/rituals_simulation.cpp	/^	Sim_Contact* contacts;$/;"	m	struct:Simulator	file:
contacts_capacity	src/rituals_simulation.cpp	/^	isize contacts_count, contacts_capacity;$/;"	m	struct:Simulator	file:
contacts_count	src/rituals_simulation.cpp	/^	isize contacts_count, contacts_capacity;$/;"	m	struct:Simulator	file:
contains	src/rituals_game_info.cpp	/^		Rituals_Entity_Kinds contains;$/;"	m	struct:Rituals_Entity_Userdata::__anon1	file:
contents	src/rituals_inventory.cpp	/^	Item_Stack** contents;$/;"	m	struct:Inventory	file:
copy_particle_style	src/rituals_particles.cpp	/^Particle_Style copy_particle_style(Particle_Style s,$/;"	f
count	src/metaprogram/metaprogram_parser.cpp	/^		isize count;$/;"	m	struct:Struct_Member::__anon2	file:
count	src/metaprogram/metaprogram_parser.cpp	/^	isize count;$/;"	m	struct:Proc_Arg	file:
count	src/rituals_game_info.cpp	/^				isize id, count;$/;"	m	struct:Rituals_Entity_Userdata::__anon8::__anon9::__anon10	file:
counter	src/rituals_world_area.cpp	/^	int32 counter;$/;"	m	struct:Entity	file:
create_box_outline_primitive	src/rituals_renderer.cpp	/^Sprite4 create_box_outline_primitive(Vec2 center, Vec2 size, Vec4 color, int32 thickness)$/;"	f
create_box_outline_primitive	src/rituals_renderer.cpp	/^Sprite4 create_box_outline_primitive(Vec2 center, Vec2 size, Vec4 color[4], int32 thickness)$/;"	f
create_box_outline_primitive	src/wtb_sprite_renderer.h	/^Sprite4 create_box_outline_primitive(Vec2 center, Vec2 size, Vec4 color, int32 thickness)$/;"	f
create_box_outline_primitive	src/wtb_sprite_renderer.h	/^Sprite4 create_box_outline_primitive(Vec2 center, Vec2 size, Vec4 color[4], int32 thickness)$/;"	f
create_box_primitive	src/rituals_renderer.cpp	/^Sprite create_box_primitive(Vec2 pos, Vec2 size, Vec4 color)$/;"	f
create_box_primitive	src/wtb_sprite_renderer.h	/^Sprite create_box_primitive(Vec2 pos, Vec2 size, Vec4 color)$/;"	f
create_line_primitive	src/rituals_renderer.cpp	/^Sprite create_line_primitive(Vec2 start, Vec2 end, Vec4 color, int32 thickness)$/;"	f
create_line_primitive	src/wtb_sprite_renderer.h	/^Sprite create_line_primitive(Vec2 start, Vec2 end, Vec4 color, int32 thickness)$/;"	f
cur_x	src/thirdparty/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon17
cur_y	src/thirdparty/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon17
current_animation	src/rituals_animations.cpp	/^	isize current_animation, current_frame;$/;"	m	struct:Animated_Sprite	file:
current_area	src/rituals_world.cpp	/^	World_Area* current_area;$/;"	m	struct:World	file:
current_frame	src/rituals_animations.cpp	/^	isize current_animation, current_frame;$/;"	m	struct:Animated_Sprite	file:
current_time	src/rituals_main.cpp	/^	usize current_time = 0, prev_time = 0;$/;"	m	struct:Play_State	file:
current_time	src/rituals_win32.cpp	/^usize current_time = 0, prev_time = 0;$/;"	v
cursor	src/rituals_gui.cpp	/^	isize cursor, selection_start;$/;"	m	struct:Gui_Text_Input_Handle	file:
damage	src/rituals_game_info.cpp	/^	int32 damage;$/;"	m	struct:Tile_State	file:
damping	src/rituals_simulation.cpp	/^	real inv_mass, restitution, damping;$/;"	m	struct:Sim_Body	file:
data	src/rituals_memory.cpp	/^	uint8* data;$/;"	m	struct:Memory_Arena	file:
data	src/thirdparty/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon6::__anon7
dc_pred	src/thirdparty/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon6::__anon7
dct_bfly32o	src/thirdparty/stb_image.h	2067;"	d
dct_bfly32o	src/thirdparty/stb_image.h	2201;"	d
dct_bfly32o	src/thirdparty/stb_image.h	2253;"	d
dct_bfly32o	src/thirdparty/stb_image.h	2411;"	d
dct_const	src/thirdparty/stb_image.h	2039;"	d
dct_const	src/thirdparty/stb_image.h	2196;"	d
dct_interleave16	src/thirdparty/stb_image.h	2084;"	d
dct_interleave16	src/thirdparty/stb_image.h	2203;"	d
dct_interleave8	src/thirdparty/stb_image.h	2078;"	d
dct_interleave8	src/thirdparty/stb_image.h	2202;"	d
dct_long_mac	src/thirdparty/stb_image.h	2234;"	d
dct_long_mac	src/thirdparty/stb_image.h	2407;"	d
dct_long_mul	src/thirdparty/stb_image.h	2230;"	d
dct_long_mul	src/thirdparty/stb_image.h	2406;"	d
dct_pass	src/thirdparty/stb_image.h	2089;"	d
dct_pass	src/thirdparty/stb_image.h	2204;"	d
dct_pass	src/thirdparty/stb_image.h	2261;"	d
dct_pass	src/thirdparty/stb_image.h	2412;"	d
dct_rot	src/thirdparty/stb_image.h	2043;"	d
dct_rot	src/thirdparty/stb_image.h	2197;"	d
dct_trn16	src/thirdparty/stb_image.h	2321;"	d
dct_trn16	src/thirdparty/stb_image.h	2343;"	d
dct_trn32	src/thirdparty/stb_image.h	2322;"	d
dct_trn32	src/thirdparty/stb_image.h	2344;"	d
dct_trn64	src/thirdparty/stb_image.h	2323;"	d
dct_trn64	src/thirdparty/stb_image.h	2345;"	d
dct_trn8_16	src/thirdparty/stb_image.h	2367;"	d
dct_trn8_16	src/thirdparty/stb_image.h	2402;"	d
dct_trn8_32	src/thirdparty/stb_image.h	2368;"	d
dct_trn8_32	src/thirdparty/stb_image.h	2403;"	d
dct_trn8_8	src/thirdparty/stb_image.h	2366;"	d
dct_trn8_8	src/thirdparty/stb_image.h	2401;"	d
dct_wadd	src/thirdparty/stb_image.h	2057;"	d
dct_wadd	src/thirdparty/stb_image.h	2199;"	d
dct_wadd	src/thirdparty/stb_image.h	2243;"	d
dct_wadd	src/thirdparty/stb_image.h	2409;"	d
dct_widen	src/thirdparty/stb_image.h	2052;"	d
dct_widen	src/thirdparty/stb_image.h	2198;"	d
dct_widen	src/thirdparty/stb_image.h	2238;"	d
dct_widen	src/thirdparty/stb_image.h	2408;"	d
dct_wsub	src/thirdparty/stb_image.h	2062;"	d
dct_wsub	src/thirdparty/stb_image.h	2200;"	d
dct_wsub	src/thirdparty/stb_image.h	2248;"	d
dct_wsub	src/thirdparty/stb_image.h	2410;"	d
dec_str_to_int	rituals_gui.cpp	/^static inline int32 dec_str_to_int(char* str, isize len)$/;"	f	file:
dec_str_to_int	src/metaprogram/metaprogram_parser.cpp	/^static inline int32 dec_str_to_int(char* str, isize len)$/;"	f	file:
dec_str_to_int	src/rituals_gui.cpp	/^static inline int32 dec_str_to_int(char* str, isize len)$/;"	f	file:
decorators	src/metaprogram/metaprogram_parser.cpp	/^	char** decorators;$/;"	m	struct:Proc_Prototype	file:
decorators_count	src/metaprogram/metaprogram_parser.cpp	/^	isize decorators_count;$/;"	m	struct:Proc_Prototype	file:
def	src/metaprogram/metaprogram_parser.cpp	/^		Struct_Def def;$/;"	m	struct:Struct_Member::__anon1	file:
defaults	src/metaprogram/metaprogram_parser.cpp	/^	char* defaults;$/;"	m	struct:Proc_Arg	file:
delay	src/thirdparty/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon17
delete_file	src/rituals_serialization.cpp	/^int delete_file(char* path, isize path_length, char* file)$/;"	f
delete_folder	src/rituals_serialization.cpp	/^int delete_folder(char* path, isize path_length)$/;"	f
delete_index	src/rituals_main.cpp	/^	isize delete_index;$/;"	m	struct:Menu_State	file:
delete_world_on_stop	src/rituals_main.cpp	/^	bool delete_world_on_stop;$/;"	m	struct:Play_State	file:
delta	src/thirdparty/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon5
depth	src/thirdparty/stb_image.h	/^   int depth;$/;"	m	struct:__anon12
dequant	src/thirdparty/stb_image.h	/^   stbi_uc dequant[4][64];$/;"	m	struct:__anon6
deserialize_area	src/rituals_serialization.cpp	/^void deserialize_area(World_Area* area, FILE* area_file, Memory_Arena* arena)$/;"	f
deserialize_area_link	src/rituals_serialization.cpp	/^void deserialize_area_link(Area_Link* link, World* world, FILE* fp)$/;"	f
deserialize_entity	src/rituals_serialization.cpp	/^void deserialize_entity(Entity* entity, FILE* file)$/;"	f
deserialize_hitbox	src/rituals_serialization.cpp	/^void deserialize_hitbox(Hitbox* hb, FILE* file)$/;"	f
deserialize_rituals_entity_userdata	src/rituals_serialization.cpp	/^void deserialize_rituals_entity_userdata(Entity* e, FILE* file)$/;"	f
deserialize_sim_body	src/rituals_serialization.cpp	/^void deserialize_sim_body(Sim_Body* body, FILE* file)$/;"	f
deserialize_simulator	src/rituals_serialization.cpp	/^void deserialize_simulator(Simulator* sim, FILE* file, Memory_Arena* arena)$/;"	f
deserialize_sprite	src/rituals_serialization.cpp	/^void deserialize_sprite(Sprite* s, FILE* file)$/;"	f
deserialize_tile_state	src/rituals_serialization.cpp	/^void deserialize_tile_state(Tile_State* state, FILE* file)$/;"	f
deserialize_tilemap	src/rituals_serialization.cpp	/^void deserialize_tilemap(Tilemap* map, FILE* file, Memory_Arena* arena)$/;"	f
deserialize_world	src/rituals_serialization.cpp	/^void deserialize_world(World* world, FILE* world_file)$/;"	f
deserialize_world_area_stub	src/rituals_serialization.cpp	/^void deserialize_world_area_stub(World_Area_Stub* stub, World* world, FILE* fp)$/;"	f
diff1	src/rituals_math.cpp	/^	Vec2 diff1;$/;"	m	struct:Rect2_Clip_Info	file:
diff2	src/rituals_math.cpp	/^	Vec2 diff2;$/;"	m	struct:Rect2_Clip_Info	file:
direction	src/rituals_world_area.cpp	/^	Direction direction;$/;"	m	struct:Entity	file:
e	src/rituals_math.cpp	/^	int32 e[2];$/;"	m	union:Vec2i	file:
e	src/rituals_math.cpp	/^	real e[2];$/;"	m	union:Vec2	file:
e	src/rituals_math.cpp	/^	real e[3];$/;"	m	union:Vec3	file:
e	src/rituals_math.cpp	/^	real e[4];$/;"	m	union:AABB	file:
e	src/rituals_math.cpp	/^	real e[4];$/;"	m	union:Rect2	file:
e	src/rituals_math.cpp	/^	real e[4];$/;"	m	union:Vec4	file:
e	src/rituals_renderer.cpp	/^	Sprite e[4];$/;"	m	struct:Sprite4	file:
e	src/wtb_sprite_renderer.h	/^	Sprite e[4];$/;"	m	struct:Sprite4
east	src/rituals_world_area.cpp	/^	Area_Link east;$/;"	m	struct:World_Area_Stub	file:
eflags	src/thirdparty/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon17
emitter	src/rituals_world.cpp	/^	Emitter emitter;$/;"	m	struct:World	file:
emitter_render	src/rituals_particles.cpp	/^void emitter_render(Emitter* e, Simulator* sim, real dt)$/;"	f
emitter_spawn	src/rituals_particles.cpp	/^void emitter_spawn(Emitter* e, Vec3 pos, Vec2 angle_range, isize count, Particle_Style style) $/;"	f
end	src/metaprogram/metaprogram_parser.cpp	/^	Token *start, *end;$/;"	m	struct:Proc_Prototype	file:
end_temp_arena	src/rituals_memory.cpp	/^void end_temp_arena(Memory_Arena* arena)$/;"	f
enemy	src/rituals_game_info.cpp	/^	} enemy;$/;"	m	union:Rituals_Entity_Userdata	typeref:struct:Rituals_Entity_Userdata::__anon3	file:
entities	src/rituals_world_area.cpp	/^	Entity* entities;$/;"	m	struct:World_Area	file:
entities_capacity	src/rituals_world_area.cpp	/^	isize entities_count, entities_capacity, next_entity_id;$/;"	m	struct:World_Area	file:
entities_count	src/rituals_world_area.cpp	/^	isize entities_count, entities_capacity, next_entity_id;$/;"	m	struct:World_Area	file:
entities_dirty	src/rituals_world_area.cpp	/^	bool entities_dirty;$/;"	m	struct:World_Area	file:
entity	src/rituals_simulation.cpp	/^	Entity* entity;$/;"	m	struct:Sim_Body	file:
entity_id	src/rituals_simulation.cpp	/^	isize entity_id;$/;"	m	struct:Sim_Body	file:
entries	helping_gb.cpp	/^	gbArray(MapEntry<T>) entries;$/;"	m	struct:Map	file:
entry_index	helping_gb.cpp	/^	isize entry_index;$/;"	m	struct:MapFindResult	file:
entry_prev	helping_gb.cpp	/^	isize entry_prev;$/;"	m	struct:MapFindResult	file:
eob_run	src/thirdparty/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon6
eof	src/thirdparty/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon2
events	src/rituals_world_area.cpp	/^	uint64 events;$/;"	m	struct:Entity	file:
expanded	src/thirdparty/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon12
extension	src/thirdparty/tinydir.h	/^	_tinydir_char_t *extension;$/;"	m	struct:tinydir_file
facing	src/rituals_world_area.cpp	/^	int32 facing;$/;"	m	struct:Entity	file:
fast	src/thirdparty/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon9
fast	src/thirdparty/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon5
fast_ac	src/thirdparty/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon6
file	src/metaprogram/metaprogram_parser.cpp	/^	isize file;$/;"	m	struct:Lexer_Location	file:
filename	src/metaprogram/metaprogram_parser.cpp	/^	char* filename;$/;"	m	struct:Lexer_File	file:
files	src/metaprogram/metaprogram_parser.cpp	/^	Lexer_File* files;$/;"	m	struct:Lexer	file:
files_capacity	src/metaprogram/metaprogram_parser.cpp	/^	isize files_count, files_capacity;$/;"	m	struct:Lexer	file:
files_count	src/metaprogram/metaprogram_parser.cpp	/^	isize files_count, files_capacity;$/;"	m	struct:Lexer	file:
finalize_game_registry	src/rituals_game_registry.cpp	/^void finalize_game_registry()$/;"	f
find_proc_prototypes	src/metaprogram/metaprogram_parser.cpp	/^Proc_Prototype* find_proc_prototypes(Token* start, Memory_Arena* arena)$/;"	f
find_struct_defs	src/metaprogram/metaprogram_parser.cpp	/^Struct_Def* find_struct_defs(Lexer* lex, Token* start, Memory_Arena* arena)$/;"	f
first	src/thirdparty/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon16
first_row_filter	src/thirdparty/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v
firstcode	src/thirdparty/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon9
firstsymbol	src/thirdparty/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon9
flags	src/rituals_renderer.cpp	/^	uint32 flags;$/;"	m	struct:Sprite	file:
flags	src/rituals_simulation.cpp	/^	uint64 flags;$/;"	m	struct:Sim_Body	file:
flags	src/rituals_world_area.cpp	/^	uint64 flags;$/;"	m	struct:Entity	file:
flags	src/thirdparty/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon17
flags	src/wtb_sprite_renderer.h	/^	uint32 flags;$/;"	m	struct:Sprite
float2fixed	src/thirdparty/stb_image.h	3072;"	d
float2fixed	src/thirdparty/stb_image.h	3100;"	d
follow_dist	src/rituals_game_info.cpp	/^		real follow_dist;$/;"	m	struct:Rituals_Entity_Userdata::__anon3	file:
force	src/rituals_simulation.cpp	/^	Vec2 velocity, force, collision_vel;$/;"	m	struct:Sim_Body	file:
fps	src/rituals_animations.cpp	/^	real fps;$/;"	m	struct:Animation	file:
frame	src/rituals_particles.cpp	/^	int32 frame;$/;"	m	struct:Particle	file:
frame_max	src/rituals_particles.cpp	/^	int32 frame_max;$/;"	m	struct:Particle_Style	file:
frame_min	src/rituals_particles.cpp	/^	int32 frame_min;$/;"	m	struct:Particle_Style	file:
framerate	src/rituals_particles.cpp	/^	int32 framerate;$/;"	m	struct:Particle_Style	file:
frames	src/rituals_animations.cpp	/^	Animation_Frame* frames;$/;"	m	struct:Animation	file:
frames_capacity	src/rituals_animations.cpp	/^	isize frames_count, frames_capacity;$/;"	m	struct:Animation	file:
frames_count	src/rituals_animations.cpp	/^	isize frames_count, frames_capacity;$/;"	m	struct:Animation	file:
friction	src/rituals_game_info.cpp	/^	real friction;$/;"	m	struct:Tile_Info	file:
game_arena	src/rituals_game.cpp	/^	Memory_Arena* game_arena;$/;"	m	struct:Game_Main	file:
game_calc_mouse_pos	src/rituals_game.cpp	/^void game_calc_mouse_pos(Vec2 offset)$/;"	f
game_set_scale	src/rituals_game.cpp	/^void game_set_scale(real scale)$/;"	f
generate_statics_for_tilemap	src/rituals_simulation.cpp	/^void generate_statics_for_tilemap(Simulator* sim, Tilemap* tilemap)$/;"	f
generate_statics_for_tilemap	src/rituals_win32.cpp	/^void generate_statics_for_tilemap(Simulator* sim, Tilemap* tilemap)$/;"	f
generate_tilemap	src/rituals_tilemap.cpp	/^void generate_tilemap(Tilemap* tilemap, uint64 seed)$/;"	f
generate_world	src/rituals_world.cpp	/^void generate_world(char* name, World* world)$/;"	f
generate_world_area	src/rituals_world.cpp	/^void generate_world_area(World* world, World_Area* area, World_Area_Stub* stub)$/;"	f
get_area_file	src/rituals_serialization.cpp	/^FILE* get_area_file(const char* name, isize id, const char* mode)$/;"	f
get_next_file	src/metaprogram/metaprogram_parser.cpp	/^Lexer_File* get_next_file(Lexer* lex)$/;"	f
get_next_grid_cell	src/rituals_simulation.cpp	/^Sim_Grid_Cell* get_next_grid_cell(Sim_Static_Grid* grid)$/;"	f
get_world_file	src/rituals_serialization.cpp	/^FILE* get_world_file(const char* name, const char* mode)$/;"	f
glActiveTexture	src/thirdparty/gl_core_3_3.h	1118;"	d
glAttachShader	src/thirdparty/gl_core_3_3.h	1195;"	d
glBeginConditionalRender	src/thirdparty/gl_core_3_3.h	1395;"	d
glBeginQuery	src/thirdparty/gl_core_3_3.h	1156;"	d
glBeginTransformFeedback	src/thirdparty/gl_core_3_3.h	1397;"	d
glBindAttribLocation	src/thirdparty/gl_core_3_3.h	1197;"	d
glBindBuffer	src/thirdparty/gl_core_3_3.h	1158;"	d
glBindBufferBase	src/thirdparty/gl_core_3_3.h	1399;"	d
glBindBufferRange	src/thirdparty/gl_core_3_3.h	1401;"	d
glBindFragDataLocation	src/thirdparty/gl_core_3_3.h	1403;"	d
glBindFragDataLocationIndexed	src/thirdparty/gl_core_3_3.h	1628;"	d
glBindFramebuffer	src/thirdparty/gl_core_3_3.h	1405;"	d
glBindRenderbuffer	src/thirdparty/gl_core_3_3.h	1407;"	d
glBindSampler	src/thirdparty/gl_core_3_3.h	1630;"	d
glBindTexture	src/thirdparty/gl_core_3_3.h	1082;"	d
glBindVertexArray	src/thirdparty/gl_core_3_3.h	1409;"	d
glBlendColor	src/thirdparty/gl_core_3_3.h	1137;"	d
glBlendEquation	src/thirdparty/gl_core_3_3.h	1139;"	d
glBlendEquationSeparate	src/thirdparty/gl_core_3_3.h	1199;"	d
glBlendFunc	src/thirdparty/gl_core_3_3.h	985;"	d
glBlendFuncSeparate	src/thirdparty/gl_core_3_3.h	1141;"	d
glBlitFramebuffer	src/thirdparty/gl_core_3_3.h	1411;"	d
glBufferData	src/thirdparty/gl_core_3_3.h	1160;"	d
glBufferSubData	src/thirdparty/gl_core_3_3.h	1162;"	d
glCheckFramebufferStatus	src/thirdparty/gl_core_3_3.h	1413;"	d
glClampColor	src/thirdparty/gl_core_3_3.h	1415;"	d
glClear	src/thirdparty/gl_core_3_3.h	987;"	d
glClearBufferfi	src/thirdparty/gl_core_3_3.h	1417;"	d
glClearBufferfv	src/thirdparty/gl_core_3_3.h	1419;"	d
glClearBufferiv	src/thirdparty/gl_core_3_3.h	1421;"	d
glClearBufferuiv	src/thirdparty/gl_core_3_3.h	1423;"	d
glClearColor	src/thirdparty/gl_core_3_3.h	989;"	d
glClearDepth	src/thirdparty/gl_core_3_3.h	991;"	d
glClearStencil	src/thirdparty/gl_core_3_3.h	993;"	d
glClientWaitSync	src/thirdparty/gl_core_3_3.h	1589;"	d
glColorMask	src/thirdparty/gl_core_3_3.h	995;"	d
glColorMaski	src/thirdparty/gl_core_3_3.h	1425;"	d
glCompileShader	src/thirdparty/gl_core_3_3.h	1201;"	d
glCompressedTexImage1D	src/thirdparty/gl_core_3_3.h	1120;"	d
glCompressedTexImage2D	src/thirdparty/gl_core_3_3.h	1122;"	d
glCompressedTexImage3D	src/thirdparty/gl_core_3_3.h	1124;"	d
glCompressedTexSubImage1D	src/thirdparty/gl_core_3_3.h	1126;"	d
glCompressedTexSubImage2D	src/thirdparty/gl_core_3_3.h	1128;"	d
glCompressedTexSubImage3D	src/thirdparty/gl_core_3_3.h	1130;"	d
glCopyBufferSubData	src/thirdparty/gl_core_3_3.h	1564;"	d
glCopyTexImage1D	src/thirdparty/gl_core_3_3.h	1084;"	d
glCopyTexImage2D	src/thirdparty/gl_core_3_3.h	1086;"	d
glCopyTexSubImage1D	src/thirdparty/gl_core_3_3.h	1088;"	d
glCopyTexSubImage2D	src/thirdparty/gl_core_3_3.h	1090;"	d
glCopyTexSubImage3D	src/thirdparty/gl_core_3_3.h	1109;"	d
glCreateProgram	src/thirdparty/gl_core_3_3.h	1203;"	d
glCreateShader	src/thirdparty/gl_core_3_3.h	1205;"	d
glCullFace	src/thirdparty/gl_core_3_3.h	997;"	d
glDeleteBuffers	src/thirdparty/gl_core_3_3.h	1164;"	d
glDeleteFramebuffers	src/thirdparty/gl_core_3_3.h	1427;"	d
glDeleteProgram	src/thirdparty/gl_core_3_3.h	1207;"	d
glDeleteQueries	src/thirdparty/gl_core_3_3.h	1166;"	d
glDeleteRenderbuffers	src/thirdparty/gl_core_3_3.h	1429;"	d
glDeleteSamplers	src/thirdparty/gl_core_3_3.h	1632;"	d
glDeleteShader	src/thirdparty/gl_core_3_3.h	1209;"	d
glDeleteSync	src/thirdparty/gl_core_3_3.h	1591;"	d
glDeleteTextures	src/thirdparty/gl_core_3_3.h	1092;"	d
glDeleteVertexArrays	src/thirdparty/gl_core_3_3.h	1431;"	d
glDepthFunc	src/thirdparty/gl_core_3_3.h	999;"	d
glDepthMask	src/thirdparty/gl_core_3_3.h	1001;"	d
glDepthRange	src/thirdparty/gl_core_3_3.h	1003;"	d
glDetachShader	src/thirdparty/gl_core_3_3.h	1211;"	d
glDisable	src/thirdparty/gl_core_3_3.h	1005;"	d
glDisableVertexAttribArray	src/thirdparty/gl_core_3_3.h	1213;"	d
glDisablei	src/thirdparty/gl_core_3_3.h	1433;"	d
glDrawArrays	src/thirdparty/gl_core_3_3.h	1094;"	d
glDrawArraysInstanced	src/thirdparty/gl_core_3_3.h	1566;"	d
glDrawBuffer	src/thirdparty/gl_core_3_3.h	1007;"	d
glDrawBuffers	src/thirdparty/gl_core_3_3.h	1215;"	d
glDrawElements	src/thirdparty/gl_core_3_3.h	1096;"	d
glDrawElementsBaseVertex	src/thirdparty/gl_core_3_3.h	1593;"	d
glDrawElementsInstanced	src/thirdparty/gl_core_3_3.h	1568;"	d
glDrawElementsInstancedBaseVertex	src/thirdparty/gl_core_3_3.h	1595;"	d
glDrawRangeElements	src/thirdparty/gl_core_3_3.h	1111;"	d
glDrawRangeElementsBaseVertex	src/thirdparty/gl_core_3_3.h	1597;"	d
glEnable	src/thirdparty/gl_core_3_3.h	1009;"	d
glEnableVertexAttribArray	src/thirdparty/gl_core_3_3.h	1217;"	d
glEnablei	src/thirdparty/gl_core_3_3.h	1435;"	d
glEndConditionalRender	src/thirdparty/gl_core_3_3.h	1437;"	d
glEndQuery	src/thirdparty/gl_core_3_3.h	1168;"	d
glEndTransformFeedback	src/thirdparty/gl_core_3_3.h	1439;"	d
glFenceSync	src/thirdparty/gl_core_3_3.h	1599;"	d
glFinish	src/thirdparty/gl_core_3_3.h	1011;"	d
glFlush	src/thirdparty/gl_core_3_3.h	1013;"	d
glFlushMappedBufferRange	src/thirdparty/gl_core_3_3.h	1441;"	d
glFramebufferRenderbuffer	src/thirdparty/gl_core_3_3.h	1443;"	d
glFramebufferTexture	src/thirdparty/gl_core_3_3.h	1601;"	d
glFramebufferTexture1D	src/thirdparty/gl_core_3_3.h	1445;"	d
glFramebufferTexture2D	src/thirdparty/gl_core_3_3.h	1447;"	d
glFramebufferTexture3D	src/thirdparty/gl_core_3_3.h	1449;"	d
glFramebufferTextureLayer	src/thirdparty/gl_core_3_3.h	1451;"	d
glFrontFace	src/thirdparty/gl_core_3_3.h	1015;"	d
glGenBuffers	src/thirdparty/gl_core_3_3.h	1170;"	d
glGenFramebuffers	src/thirdparty/gl_core_3_3.h	1453;"	d
glGenQueries	src/thirdparty/gl_core_3_3.h	1172;"	d
glGenRenderbuffers	src/thirdparty/gl_core_3_3.h	1455;"	d
glGenSamplers	src/thirdparty/gl_core_3_3.h	1634;"	d
glGenTextures	src/thirdparty/gl_core_3_3.h	1098;"	d
glGenVertexArrays	src/thirdparty/gl_core_3_3.h	1457;"	d
glGenerateMipmap	src/thirdparty/gl_core_3_3.h	1459;"	d
glGetActiveAttrib	src/thirdparty/gl_core_3_3.h	1219;"	d
glGetActiveUniform	src/thirdparty/gl_core_3_3.h	1221;"	d
glGetActiveUniformBlockName	src/thirdparty/gl_core_3_3.h	1570;"	d
glGetActiveUniformBlockiv	src/thirdparty/gl_core_3_3.h	1572;"	d
glGetActiveUniformName	src/thirdparty/gl_core_3_3.h	1574;"	d
glGetActiveUniformsiv	src/thirdparty/gl_core_3_3.h	1576;"	d
glGetAttachedShaders	src/thirdparty/gl_core_3_3.h	1223;"	d
glGetAttribLocation	src/thirdparty/gl_core_3_3.h	1225;"	d
glGetBooleani_v	src/thirdparty/gl_core_3_3.h	1461;"	d
glGetBooleanv	src/thirdparty/gl_core_3_3.h	1017;"	d
glGetBufferParameteri64v	src/thirdparty/gl_core_3_3.h	1603;"	d
glGetBufferParameteriv	src/thirdparty/gl_core_3_3.h	1174;"	d
glGetBufferPointerv	src/thirdparty/gl_core_3_3.h	1176;"	d
glGetBufferSubData	src/thirdparty/gl_core_3_3.h	1178;"	d
glGetCompressedTexImage	src/thirdparty/gl_core_3_3.h	1132;"	d
glGetDoublev	src/thirdparty/gl_core_3_3.h	1019;"	d
glGetError	src/thirdparty/gl_core_3_3.h	1021;"	d
glGetFloatv	src/thirdparty/gl_core_3_3.h	1023;"	d
glGetFragDataIndex	src/thirdparty/gl_core_3_3.h	1636;"	d
glGetFragDataLocation	src/thirdparty/gl_core_3_3.h	1463;"	d
glGetFramebufferAttachmentParameteriv	src/thirdparty/gl_core_3_3.h	1465;"	d
glGetInteger64i_v	src/thirdparty/gl_core_3_3.h	1605;"	d
glGetInteger64v	src/thirdparty/gl_core_3_3.h	1607;"	d
glGetIntegeri_v	src/thirdparty/gl_core_3_3.h	1467;"	d
glGetIntegerv	src/thirdparty/gl_core_3_3.h	1025;"	d
glGetMultisamplefv	src/thirdparty/gl_core_3_3.h	1609;"	d
glGetProgramInfoLog	src/thirdparty/gl_core_3_3.h	1227;"	d
glGetProgramiv	src/thirdparty/gl_core_3_3.h	1229;"	d
glGetQueryObjecti64v	src/thirdparty/gl_core_3_3.h	1638;"	d
glGetQueryObjectiv	src/thirdparty/gl_core_3_3.h	1180;"	d
glGetQueryObjectui64v	src/thirdparty/gl_core_3_3.h	1640;"	d
glGetQueryObjectuiv	src/thirdparty/gl_core_3_3.h	1182;"	d
glGetQueryiv	src/thirdparty/gl_core_3_3.h	1184;"	d
glGetRenderbufferParameteriv	src/thirdparty/gl_core_3_3.h	1469;"	d
glGetSamplerParameterIiv	src/thirdparty/gl_core_3_3.h	1642;"	d
glGetSamplerParameterIuiv	src/thirdparty/gl_core_3_3.h	1644;"	d
glGetSamplerParameterfv	src/thirdparty/gl_core_3_3.h	1646;"	d
glGetSamplerParameteriv	src/thirdparty/gl_core_3_3.h	1648;"	d
glGetShaderInfoLog	src/thirdparty/gl_core_3_3.h	1231;"	d
glGetShaderSource	src/thirdparty/gl_core_3_3.h	1233;"	d
glGetShaderiv	src/thirdparty/gl_core_3_3.h	1235;"	d
glGetString	src/thirdparty/gl_core_3_3.h	1027;"	d
glGetStringi	src/thirdparty/gl_core_3_3.h	1471;"	d
glGetSynciv	src/thirdparty/gl_core_3_3.h	1611;"	d
glGetTexImage	src/thirdparty/gl_core_3_3.h	1029;"	d
glGetTexLevelParameterfv	src/thirdparty/gl_core_3_3.h	1031;"	d
glGetTexLevelParameteriv	src/thirdparty/gl_core_3_3.h	1033;"	d
glGetTexParameterIiv	src/thirdparty/gl_core_3_3.h	1473;"	d
glGetTexParameterIuiv	src/thirdparty/gl_core_3_3.h	1475;"	d
glGetTexParameterfv	src/thirdparty/gl_core_3_3.h	1035;"	d
glGetTexParameteriv	src/thirdparty/gl_core_3_3.h	1037;"	d
glGetTransformFeedbackVarying	src/thirdparty/gl_core_3_3.h	1477;"	d
glGetUniformBlockIndex	src/thirdparty/gl_core_3_3.h	1578;"	d
glGetUniformIndices	src/thirdparty/gl_core_3_3.h	1580;"	d
glGetUniformLocation	src/thirdparty/gl_core_3_3.h	1237;"	d
glGetUniformfv	src/thirdparty/gl_core_3_3.h	1239;"	d
glGetUniformiv	src/thirdparty/gl_core_3_3.h	1241;"	d
glGetUniformuiv	src/thirdparty/gl_core_3_3.h	1479;"	d
glGetVertexAttribIiv	src/thirdparty/gl_core_3_3.h	1481;"	d
glGetVertexAttribIuiv	src/thirdparty/gl_core_3_3.h	1483;"	d
glGetVertexAttribPointerv	src/thirdparty/gl_core_3_3.h	1243;"	d
glGetVertexAttribdv	src/thirdparty/gl_core_3_3.h	1245;"	d
glGetVertexAttribfv	src/thirdparty/gl_core_3_3.h	1247;"	d
glGetVertexAttribiv	src/thirdparty/gl_core_3_3.h	1249;"	d
glHint	src/thirdparty/gl_core_3_3.h	1039;"	d
glIsBuffer	src/thirdparty/gl_core_3_3.h	1186;"	d
glIsEnabled	src/thirdparty/gl_core_3_3.h	1041;"	d
glIsEnabledi	src/thirdparty/gl_core_3_3.h	1485;"	d
glIsFramebuffer	src/thirdparty/gl_core_3_3.h	1487;"	d
glIsProgram	src/thirdparty/gl_core_3_3.h	1251;"	d
glIsQuery	src/thirdparty/gl_core_3_3.h	1188;"	d
glIsRenderbuffer	src/thirdparty/gl_core_3_3.h	1489;"	d
glIsSampler	src/thirdparty/gl_core_3_3.h	1650;"	d
glIsShader	src/thirdparty/gl_core_3_3.h	1253;"	d
glIsSync	src/thirdparty/gl_core_3_3.h	1613;"	d
glIsTexture	src/thirdparty/gl_core_3_3.h	1100;"	d
glIsVertexArray	src/thirdparty/gl_core_3_3.h	1491;"	d
glLineWidth	src/thirdparty/gl_core_3_3.h	1043;"	d
glLinkProgram	src/thirdparty/gl_core_3_3.h	1255;"	d
glLogicOp	src/thirdparty/gl_core_3_3.h	1045;"	d
glMapBuffer	src/thirdparty/gl_core_3_3.h	1190;"	d
glMapBufferRange	src/thirdparty/gl_core_3_3.h	1493;"	d
glMultiDrawArrays	src/thirdparty/gl_core_3_3.h	1143;"	d
glMultiDrawElements	src/thirdparty/gl_core_3_3.h	1145;"	d
glMultiDrawElementsBaseVertex	src/thirdparty/gl_core_3_3.h	1615;"	d
glPixelStoref	src/thirdparty/gl_core_3_3.h	1047;"	d
glPixelStorei	src/thirdparty/gl_core_3_3.h	1049;"	d
glPointParameterf	src/thirdparty/gl_core_3_3.h	1147;"	d
glPointParameterfv	src/thirdparty/gl_core_3_3.h	1149;"	d
glPointParameteri	src/thirdparty/gl_core_3_3.h	1151;"	d
glPointParameteriv	src/thirdparty/gl_core_3_3.h	1153;"	d
glPointSize	src/thirdparty/gl_core_3_3.h	1051;"	d
glPolygonMode	src/thirdparty/gl_core_3_3.h	1053;"	d
glPolygonOffset	src/thirdparty/gl_core_3_3.h	1102;"	d
glPrimitiveRestartIndex	src/thirdparty/gl_core_3_3.h	1582;"	d
glProvokingVertex	src/thirdparty/gl_core_3_3.h	1617;"	d
glQueryCounter	src/thirdparty/gl_core_3_3.h	1652;"	d
glReadBuffer	src/thirdparty/gl_core_3_3.h	1055;"	d
glReadPixels	src/thirdparty/gl_core_3_3.h	1057;"	d
glRenderbufferStorage	src/thirdparty/gl_core_3_3.h	1495;"	d
glRenderbufferStorageMultisample	src/thirdparty/gl_core_3_3.h	1497;"	d
glSampleCoverage	src/thirdparty/gl_core_3_3.h	1134;"	d
glSampleMaski	src/thirdparty/gl_core_3_3.h	1619;"	d
glSamplerParameterIiv	src/thirdparty/gl_core_3_3.h	1654;"	d
glSamplerParameterIuiv	src/thirdparty/gl_core_3_3.h	1656;"	d
glSamplerParameterf	src/thirdparty/gl_core_3_3.h	1658;"	d
glSamplerParameterfv	src/thirdparty/gl_core_3_3.h	1660;"	d
glSamplerParameteri	src/thirdparty/gl_core_3_3.h	1662;"	d
glSamplerParameteriv	src/thirdparty/gl_core_3_3.h	1664;"	d
glScissor	src/thirdparty/gl_core_3_3.h	1059;"	d
glShaderSource	src/thirdparty/gl_core_3_3.h	1257;"	d
glStencilFunc	src/thirdparty/gl_core_3_3.h	1061;"	d
glStencilFuncSeparate	src/thirdparty/gl_core_3_3.h	1259;"	d
glStencilMask	src/thirdparty/gl_core_3_3.h	1063;"	d
glStencilMaskSeparate	src/thirdparty/gl_core_3_3.h	1261;"	d
glStencilOp	src/thirdparty/gl_core_3_3.h	1065;"	d
glStencilOpSeparate	src/thirdparty/gl_core_3_3.h	1263;"	d
glTexBuffer	src/thirdparty/gl_core_3_3.h	1584;"	d
glTexImage1D	src/thirdparty/gl_core_3_3.h	1067;"	d
glTexImage2D	src/thirdparty/gl_core_3_3.h	1069;"	d
glTexImage2DMultisample	src/thirdparty/gl_core_3_3.h	1621;"	d
glTexImage3D	src/thirdparty/gl_core_3_3.h	1113;"	d
glTexImage3DMultisample	src/thirdparty/gl_core_3_3.h	1623;"	d
glTexParameterIiv	src/thirdparty/gl_core_3_3.h	1499;"	d
glTexParameterIuiv	src/thirdparty/gl_core_3_3.h	1501;"	d
glTexParameterf	src/thirdparty/gl_core_3_3.h	1071;"	d
glTexParameterfv	src/thirdparty/gl_core_3_3.h	1073;"	d
glTexParameteri	src/thirdparty/gl_core_3_3.h	1075;"	d
glTexParameteriv	src/thirdparty/gl_core_3_3.h	1077;"	d
glTexSubImage1D	src/thirdparty/gl_core_3_3.h	1104;"	d
glTexSubImage2D	src/thirdparty/gl_core_3_3.h	1106;"	d
glTexSubImage3D	src/thirdparty/gl_core_3_3.h	1115;"	d
glTransformFeedbackVaryings	src/thirdparty/gl_core_3_3.h	1503;"	d
glUniform1f	src/thirdparty/gl_core_3_3.h	1265;"	d
glUniform1fv	src/thirdparty/gl_core_3_3.h	1267;"	d
glUniform1i	src/thirdparty/gl_core_3_3.h	1269;"	d
glUniform1iv	src/thirdparty/gl_core_3_3.h	1271;"	d
glUniform1ui	src/thirdparty/gl_core_3_3.h	1505;"	d
glUniform1uiv	src/thirdparty/gl_core_3_3.h	1507;"	d
glUniform2f	src/thirdparty/gl_core_3_3.h	1273;"	d
glUniform2fv	src/thirdparty/gl_core_3_3.h	1275;"	d
glUniform2i	src/thirdparty/gl_core_3_3.h	1277;"	d
glUniform2iv	src/thirdparty/gl_core_3_3.h	1279;"	d
glUniform2ui	src/thirdparty/gl_core_3_3.h	1509;"	d
glUniform2uiv	src/thirdparty/gl_core_3_3.h	1511;"	d
glUniform3f	src/thirdparty/gl_core_3_3.h	1281;"	d
glUniform3fv	src/thirdparty/gl_core_3_3.h	1283;"	d
glUniform3i	src/thirdparty/gl_core_3_3.h	1285;"	d
glUniform3iv	src/thirdparty/gl_core_3_3.h	1287;"	d
glUniform3ui	src/thirdparty/gl_core_3_3.h	1513;"	d
glUniform3uiv	src/thirdparty/gl_core_3_3.h	1515;"	d
glUniform4f	src/thirdparty/gl_core_3_3.h	1289;"	d
glUniform4fv	src/thirdparty/gl_core_3_3.h	1291;"	d
glUniform4i	src/thirdparty/gl_core_3_3.h	1293;"	d
glUniform4iv	src/thirdparty/gl_core_3_3.h	1295;"	d
glUniform4ui	src/thirdparty/gl_core_3_3.h	1517;"	d
glUniform4uiv	src/thirdparty/gl_core_3_3.h	1519;"	d
glUniformBlockBinding	src/thirdparty/gl_core_3_3.h	1586;"	d
glUniformMatrix2fv	src/thirdparty/gl_core_3_3.h	1297;"	d
glUniformMatrix2x3fv	src/thirdparty/gl_core_3_3.h	1382;"	d
glUniformMatrix2x4fv	src/thirdparty/gl_core_3_3.h	1384;"	d
glUniformMatrix3fv	src/thirdparty/gl_core_3_3.h	1299;"	d
glUniformMatrix3x2fv	src/thirdparty/gl_core_3_3.h	1386;"	d
glUniformMatrix3x4fv	src/thirdparty/gl_core_3_3.h	1388;"	d
glUniformMatrix4fv	src/thirdparty/gl_core_3_3.h	1301;"	d
glUniformMatrix4x2fv	src/thirdparty/gl_core_3_3.h	1390;"	d
glUniformMatrix4x3fv	src/thirdparty/gl_core_3_3.h	1392;"	d
glUnmapBuffer	src/thirdparty/gl_core_3_3.h	1192;"	d
glUseProgram	src/thirdparty/gl_core_3_3.h	1303;"	d
glValidateProgram	src/thirdparty/gl_core_3_3.h	1305;"	d
glVertexAttrib1d	src/thirdparty/gl_core_3_3.h	1307;"	d
glVertexAttrib1dv	src/thirdparty/gl_core_3_3.h	1309;"	d
glVertexAttrib1f	src/thirdparty/gl_core_3_3.h	1311;"	d
glVertexAttrib1fv	src/thirdparty/gl_core_3_3.h	1313;"	d
glVertexAttrib1s	src/thirdparty/gl_core_3_3.h	1315;"	d
glVertexAttrib1sv	src/thirdparty/gl_core_3_3.h	1317;"	d
glVertexAttrib2d	src/thirdparty/gl_core_3_3.h	1319;"	d
glVertexAttrib2dv	src/thirdparty/gl_core_3_3.h	1321;"	d
glVertexAttrib2f	src/thirdparty/gl_core_3_3.h	1323;"	d
glVertexAttrib2fv	src/thirdparty/gl_core_3_3.h	1325;"	d
glVertexAttrib2s	src/thirdparty/gl_core_3_3.h	1327;"	d
glVertexAttrib2sv	src/thirdparty/gl_core_3_3.h	1329;"	d
glVertexAttrib3d	src/thirdparty/gl_core_3_3.h	1331;"	d
glVertexAttrib3dv	src/thirdparty/gl_core_3_3.h	1333;"	d
glVertexAttrib3f	src/thirdparty/gl_core_3_3.h	1335;"	d
glVertexAttrib3fv	src/thirdparty/gl_core_3_3.h	1337;"	d
glVertexAttrib3s	src/thirdparty/gl_core_3_3.h	1339;"	d
glVertexAttrib3sv	src/thirdparty/gl_core_3_3.h	1341;"	d
glVertexAttrib4Nbv	src/thirdparty/gl_core_3_3.h	1343;"	d
glVertexAttrib4Niv	src/thirdparty/gl_core_3_3.h	1345;"	d
glVertexAttrib4Nsv	src/thirdparty/gl_core_3_3.h	1347;"	d
glVertexAttrib4Nub	src/thirdparty/gl_core_3_3.h	1349;"	d
glVertexAttrib4Nubv	src/thirdparty/gl_core_3_3.h	1351;"	d
glVertexAttrib4Nuiv	src/thirdparty/gl_core_3_3.h	1353;"	d
glVertexAttrib4Nusv	src/thirdparty/gl_core_3_3.h	1355;"	d
glVertexAttrib4bv	src/thirdparty/gl_core_3_3.h	1357;"	d
glVertexAttrib4d	src/thirdparty/gl_core_3_3.h	1359;"	d
glVertexAttrib4dv	src/thirdparty/gl_core_3_3.h	1361;"	d
glVertexAttrib4f	src/thirdparty/gl_core_3_3.h	1363;"	d
glVertexAttrib4fv	src/thirdparty/gl_core_3_3.h	1365;"	d
glVertexAttrib4iv	src/thirdparty/gl_core_3_3.h	1367;"	d
glVertexAttrib4s	src/thirdparty/gl_core_3_3.h	1369;"	d
glVertexAttrib4sv	src/thirdparty/gl_core_3_3.h	1371;"	d
glVertexAttrib4ubv	src/thirdparty/gl_core_3_3.h	1373;"	d
glVertexAttrib4uiv	src/thirdparty/gl_core_3_3.h	1375;"	d
glVertexAttrib4usv	src/thirdparty/gl_core_3_3.h	1377;"	d
glVertexAttribDivisor	src/thirdparty/gl_core_3_3.h	1666;"	d
glVertexAttribI1i	src/thirdparty/gl_core_3_3.h	1521;"	d
glVertexAttribI1iv	src/thirdparty/gl_core_3_3.h	1523;"	d
glVertexAttribI1ui	src/thirdparty/gl_core_3_3.h	1525;"	d
glVertexAttribI1uiv	src/thirdparty/gl_core_3_3.h	1527;"	d
glVertexAttribI2i	src/thirdparty/gl_core_3_3.h	1529;"	d
glVertexAttribI2iv	src/thirdparty/gl_core_3_3.h	1531;"	d
glVertexAttribI2ui	src/thirdparty/gl_core_3_3.h	1533;"	d
glVertexAttribI2uiv	src/thirdparty/gl_core_3_3.h	1535;"	d
glVertexAttribI3i	src/thirdparty/gl_core_3_3.h	1537;"	d
glVertexAttribI3iv	src/thirdparty/gl_core_3_3.h	1539;"	d
glVertexAttribI3ui	src/thirdparty/gl_core_3_3.h	1541;"	d
glVertexAttribI3uiv	src/thirdparty/gl_core_3_3.h	1543;"	d
glVertexAttribI4bv	src/thirdparty/gl_core_3_3.h	1545;"	d
glVertexAttribI4i	src/thirdparty/gl_core_3_3.h	1547;"	d
glVertexAttribI4iv	src/thirdparty/gl_core_3_3.h	1549;"	d
glVertexAttribI4sv	src/thirdparty/gl_core_3_3.h	1551;"	d
glVertexAttribI4ubv	src/thirdparty/gl_core_3_3.h	1553;"	d
glVertexAttribI4ui	src/thirdparty/gl_core_3_3.h	1555;"	d
glVertexAttribI4uiv	src/thirdparty/gl_core_3_3.h	1557;"	d
glVertexAttribI4usv	src/thirdparty/gl_core_3_3.h	1559;"	d
glVertexAttribIPointer	src/thirdparty/gl_core_3_3.h	1561;"	d
glVertexAttribP1ui	src/thirdparty/gl_core_3_3.h	1668;"	d
glVertexAttribP1uiv	src/thirdparty/gl_core_3_3.h	1670;"	d
glVertexAttribP2ui	src/thirdparty/gl_core_3_3.h	1672;"	d
glVertexAttribP2uiv	src/thirdparty/gl_core_3_3.h	1674;"	d
glVertexAttribP3ui	src/thirdparty/gl_core_3_3.h	1676;"	d
glVertexAttribP3uiv	src/thirdparty/gl_core_3_3.h	1678;"	d
glVertexAttribP4ui	src/thirdparty/gl_core_3_3.h	1680;"	d
glVertexAttribP4uiv	src/thirdparty/gl_core_3_3.h	1682;"	d
glVertexAttribPointer	src/thirdparty/gl_core_3_3.h	1379;"	d
glViewport	src/thirdparty/gl_core_3_3.h	1079;"	d
glWaitSync	src/thirdparty/gl_core_3_3.h	1625;"	d
global_player_body	src/rituals_world.cpp	/^	Sim_Body global_player_body;$/;"	m	struct:World	file:
global_player_entity	src/rituals_world.cpp	/^	Entity global_player_entity;$/;"	m	struct:World	file:
glyph_height	rituals_gui.cpp	/^	int32 glyph_width, glyph_height;$/;"	m	struct:Spritefont	file:
glyph_height	src/rituals_gui.cpp	/^	int32 glyph_width, glyph_height;$/;"	m	struct:Spritefont	file:
glyph_width	rituals_gui.cpp	/^	int32 glyph_width, glyph_height;$/;"	m	struct:Spritefont	file:
glyph_width	src/rituals_gui.cpp	/^	int32 glyph_width, glyph_height;$/;"	m	struct:Spritefont	file:
glyphs	rituals_gui.cpp	/^	Rect* glyphs;$/;"	m	struct:Spritefont	file:
glyphs	src/rituals_gui.cpp	/^	Rect2* glyphs;$/;"	m	struct:Spritefont	file:
goblin_knight	src/rituals_game_info.cpp	/^			} goblin_knight;$/;"	m	union:Rituals_Entity_Userdata::__anon3::__anon4	typeref:struct:Rituals_Entity_Userdata::__anon3::__anon4::__anon7	file:
grid	src/rituals_simulation.cpp	/^	Sim_Static_Grid* grid;$/;"	m	struct:Simulator	file:
ground_restitution	src/rituals_particles.cpp	/^	real ground_restitution;$/;"	m	struct:Particle_Style	file:
group	src/rituals_simulation.cpp	/^	uint64 group;$/;"	m	struct:Sim_Body	file:
group	src/rituals_world_area.cpp	/^	uint64 group;$/;"	m	struct:Hitbox	file:
groups	src/rituals_renderer.cpp	/^	Render_Group* groups;$/;"	m	struct:OpenGL_Renderer	file:
groups	src/wtb_sprite_renderer.h	/^	Render_Group* groups;$/;"	m	struct:OpenGL_Renderer
groups_count	src/rituals_renderer.cpp	/^	isize groups_count;$/;"	m	struct:OpenGL_Renderer	file:
groups_count	src/wtb_sprite_renderer.h	/^	isize groups_count;$/;"	m	struct:OpenGL_Renderer
gui_add_button	src/rituals_gui.cpp	/^bool gui_add_button(Vec2 position, char* text)$/;"	f
gui_add_button	src/rituals_gui.cpp	/^bool gui_add_button(Vec2 position, char* text, Vec2 minimum_size)$/;"	f
gui_add_checkbox	src/rituals_gui.cpp	/^bool gui_add_checkbox(Vec2 position, char* text, bool* value)$/;"	f
gui_add_slider	src/rituals_gui.cpp	/^void gui_add_slider(Vec2 position, Vec2 size, char* label, real min, real max, int precision, real* in_value, bool* active, bool show_bounds = false)$/;"	f
gui_add_text_input	src/rituals_gui.cpp	/^void gui_add_text_input(Gui_Text_Input_Handle* handle, Vec2 position, Vec2 size, char* default_text=NULL)$/;"	f
gui_query_mouse	src/rituals_gui.cpp	/^bool gui_query_mouse(Rect2 region, Vec2 parent)$/;"	f
h	src/rituals_inventory.cpp	/^	isize w, h, size;$/;"	m	struct:Inventory	file:
h	src/rituals_math.cpp	/^		real x, y, w, h;$/;"	m	struct:Rect2::__anon9	file:
h	src/rituals_math.cpp	/^	int32 x, y, w, h;$/;"	m	struct:Rect2i	file:
h	src/rituals_tilemap.cpp	/^	isize w, h;$/;"	m	struct:Tilemap	file:
h	src/thirdparty/stb_image.h	/^      int h,v;$/;"	m	struct:__anon6::__anon7
h	src/thirdparty/stb_image.h	/^   int w,h;$/;"	m	struct:__anon17
h2	src/thirdparty/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon6::__anon7
ha	src/thirdparty/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon6::__anon7
handle	src/rituals_main.cpp	/^	Gui_Text_Input_Handle handle;$/;"	m	struct:Menu_State	file:
has_bottom_texture	src/rituals_game_info.cpp	/^	bool has_bottom_texture;$/;"	m	struct:Tile_Info	file:
has_next	src/thirdparty/tinydir.h	/^	int has_next;$/;"	m	struct:tinydir_dir
has_top_texture	src/rituals_game_info.cpp	/^	bool has_top_texture;$/;"	m	struct:Tile_Info	file:
hash	src/metaprogram/metaprogram_parser.cpp	/^	Hash hash;$/;"	m	struct:Token	file:
hash	src/rituals_game_info.cpp	/^	usize hash;$/;"	m	struct:Item_Info	file:
hash	src/rituals_game_info.cpp	/^	usize hash;$/;"	m	struct:Tile_Info	file:
hash_index	helping_gb.cpp	/^	isize hash_index;$/;"	m	struct:MapFindResult	file:
hash_literal	src/metaprogram/metaprogram_parser.cpp	22;"	d	file:
hash_str	src/rituals_game_registry.cpp	/^usize hash_str(const char* str)$/;"	f
hash_string	src/metaprogram/metaprogram_parser.cpp	/^Hash hash_string(char* c, int len)$/;"	f
hashes	helping_gb.cpp	/^	gbArray(isize) hashes;$/;"	m	struct:Map	file:
hd	src/thirdparty/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon6::__anon7
head	src/metaprogram/metaprogram_parser.cpp	/^	char* head;$/;"	m	struct:Lexer_File	file:
head	src/rituals_memory.cpp	/^	isize capacity, head;$/;"	m	struct:Memory_Arena	file:
heal_cooldown	src/rituals_game_info.cpp	/^		real heal_cooldown;$/;"	m	struct:Rituals_Entity_Userdata::__anon2	file:
heal_rate	src/rituals_game_info.cpp	/^		int32 heal_rate;$/;"	m	struct:Rituals_Entity_Userdata::__anon2	file:
heal_timer	src/rituals_game_info.cpp	/^		real heal_timer;$/;"	m	struct:Rituals_Entity_Userdata::__anon2	file:
heal_to_interval	src/rituals_game_info.cpp	/^		int32 heal_to_interval;$/;"	m	struct:Rituals_Entity_Userdata::__anon2	file:
health	src/rituals_game_info.cpp	/^			} health;$/;"	m	union:Rituals_Entity_Userdata::__anon8::__anon9	typeref:struct:Rituals_Entity_Userdata::__anon8::__anon9::__anon11	file:
health	src/rituals_world_area.cpp	/^	int32 health;$/;"	m	struct:Entity	file:
held_entity_id	src/rituals_game_info.cpp	/^		isize held_entity_id;$/;"	m	struct:Rituals_Entity_Userdata::__anon2	file:
hex_to_v4	src/rituals_math.cpp	/^Vec4 hex_to_v4(uint32 hex) $/;"	f
hext	src/rituals_math.cpp	/^				Vec2 hext;$/;"	m	struct:AABB::__anon5::__anon6::__anon8	file:
hh	src/rituals_math.cpp	/^				real hw, hh;$/;"	m	struct:AABB::__anon5::__anon6::__anon7	file:
hitbox	src/rituals_world_area.cpp	/^	Hitbox hitbox;$/;"	m	struct:Entity	file:
hitbox_contacts	src/rituals_world_area.cpp	/^	Hitbox_Contact* hitbox_contacts;$/;"	m	struct:World_Area	file:
hitbox_contacts_capacity	src/rituals_world_area.cpp	/^	isize hitbox_contacts_count, hitbox_contacts_capacity;$/;"	m	struct:World_Area	file:
hitbox_contacts_count	src/rituals_world_area.cpp	/^	isize hitbox_contacts_count, hitbox_contacts_capacity;$/;"	m	struct:World_Area	file:
hitbox_sort_axis	src/rituals_world_area.cpp	/^	int32 hitbox_sort_axis;$/;"	m	struct:World_Area	file:
hitboxes	src/rituals_world_area.cpp	/^	Hitbox* hitboxes;$/;"	m	struct:World_Area	file:
hitboxes_capacity	src/rituals_world_area.cpp	/^	isize hitboxes_count, hitboxes_capacity;$/;"	m	struct:World_Area	file:
hitboxes_count	src/rituals_world_area.cpp	/^	isize hitboxes_count, hitboxes_capacity;$/;"	m	struct:World_Area	file:
hs	src/thirdparty/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon8
hsz	src/thirdparty/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon14
huff_ac	src/thirdparty/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon6
huff_dc	src/thirdparty/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon6
hw	src/rituals_math.cpp	/^				real hw, hh;$/;"	m	struct:AABB::__anon5::__anon6::__anon7	file:
id	src/rituals_animations.cpp	/^	isize id;$/;"	m	struct:Animation	file:
id	src/rituals_game_info.cpp	/^				isize id, count;$/;"	m	struct:Rituals_Entity_Userdata::__anon8::__anon9::__anon10	file:
id	src/rituals_game_info.cpp	/^	isize id;$/;"	m	struct:Item_Info	file:
id	src/rituals_game_info.cpp	/^	isize id;$/;"	m	struct:Tile_Info	file:
id	src/rituals_game_info.cpp	/^	isize id;$/;"	m	struct:Tile_State	file:
id	src/rituals_inventory.cpp	/^	isize id;$/;"	m	struct:Item_Stack	file:
id	src/rituals_particles.cpp	/^	int32 id;$/;"	m	struct:Particle_Style	file:
id	src/rituals_simulation.cpp	/^	isize id;$/;"	m	struct:Sim_Body	file:
id	src/rituals_world_area.cpp	/^	isize id;$/;"	m	struct:Entity	file:
id	src/rituals_world_area.cpp	/^	isize id;$/;"	m	struct:Hitbox	file:
id	src/rituals_world_area.cpp	/^	isize id;$/;"	m	struct:World_Area	file:
id	src/rituals_world_area.cpp	/^	isize id;$/;"	m	struct:World_Area_Stub	file:
id	src/thirdparty/stb_image.h	/^      int id;$/;"	m	struct:__anon6::__anon7
idata	src/thirdparty/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon12
idct_block_kernel	src/thirdparty/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon6
img_buffer	src/thirdparty/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon3
img_buffer_end	src/thirdparty/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon3
img_buffer_original	src/thirdparty/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon3
img_buffer_original_end	src/thirdparty/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon3
img_comp	src/thirdparty/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon6	typeref:struct:__anon6::__anon7
img_h_max	src/thirdparty/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon6
img_mcu_h	src/thirdparty/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon6
img_mcu_w	src/thirdparty/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon6
img_mcu_x	src/thirdparty/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon6
img_mcu_y	src/thirdparty/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon6
img_n	src/thirdparty/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon3
img_out_n	src/thirdparty/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon3
img_v_max	src/thirdparty/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon6
img_x	src/thirdparty/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon3
img_y	src/thirdparty/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon3
immune_to_damage	src/rituals_game_info.cpp	/^	bool immune_to_damage;$/;"	m	struct:Tile_Info	file:
impulse_max	src/rituals_particles.cpp	/^	real impulse_max;$/;"	m	struct:Particle_Style	file:
impulse_min	src/rituals_particles.cpp	/^	real impulse_min;$/;"	m	struct:Particle_Style	file:
index	src/metaprogram/metaprogram_parser.cpp	/^	isize index;$/;"	m	struct:Lexer_File	file:
info	src/rituals_inventory.cpp	/^	Item_Info* info;$/;"	m	struct:Item_Stack	file:
init_animated_sprite	src/rituals_animations.cpp	/^void init_animated_sprite(Animated_Sprite* s, isize capacity, Memory_Arena* arena)$/;"	f
init_animation	src/rituals_animations.cpp	/^void init_animation(Animation* a, real fps, isize capacity, Memory_Arena* arena)$/;"	f
init_animation_frame	src/rituals_animations.cpp	/^void init_animation_frame(Animation_Frame* fr)$/;"	f
init_body	src/rituals_simulation.cpp	/^void init_body(Sim_Body* b)$/;"	f
init_emitter	src/rituals_particles.cpp	/^void init_emitter(Emitter* e, isize max_particles, Memory_Arena* arena)$/;"	f
init_entity	src/rituals_world_area.cpp	/^void init_entity(Entity* entity)$/;"	f
init_game_registry	src/rituals_game_registry.cpp	/^void init_game_registry(Game_Registry* registry, Memory_Arena* arena)$/;"	f
init_group	src/rituals_renderer.cpp	/^void init_group(Render_Group* group, isize sprites_capacity, Memory_Arena* arena)$/;"	f
init_group	src/wtb_sprite_renderer.h	/^void init_group(Render_Group* group, isize sprites_capacity, Memory_Arena* arena)$/;"	f
init_inventory	src/rituals_inventory.cpp	/^void init_inventory(Inventory* inventory, isize w, isize h, Memory_Arena* arena)$/;"	f
init_item_stack	src/rituals_inventory.cpp	/^void init_item_stack(Item_Stack* stack, Item_Info* info)$/;"	f
init_lexer	src/metaprogram/metaprogram_parser.cpp	/^void init_lexer(Lexer* lex, isize file_capacity, Memory_Arena* arena)$/;"	f
init_lexer_file	src/metaprogram/metaprogram_parser.cpp	/^void init_lexer_file(Lexer_File* file, char* filename, char* prev_path, isize prev_path_len, Memory_Arena* arena)$/;"	f
init_memory_arena	src/rituals_memory.cpp	/^void init_memory_arena(Memory_Arena* arena, usize size)$/;"	f
init_menu_state	src/rituals_main.cpp	/^void init_menu_state()$/;"	f
init_particle	src/rituals_particles.cpp	/^void init_particle(Particle* p, Vec3 pos, Vec3 vel, real scale, real angle, real anglev, int32 frame, int32 time, int32 style_index)$/;"	f
init_play_state	src/rituals_play_state.cpp	/^void init_play_state()$/;"	f
init_proc_arg	src/metaprogram/metaprogram_parser.cpp	/^void init_proc_arg(Proc_Arg* arg, isize count, Memory_Arena* arena)$/;"	f
init_random	src/rituals_random.cpp	/^void init_random(Random* r, uint64 seed) $/;"	f
init_renderer	src/rituals_renderer.cpp	/^void init_renderer(OpenGL_Renderer* r, isize group_count, isize group_size, char* vertex_source, char* frag_source, Memory_Arena* arena)$/;"	f
init_renderer	src/wtb_sprite_renderer.h	/^void init_renderer(OpenGL_Renderer* r, isize group_count, isize group_size, char* vertex_source, char* frag_source, Memory_Arena* arena)$/;"	f
init_simulator	src/rituals_simulation.cpp	/^void init_simulator(Simulator* sim, isize cap, Memory_Arena* arena)$/;"	f
init_sprite	src/rituals_renderer.cpp	/^void init_sprite(Sprite* s)$/;"	f
init_sprite	src/wtb_sprite_renderer.h	/^void init_sprite(Sprite* s)$/;"	f
init_spritefont	rituals_gui.cpp	/^void init_spritefont(Spritefont* font)$/;"	f
init_spritefont	src/rituals_gui.cpp	/^void init_spritefont(Spritefont* font)$/;"	f
init_static_grid	src/rituals_simulation.cpp	/^void init_static_grid(Sim_Static_Grid* grid, Vec2i size, isize capacity, Memory_Arena* arena)$/;"	f
init_text_input_handle	src/rituals_gui.cpp	/^void init_text_input_handle(Gui_Text_Input_Handle* handle, char* buf, isize capacity, isize length)$/;"	f
init_text_input_handle	src/rituals_gui.cpp	/^void init_text_input_handle(Gui_Text_Input_Handle* handle, real width, Memory_Arena* arena)$/;"	f
init_tile_state	src/rituals_game_info.cpp	/^void init_tile_state(Tile_State* state, isize id)$/;"	f
init_tilemap	src/rituals_tilemap.cpp	/^void init_tilemap(Tilemap* tilemap, isize w, isize h, Memory_Arena* arena)$/;"	f
init_tracking_file	git_post_rev.py	/^def init_tracking_file(filename):$/;"	f
init_world	src/rituals_world.cpp	/^void init_world(World* world, isize width, isize height, usize seed, Memory_Arena* arena)$/;"	f
init_world_area	src/rituals_world_area.cpp	/^void init_world_area(World_Area* area, Memory_Arena* arena)$/;"	f
input	src/rituals_game.cpp	/^	Game_Input* input;$/;"	m	struct:Game_Main	file:
input_text_append_char	src/rituals_game.cpp	/^void input_text_append_char(char c)$/;"	f
int16	src/metaprogram/metaprogram_main.cpp	/^typedef int16_t int16;$/;"	t	file:
int16	src/rituals_main.cpp	/^typedef int16_t int16;$/;"	t	file:
int16	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(int16);$/;"	v
int16	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(int16);$/;"	v
int16	src/rituals_win32.cpp	/^typedef int16_t int16;$/;"	t	file:
int32	src/metaprogram/metaprogram_main.cpp	/^typedef int32_t int32;$/;"	t	file:
int32	src/rituals_main.cpp	/^typedef int32_t int32;$/;"	t	file:
int32	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(int32);$/;"	v
int32	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(int32);$/;"	v
int32	src/rituals_win32.cpp	/^typedef int32_t int32;$/;"	t	file:
int32_t	src/thirdparty/gl_core_3_3.h	/^typedef __int32 int32_t;$/;"	t
int32_t	src/thirdparty/gl_core_3_3.h	/^typedef long int int32_t;$/;"	t
int64	src/metaprogram/metaprogram_main.cpp	/^typedef int64_t int64;$/;"	t	file:
int64	src/rituals_main.cpp	/^typedef int64_t int64;$/;"	t	file:
int64	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(int64);$/;"	v
int64	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(int64);$/;"	v
int64	src/rituals_win32.cpp	/^typedef int64_t int64;$/;"	t	file:
int64_t	src/thirdparty/gl_core_3_3.h	/^typedef __int64 int64_t;$/;"	t
int64_t	src/thirdparty/gl_core_3_3.h	/^typedef long int int64_t;$/;"	t
int64_t	src/thirdparty/gl_core_3_3.h	/^typedef long long int int64_t;$/;"	t
int8	src/metaprogram/metaprogram_main.cpp	/^typedef int8_t int8;$/;"	t	file:
int8	src/rituals_main.cpp	/^typedef int8_t int8;$/;"	t	file:
int8	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(int8);$/;"	v
int8	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(int8);$/;"	v
int8	src/rituals_win32.cpp	/^typedef int8_t int8;$/;"	t	file:
intrect_to_aabb	src/rituals_math.cpp	/^static inline AABB intrect_to_aabb(Rect2i* r)$/;"	f	file:
intrect_to_rect	src/rituals_math.cpp	/^static inline Rect2 intrect_to_rect(Rect2i* ir)$/;"	f	file:
inv_fps	src/rituals_animations.cpp	/^	real inv_fps;$/;"	m	struct:Animation	file:
inv_mass	src/rituals_simulation.cpp	/^	real inv_mass, restitution, damping;$/;"	m	struct:Sim_Body	file:
inventory_add_item	src/rituals_inventory.cpp	/^bool inventory_add_item(Inventory* inventory, Item_Stack** origin_slot)$/;"	f
io	src/thirdparty/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon3
io_user_data	src/thirdparty/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon3
is_dir	src/thirdparty/tinydir.h	/^	int is_dir;$/;"	m	struct:tinydir_file
is_number	src/metaprogram/metaprogram_parser.cpp	/^bool is_number(char c)$/;"	f
is_reg	src/thirdparty/tinydir.h	/^	int is_reg;$/;"	m	struct:tinydir_file
is_space	src/metaprogram/metaprogram_parser.cpp	/^bool is_space(char c)$/;"	f
is_valid_filename_char	src/rituals_game.cpp	/^bool is_valid_filename_char(char c)$/;"	f
is_valid_identifier	src/metaprogram/metaprogram_parser.cpp	/^bool is_valid_identifier(char c)$/;"	f
isize	src/metaprogram/metaprogram_main.cpp	/^typedef ptrdiff_t isize;$/;"	t	file:
isize	src/rituals_main.cpp	/^typedef ptrdiff_t isize;$/;"	t	file:
isize	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(isize);$/;"	v
isize	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(isize);$/;"	v
isize	src/rituals_win32.cpp	/^typedef ptrdiff_t isize;$/;"	t	file:
isizeof	src/rituals_main.cpp	185;"	d	file:
isizeof	src/rituals_win32.cpp	72;"	d	file:
isz	src/rituals_main.cpp	186;"	d	file:
isz	src/rituals_win32.cpp	73;"	d	file:
item	src/rituals_game_info.cpp	/^			} item;$/;"	m	union:Rituals_Entity_Userdata::__anon8::__anon9	typeref:struct:Rituals_Entity_Userdata::__anon8::__anon9::__anon10	file:
items	src/rituals_game_registry.cpp	/^	Item_Info* items;$/;"	m	struct:Game_Registry	file:
items_count	src/rituals_game_registry.cpp	/^	isize items_count;$/;"	m	struct:Game_Registry	file:
items_hash	src/rituals_game_registry.cpp	/^	usize* items_hash;$/;"	m	struct:Game_Registry	file:
jitter_on_bounce_mag	src/rituals_particles.cpp	/^	real jitter_on_bounce_mag;$/;"	m	struct:Particle_Style	file:
key	helping_gb.cpp	/^	u64 key;$/;"	m	struct:MapEntry	file:
keycodes	src/rituals_game.cpp	/^	int8* keycodes;$/;"	m	struct:Game_Input	file:
kind	src/metaprogram/metaprogram_parser.cpp	/^	Struct_Kind kind;$/;"	m	struct:Struct_Def	file:
kind	src/metaprogram/metaprogram_parser.cpp	/^	Token_Kind kind;	$/;"	m	struct:Token	file:
kind	src/rituals_game_info.cpp	/^		isize kind;$/;"	m	struct:Rituals_Entity_Userdata::__anon3	file:
kind	src/rituals_game_info.cpp	/^		isize kind;$/;"	m	struct:Rituals_Entity_Userdata::__anon8	file:
kind	src/rituals_world_area.cpp	/^	isize kind;$/;"	m	struct:Entity	file:
knockback	src/rituals_world_area.cpp	/^	real knockback;$/;"	m	struct:Entity	file:
last_pos	src/rituals_gui.cpp	/^	Vec2 last_pos;$/;"	m	struct:Gui_Context	file:
len	src/metaprogram/metaprogram_parser.cpp	/^	isize len;$/;"	m	struct:Token	file:
length	src/thirdparty/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon11
lerp	src/rituals_math.cpp	/^real lerp(real a, real b, real t)$/;"	f
lexer_get_token	src/metaprogram/metaprogram_parser.cpp	/^bool lexer_get_token(Lexer* lexer, Lexer_File* f, Token* t) $/;"	f
lflags	src/thirdparty/stb_image.h	/^   int lflags;$/;"	m	struct:__anon17
line	src/metaprogram/metaprogram_parser.cpp	/^	isize line;$/;"	m	struct:Lexer_Location	file:
line0	src/thirdparty/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon8
line1	src/thirdparty/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon8
line_padding	rituals_gui.cpp	/^	int32 line_padding;$/;"	m	struct:Spritefont	file:
line_padding	src/rituals_gui.cpp	/^	int32 line_padding;$/;"	m	struct:Spritefont	file:
line_size	src/thirdparty/stb_image.h	/^   int line_size;$/;"	m	struct:__anon17
linebuf	src/thirdparty/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon6::__anon7
link	src/rituals_world_area.cpp	/^	World_Area_Stub* link;$/;"	m	struct:Area_Link	file:
load_assets	src/rituals_main.cpp	/^void load_assets()$/;"	f
load_assets	src/rituals_win32.cpp	/^void load_assets()$/;"	f
load_file	src/metaprogram/metaprogram_main.cpp	/^char* load_file(char* filename, isize* size_out, Memory_Arena* arena)$/;"	f
load_jpeg_image	src/thirdparty/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f
load_spritefont	rituals_gui.cpp	/^Spritefont* load_spritefont(char* filepath, Vec2i offset)$/;"	f
load_spritefont	rituals_gui.cpp	/^void load_spritefont(Spritefont* font, char* file_path, Vec2i offset)$/;"	f
load_spritefont	src/rituals_gui.cpp	/^Spritefont* load_spritefont(char* filepath, Vec2i offset)$/;"	f
load_spritefont	src/rituals_gui.cpp	/^void load_spritefont(Spritefont* font, char* file_path_in, Vec2i offset)$/;"	f
location	src/metaprogram/metaprogram_parser.cpp	/^	Lexer_Location location;$/;"	m	struct:Lexer_File	file:
location	src/metaprogram/metaprogram_parser.cpp	/^	Lexer_Location location;$/;"	m	struct:Token	file:
looping	src/rituals_animations.cpp	/^	bool looping;$/;"	m	struct:Animation	file:
lpal	src/thirdparty/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon17
ma	src/thirdparty/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon14
mag	src/rituals_simulation.cpp	/^	real mag;$/;"	m	struct:Sim_Contact	file:
main	git_post_rev.py	/^def main(tracking_file):$/;"	f
main	src/metaprogram/metaprogram_main.cpp	/^int main(int argc, char** argv)$/;"	f
main	src/rituals_main.cpp	/^int main(int argc, char** argv)$/;"	f
main	src/rituals_win32.cpp	/^int main(int argc, char** argv)$/;"	f
main_file	src/metaprogram/metaprogram_parser.cpp	/^	Lexer_File* main_file;$/;"	m	struct:Lexer	file:
main_menu_update	src/rituals_main.cpp	/^void main_menu_update()$/;"	f
make_animaiton_from_strip	src/rituals_animations.cpp	/^Animation* make_animaiton_from_strip(Memory_Arena* arena, real fps, Rect2 frame, isize count) $/;"	f
make_particle_style	src/rituals_particles.cpp	/^Particle_Style make_particle_style($/;"	f
map	src/rituals_win32.cpp	/^Tilemap map;$/;"	v
map	src/rituals_world_area.cpp	/^	Tilemap map;$/;"	m	struct:World_Area	file:
map__add_entry	helping_gb.cpp	/^gb_internal isize map__add_entry(Map<T> *h, u64 key) {$/;"	f
map__find	helping_gb.cpp	/^gb_internal MapFindResult map__find(Map<T> *h, u64 key) {$/;"	f
map__full	helping_gb.cpp	/^gb_internal b32 map__full(Map<T> *h) {$/;"	f
map_destroy	helping_gb.cpp	/^void map_destroy(Map<T> *h) {$/;"	f
map_get	helping_gb.cpp	/^T *map_get(Map<T> *h, u64 key) {$/;"	f
map_grow	helping_gb.cpp	/^void map_grow(Map<T> *h) {$/;"	f
map_init	helping_gb.cpp	/^void map_init(Map<T> *h, gbAllocator a) {$/;"	f
map_rehash	helping_gb.cpp	/^void map_rehash(Map<T> *h, isize new_count) {$/;"	f
map_set	helping_gb.cpp	/^void map_set(Map<T> *h, u64 key, T value) {$/;"	f
marker	src/thirdparty/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon6
mask	src/rituals_simulation.cpp	/^	uint64 mask;$/;"	m	struct:Sim_Body	file:
mask	src/rituals_world_area.cpp	/^	uint64 mask;$/;"	m	struct:Hitbox	file:
max_chars_by_width	src/rituals_gui.cpp	/^	isize max_chars_by_width;$/;"	m	struct:Gui_Text_Input_Handle	file:
max_damage	src/rituals_game_info.cpp	/^	int32 max_damage;$/;"	m	struct:Tile_Info	file:
max_frames	src/rituals_particles.cpp	/^	int32 max_frames;$/;"	m	struct:Particle_Style	file:
max_stack	src/rituals_game_info.cpp	/^	int32 max_stack;$/;"	m	struct:Item_Info	file:
max_x	src/thirdparty/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon17
max_y	src/thirdparty/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon17
maxcode	src/thirdparty/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon9
maxcode	src/thirdparty/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon5
mb	src/thirdparty/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon14
mem_align_4	src/rituals_memory.cpp	/^static inline isize mem_align_4(isize p)$/;"	f	file:
member_count	src/metaprogram/metaprogram_parser.cpp	/^	isize member_count;$/;"	m	struct:Struct_Def	file:
member_kinds	src/metaprogram/metaprogram_parser.cpp	/^	Struct_Kind* member_kinds;$/;"	m	struct:Struct_Def	file:
member_var	src/metaprogram/metaprogram_parser.cpp	/^	} member_var;$/;"	m	union:Struct_Member	typeref:struct:Struct_Member::__anon2	file:
members	src/metaprogram/metaprogram_parser.cpp	/^	Struct_Member* members;$/;"	m	struct:Struct_Def	file:
menu_state	src/rituals_main.cpp	/^Menu_State* menu_state;$/;"	v
meta_arena	src/rituals_game.cpp	/^	Memory_Arena* meta_arena;$/;"	m	struct:Game_Main	file:
mg	src/thirdparty/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon14
mode	src/rituals_game_info.cpp	/^		isize mode;$/;"	m	struct:Rituals_Entity_Userdata::__anon3	file:
modulus	src/rituals_math.cpp	/^static inline isize modulus(isize a, isize b)$/;"	f	file:
mouse	src/rituals_game.cpp	/^	int8* mouse;$/;"	m	struct:Game_Input	file:
mouse_pos	src/rituals_game.cpp	/^	Vec2 mouse_pos;$/;"	m	struct:Game_Input	file:
mouse_x	src/rituals_game.cpp	/^	int32 mouse_x;$/;"	m	struct:Game_Input	file:
mouse_y	src/rituals_game.cpp	/^	int32 mouse_y;$/;"	m	struct:Game_Input	file:
movement_modifier	src/rituals_game_info.cpp	/^	real movement_modifier;$/;"	m	struct:Tile_Info	file:
mr	src/thirdparty/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon14
n_files	src/thirdparty/tinydir.h	/^	size_t n_files;$/;"	m	struct:tinydir_dir
name	src/metaprogram/metaprogram_parser.cpp	/^		char* name;$/;"	m	struct:Struct_Member::__anon2	file:
name	src/metaprogram/metaprogram_parser.cpp	/^	char* name;$/;"	m	struct:Proc_Prototype	file:
name	src/metaprogram/metaprogram_parser.cpp	/^	char* name;$/;"	m	struct:Struct_Def	file:
name	src/rituals_game_info.cpp	/^	const char* name;$/;"	m	struct:Item_Info	file:
name	src/rituals_game_info.cpp	/^	const char* name;$/;"	m	struct:Tile_Info	file:
name	src/rituals_world.cpp	/^	char* name;$/;"	m	struct:World	file:
name	src/thirdparty/tinydir.h	/^	_tinydir_char_t name[_TINYDIR_FILENAME_MAX];$/;"	m	struct:tinydir_file
new_item_stack	src/rituals_inventory.cpp	/^Item_Stack* new_item_stack(Item_Info* info, Memory_Arena* arena)$/;"	f
new_memory_arena	src/rituals_memory.cpp	/^Memory_Arena* new_memory_arena(usize size, Memory_Arena* src)$/;"	f
next	helping_gb.cpp	/^	isize next;$/;"	m	struct:MapEntry	file:
next	src/metaprogram/metaprogram_parser.cpp	/^	Proc_Prototype* next;$/;"	m	struct:Proc_Prototype	file:
next	src/metaprogram/metaprogram_parser.cpp	/^	Struct_Def* next;$/;"	m	struct:Struct_Def	file:
next	src/metaprogram/metaprogram_parser.cpp	/^	Token *prev, *next;$/;"	m	struct:Token	file:
next	src/rituals_memory.cpp	/^	Memory_Arena* next;$/;"	m	struct:Memory_Arena	file:
next	src/rituals_simulation.cpp	/^	Sim_Grid_Cell* next;$/;"	m	struct:Sim_Grid_Cell	file:
next_area_id	src/rituals_world.cpp	/^	isize next_area_id;$/;"	m	struct:World	file:
next_body_id	src/rituals_simulation.cpp	/^	isize bodies_count, bodies_capacity, next_body_id;$/;"	m	struct:Simulator	file:
next_entity_id	src/rituals_world_area.cpp	/^	isize entities_count, entities_capacity, next_entity_id;$/;"	m	struct:World_Area	file:
next_pos	src/rituals_gui.cpp	/^	Vec2 next_pos;$/;"	m	struct:Gui_Context	file:
next_random	src/rituals_game.cpp	/^real next_random() $/;"	f
next_random	src/rituals_random.cpp	/^real next_random(Random* r) $/;"	f
next_random_double	src/rituals_game.cpp	/^real64 next_random_double()$/;"	f
next_random_double	src/rituals_random.cpp	/^real64 next_random_double(Random* r)$/;"	f
next_random_float	src/rituals_game.cpp	/^real32 next_random_float()$/;"	f
next_random_float	src/rituals_random.cpp	/^real32 next_random_float(Random* r)$/;"	f
next_random_uint64	src/rituals_random.cpp	/^uint64 next_random_uint64(Random* r)$/;"	f
nextchar	src/metaprogram/metaprogram_parser.cpp	194;"	d	file:
nextchar	src/metaprogram/metaprogram_parser.cpp	420;"	d	file:
night_amount	src/rituals_renderer.cpp	/^	real night_amount;$/;"	m	struct:Render_Group	file:
night_amount	src/wtb_sprite_renderer.h	/^	real night_amount;$/;"	m	struct:Render_Group
night_cutoff	src/rituals_renderer.cpp	/^	real night_cutoff;$/;"	m	struct:Render_Group	file:
night_cutoff	src/wtb_sprite_renderer.h	/^	real night_cutoff;$/;"	m	struct:Render_Group
nomore	src/thirdparty/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon6
normal	src/rituals_simulation.cpp	/^	Vec2 normal;$/;"	m	struct:Sim_Contact	file:
north	src/rituals_world_area.cpp	/^	Area_Link north;$/;"	m	struct:World_Area_Stub	file:
num_bits	src/thirdparty/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon10
num_keys_down	src/rituals_game.cpp	/^	isize num_keys_down;$/;"	m	struct:Game_Input	file:
num_mouse_down	src/rituals_game.cpp	/^	isize num_mouse_down;$/;"	m	struct:Game_Input	file:
number	src/rituals_inventory.cpp	/^	int32 number;$/;"	m	struct:Item_Stack	file:
offset	src/metaprogram/metaprogram_parser.cpp	/^	isize offset;$/;"	m	struct:Lexer_Location	file:
offset	src/rituals_renderer.cpp	/^	Vec2 offset;$/;"	m	struct:Render_Group	file:
offset	src/rituals_win32.cpp	/^Vec2 offset;$/;"	v
offset	src/rituals_world_area.cpp	/^	Vec2 offset;$/;"	m	struct:World_Area	file:
offset	src/thirdparty/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon14
offset	src/wtb_sprite_renderer.h	/^	Vec2 offset;$/;"	m	struct:Render_Group
ogl_LOAD_FAILED	src/thirdparty/gl_core_3_3.h	/^	ogl_LOAD_FAILED = 0,$/;"	e	enum:ogl_LoadStatus
ogl_LOAD_SUCCEEDED	src/thirdparty/gl_core_3_3.h	/^	ogl_LOAD_SUCCEEDED = 1,$/;"	e	enum:ogl_LoadStatus
ogl_LoadStatus	src/thirdparty/gl_core_3_3.h	/^enum ogl_LoadStatus$/;"	g
ogl_add_texture	src/rituals_renderer.cpp	/^GLuint ogl_add_texture(uint8* data, isize w, isize h) $/;"	f
ogl_add_texture	src/wtb_sprite_renderer.h	/^GLuint ogl_add_texture(uint8* data, isize w, isize h) $/;"	f
ogl_load_texture	src/rituals_renderer.cpp	/^GLuint ogl_load_texture(char* filename, isize* w_o, isize* h_o)$/;"	f
old_out	src/thirdparty/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anon17
operator *	src/rituals_math.cpp	/^static inline Vec2 operator*(Vec2 a, Vec2 b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec2 operator*(Vec2 a, real s)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec2 operator*(real s, Vec2 a)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3 operator*(Vec3 a, Vec3 b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3 operator*(Vec3 a, real s)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3 operator*(real s, Vec3 a)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4 operator*(Vec4 a, Vec4 b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4 operator*(Vec4 a, real b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4 operator*(real b, Vec4 a) $/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec2& operator*=(Vec2& a, real b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec3& operator*=(Vec3& a, real b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec4 operator*=(Vec4& a, Vec4 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec4 operator*=(Vec4& a, real b)$/;"	f	file:
operator +	src/rituals_math.cpp	/^static inline Vec2 operator+(Vec2 a, Vec2 b)$/;"	f	file:
operator +	src/rituals_math.cpp	/^static inline Vec3 operator+(Vec3 a, Vec3 b)$/;"	f	file:
operator +=	src/rituals_math.cpp	/^static inline Vec2& operator+=(Vec2& a, Vec2 b)$/;"	f	file:
operator +=	src/rituals_math.cpp	/^static inline Vec3& operator+=(Vec3& a, Vec3 b)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec2 operator-(Vec2 a)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec2 operator-(Vec2 a, Vec2 b)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec3 operator-(Vec3 a)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec3 operator-(Vec3 a, Vec3 b)$/;"	f	file:
operator -=	src/rituals_math.cpp	/^static inline Vec2& operator-=(Vec2& a, Vec2 b)$/;"	f	file:
operator -=	src/rituals_math.cpp	/^static inline Vec3& operator-=(Vec3& a, Vec3 b)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec2 operator\/(Vec2 a, real s)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec2 operator\/(real s, Vec2 a)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec3 operator\/(Vec3 a, real s)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec3 operator\/(real s, Vec3 a)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec4 operator\/(Vec4 a, real b)$/;"	f	file:
operator ==	src/rituals_math.cpp	/^static inline bool operator==(Rect2 a, Rect2 b)$/;"	f	file:
order	src/thirdparty/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon6
ortho	src/rituals_renderer.cpp	/^	real32 ortho[16];$/;"	m	struct:Render_Group	file:
ortho	src/wtb_sprite_renderer.h	/^	real ortho[16];$/;"	m	struct:Render_Group
out	src/thirdparty/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon12
out	src/thirdparty/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anon17
overlap	src/rituals_simulation.cpp	/^	Vec2 overlap;$/;"	m	struct:Sim_Contact	file:
pal	src/thirdparty/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon17
parse	src/thirdparty/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon17
parse_dollarsign_instructions	src/metaprogram/metaprogram_parser.cpp	/^Token* parse_dollarsign_instructions(Token* t) $/;"	f
parse_include_directive	src/metaprogram/metaprogram_parser.cpp	/^void parse_include_directive(Lexer* lex, Token* directive)$/;"	f
parse_number_tokens	src/metaprogram/metaprogram_parser.cpp	/^void parse_number_tokens(Token* head)$/;"	f
parse_sing	src/metaprogram/metaprogram_parser.cpp	/^void parse_sing(Token* t, int32 brace_level) $/;"	f
parse_spritefont_rectangles	rituals_gui.cpp	/^Rect* parse_spritefont_rectangles(char* glyphs_file, Memory_Arena* arena, int32 offsetx, int32 offsety, int32* w, int32* h)$/;"	f
parse_spritefont_rectangles	src/rituals_gui.cpp	/^Rect2* parse_spritefont_rectangles(char* glyphs_file, Memory_Arena* arena, int32 offsetx, int32 offsety, int32* w, int32* h)$/;"	f
parse_struct_member	src/metaprogram/metaprogram_parser.cpp	/^Token* parse_struct_member(Struct_Def* parent, Token* start, Memory_Arena* arena)$/;"	f
particles	src/rituals_particles.cpp	/^	Particle* particles;$/;"	m	struct:Emitter	file:
particles_capacity	src/rituals_particles.cpp	/^	isize particles_count, particles_capacity;$/;"	m	struct:Emitter	file:
particles_count	src/rituals_particles.cpp	/^	isize particles_count, particles_capacity;$/;"	m	struct:Emitter	file:
path	src/thirdparty/tinydir.h	/^	_tinydir_char_t path[_TINYDIR_PATH_MAX];$/;"	m	struct:tinydir_dir
path	src/thirdparty/tinydir.h	/^	_tinydir_char_t path[_TINYDIR_PATH_MAX];$/;"	m	struct:tinydir_file
pathlen	src/metaprogram/metaprogram_parser.cpp	/^	isize pathlen;$/;"	m	struct:Lexer_File	file:
patrol_end	src/rituals_game_info.cpp	/^				Vec2 patrol_end;$/;"	m	struct:Rituals_Entity_Userdata::__anon3::__anon4::__anon7	file:
patrol_start	src/rituals_game_info.cpp	/^				Vec2 patrol_start;$/;"	m	struct:Rituals_Entity_Userdata::__anon3::__anon4::__anon7	file:
perch	src/rituals_game_info.cpp	/^				Vec2 perch;$/;"	m	struct:Rituals_Entity_Userdata::__anon3::__anon4::__anon5	file:
pickup	src/rituals_game_info.cpp	/^	} pickup;$/;"	m	union:Rituals_Entity_Userdata	typeref:struct:Rituals_Entity_Userdata::__anon8	file:
play_animation	src/rituals_animations.cpp	/^isize play_animation(Animated_Sprite* s, isize anim_index)$/;"	f
play_arena	src/rituals_game.cpp	/^	Memory_Arena* play_arena;$/;"	m	struct:Game_Main	file:
play_state	src/rituals_main.cpp	/^Play_State* play_state;$/;"	v
play_state_stop	src/rituals_play_state.cpp	/^void play_state_stop()$/;"	f
play_state_update	src/rituals_play_state.cpp	/^void play_state_update()$/;"	f
player	src/rituals_game_info.cpp	/^	} player;$/;"	m	union:Rituals_Entity_Userdata	typeref:struct:Rituals_Entity_Userdata::__anon2	file:
player	src/rituals_world_area.cpp	/^	Entity* player;$/;"	m	struct:World_Area	file:
position	src/rituals_animations.cpp	/^	Vec3 position; $/;"	m	struct:Animation_Frame	file:
position	src/rituals_gui.cpp	/^	Vec2 position;$/;"	m	struct:Gui_Window_Handle	file:
position	src/rituals_math.cpp	/^		Vec2 position, size;$/;"	m	struct:Rect2::__anon10	file:
position	src/rituals_particles.cpp	/^	Vec3 position;$/;"	m	struct:Particle	file:
position	src/rituals_renderer.cpp	/^	Vec2 position;$/;"	m	struct:Sprite	file:
position	src/rituals_world_area.cpp	/^	Vec2i position;$/;"	m	struct:Area_Link	file:
position	src/wtb_sprite_renderer.h	/^	Vec2 position;$/;"	m	struct:Sprite
prefix	src/thirdparty/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon16
prev	src/metaprogram/metaprogram_parser.cpp	/^	Token *prev, *next;$/;"	m	struct:Token	file:
prev_time	src/rituals_main.cpp	/^	usize current_time = 0, prev_time = 0;$/;"	m	struct:Play_State	file:
prev_time	src/rituals_win32.cpp	/^usize current_time = 0, prev_time = 0;$/;"	v
print_indent	src/metaprogram/metaprogram_parser.cpp	/^void print_indent(int32 indent)$/;"	f
print_reflection_data	src/metaprogram/metaprogram_parser.cpp	/^void print_reflection_data(Struct_Def* def)$/;"	f
print_struct	src/metaprogram/metaprogram_parser.cpp	/^void print_struct(Struct_Def* def, bool as_member_struct = false, int32 indent = 0)$/;"	f
print_token	src/metaprogram/metaprogram_parser.cpp	/^void print_token(Token* t, Token* start)$/;"	f
progressive	src/thirdparty/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon6
prop	src/rituals_game_info.cpp	/^	} prop;$/;"	m	union:Rituals_Entity_Userdata	typeref:struct:Rituals_Entity_Userdata::__anon1	file:
ptr	src/rituals_game_info.cpp	/^		void* ptr;$/;"	m	struct:Rituals_Entity_Userdata::__anon12	file:
quality	src/rituals_game_info.cpp	/^		isize quality;$/;"	m	struct:Rituals_Entity_Userdata::__anon1	file:
r	src/rituals_game.cpp	/^	Random r;$/;"	m	struct:Game_Main	file:
r	src/rituals_main.cpp	/^real r = 0;$/;"	v
rand_range	src/rituals_game.cpp	/^real rand_range(real min, real max)$/;"	f
rand_range	src/rituals_random.cpp	/^real rand_range(Random* r, real min, real max)$/;"	f
rand_range_int	src/rituals_game.cpp	/^int32 rand_range_int(real min, real max)$/;"	f
rand_range_int	src/rituals_random.cpp	/^int32 rand_range_int(Random* r, real min, real max)$/;"	f
ratio	src/thirdparty/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon17
raw_coeff	src/thirdparty/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon6::__anon7
raw_data	src/thirdparty/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon6::__anon7
read	src/thirdparty/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon2
read_from_callbacks	src/thirdparty/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon3
real	src/metaprogram/metaprogram_main.cpp	/^typedef real32 real;$/;"	t	file:
real	src/rituals_main.cpp	/^typedef real32 real;$/;"	t	file:
real	src/rituals_main.cpp	/^typedef real64 real;$/;"	t	file:
real	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(real);$/;"	v
real	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(real);$/;"	v
real	src/rituals_win32.cpp	/^typedef real32 real;$/;"	t	file:
real32	src/metaprogram/metaprogram_main.cpp	/^typedef float real32;$/;"	t	file:
real32	src/rituals_main.cpp	/^typedef float real32;$/;"	t	file:
real32	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(real32);$/;"	v
real32	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(real32);$/;"	v
real32	src/rituals_win32.cpp	/^typedef float real32;$/;"	t	file:
real64	src/metaprogram/metaprogram_main.cpp	/^typedef double real64;$/;"	t	file:
real64	src/rituals_main.cpp	/^typedef double real64;$/;"	t	file:
real64	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(real64);$/;"	v
real64	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(real64);$/;"	v
real64	src/rituals_win32.cpp	/^typedef double real64;$/;"	t	file:
rect2	src/rituals_math.cpp	/^static inline Rect2 rect2(real x, real y, real w, real h)$/;"	f	file:
rect2_clip	src/rituals_math.cpp	/^static inline Rect2_Clip_Info rect2_clip(Rect2 r, Rect2 clip)$/;"	f	file:
rect2i	src/rituals_math.cpp	/^static inline Rect2i rect2i(int32 x, int32 y, int32 w, int32 h)$/;"	f	file:
rect_to_aabb	src/rituals_math.cpp	/^static inline AABB rect_to_aabb(Rect2* r)$/;"	f	file:
rect_to_intrect	src/rituals_math.cpp	/^static inline Rect2i rect_to_intrect(Rect2* ir)$/;"	f	file:
recursively_delete_folder	src/rituals_serialization.cpp	/^int recursively_delete_folder(char* path, bool append_base_path = false)$/;"	f
ref	src/rituals_world_area.cpp	/^	Entity* ref;$/;"	m	struct:Hitbox	file:
register_all_rituals_item_info	src/rituals_game_registry.cpp	/^void register_all_rituals_item_info()$/;"	f
register_all_rituals_tile_info	src/rituals_game_registry.cpp	/^void register_all_rituals_tile_info()$/;"	f
register_everything_in_rituals	src/rituals_game_registry.cpp	/^void register_everything_in_rituals()$/;"	f
registry	src/rituals_game.cpp	/^	Game_Registry* registry;$/;"	m	struct:Game_Main	file:
registry_arena	src/rituals_game.cpp	/^	Memory_Arena* registry_arena;$/;"	m	struct:Game_Main	file:
removed_entities	src/rituals_world_area.cpp	/^	isize* removed_entities;$/;"	m	struct:World_Area	file:
removed_entities_capacity	src/rituals_world_area.cpp	/^	isize removed_entities_count, removed_entities_capacity;$/;"	m	struct:World_Area	file:
removed_entities_count	src/rituals_world_area.cpp	/^	isize removed_entities_count, removed_entities_capacity;$/;"	m	struct:World_Area	file:
render_add	src/rituals_renderer.cpp	/^void render_add(Render_Group* group, Sprite* sprite)$/;"	f
render_add	src/rituals_renderer.cpp	/^void render_add(Render_Group* group, Sprite4* s4)$/;"	f
render_add	src/rituals_renderer.cpp	/^void render_add(Sprite* sprite)$/;"	f
render_add	src/rituals_renderer.cpp	/^void render_add(Sprite4* s4)$/;"	f
render_add_unclipped	src/rituals_renderer.cpp	/^void render_add_unclipped(Render_Group* group, Sprite* sprite)$/;"	f
render_add_unclipped	src/rituals_renderer.cpp	/^void render_add_unclipped(Sprite* sprite)$/;"	f
render_body_text	rituals_gui.cpp	/^void render_body_text(char* text, Vec2 position)$/;"	f
render_body_text	src/rituals_gui.cpp	/^void render_body_text(char* text, Vec2 position, bool background=false, real scale = 1.0f)$/;"	f
render_box_outline_primitive	src/rituals_renderer.cpp	/^void render_box_outline_primitive(Render_Group* group, Vec2 center, Vec2 size, Vec4 color, int32 thickness)$/;"	f
render_box_outline_primitive	src/rituals_renderer.cpp	/^void render_box_outline_primitive(Render_Group* group, Vec2 center, Vec2 size, Vec4 color[4], int32 thickness)$/;"	f
render_box_outline_primitive	src/rituals_renderer.cpp	/^void render_box_outline_primitive(Vec2 center, Vec2 size, Vec4 color, int32 thickness)$/;"	f
render_box_outline_primitive	src/rituals_renderer.cpp	/^void render_box_outline_primitive(Vec2 center, Vec2 size, Vec4 color[4], int32 thickness)$/;"	f
render_box_outline_primitive	src/wtb_sprite_renderer.h	/^void render_box_outline_primitive(Render_Group* group, Vec2 center, Vec2 size, Vec4 color, int32 thickness)$/;"	f
render_box_outline_primitive	src/wtb_sprite_renderer.h	/^void render_box_outline_primitive(Render_Group* group, Vec2 center, Vec2 size, Vec4 color[4], int32 thickness, isize group_index = 0)$/;"	f
render_box_primitive	src/rituals_renderer.cpp	/^void render_box_primitive(Render_Group* group, Vec2 pos, Vec2 size, Vec4 color)$/;"	f
render_box_primitive	src/rituals_renderer.cpp	/^void render_box_primitive(Vec2 pos, Vec2 size, Vec4 color)$/;"	f
render_box_primitive	src/wtb_sprite_renderer.h	/^void render_box_primitive(Render_Group* group, Vec2 pos, Vec2 size, Vec4 color)$/;"	f
render_calculate_ortho_matrix	src/rituals_renderer.cpp	/^void render_calculate_ortho_matrix(real32* ortho, Vec4 screen, real nearplane, real farplane)$/;"	f
render_calculate_ortho_matrix	src/wtb_sprite_renderer.h	/^void render_calculate_ortho_matrix(real* ortho, Vec4 screen, real nearplane, real farplane)$/;"	f
render_draw	src/rituals_renderer.cpp	/^void render_draw(OpenGL_Renderer* r, Render_Group* group, Vec2 size, real scale)$/;"	f
render_draw	src/rituals_renderer.cpp	/^void render_draw(Vec2 size, real scale)$/;"	f
render_group	src/rituals_renderer.cpp	/^Render_Group* render_group(OpenGL_Renderer* r, isize index)$/;"	f
render_group_add	src/wtb_sprite_renderer.h	/^void render_group_add(Render_Group* group, Sprite* sprite)$/;"	f
render_group_add	src/wtb_sprite_renderer.h	/^void render_group_add(Render_Group* group, Sprite4* s4)$/;"	f
render_group_draw	src/wtb_sprite_renderer.h	/^void render_group_draw(OpenGL_Renderer* r, Render_Group* group, Vec2 size, real scale)$/;"	f
render_group_has_clip_rect	src/wtb_sprite_renderer.h	/^bool render_group_has_clip_rect(Render_Group* group)$/;"	f
render_group_set_clip_rect	src/wtb_sprite_renderer.h	/^void render_group_set_clip_rect(Render_Group* group, real x, real y, real w, real h)$/;"	f
render_group_sort	src/wtb_sprite_renderer.h	/^void render_group_sort(Render_Group* group, isize offset)$/;"	f
render_group_start	src/wtb_sprite_renderer.h	/^void render_group_start(Render_Group* group)$/;"	f
render_has_clip_rect	src/rituals_renderer.cpp	/^bool render_has_clip_rect()$/;"	f
render_has_clip_rect	src/rituals_renderer.cpp	/^bool render_has_clip_rect(Render_Group* group)$/;"	f
render_inventory	src/rituals_inventory.cpp	/^void render_inventory(Inventory* inventory, Vec2 position)$/;"	f
render_line_primitive	src/rituals_renderer.cpp	/^void render_line_primitive(Render_Group* group, Vec2 start, Vec2 end, Vec4 color, int32 thickness)$/;"	f
render_line_primitive	src/rituals_renderer.cpp	/^void render_line_primitive(Vec2 start, Vec2 end, Vec4 color, int32 thickness)$/;"	f
render_line_primitive	src/wtb_sprite_renderer.h	/^void render_line_primitive(Render_Group* group, Vec2 start, Vec2 end, Vec4 color, int32 thickness)$/;"	f
render_set_clip_rect	src/rituals_renderer.cpp	/^void render_set_clip_rect(Render_Group* group, real x, real y, real w, real h)$/;"	f
render_set_clip_rect	src/rituals_renderer.cpp	/^void render_set_clip_rect(real x, real y, real w, real h)$/;"	f
render_set_current_group	src/rituals_renderer.cpp	/^void render_set_current_group(isize index)$/;"	f
render_sort	src/rituals_renderer.cpp	/^void render_sort(Render_Group* group, isize offset)$/;"	f
render_sort	src/rituals_renderer.cpp	/^void render_sort(isize offset)$/;"	f
render_start	src/rituals_renderer.cpp	/^void render_start()$/;"	f
render_start	src/rituals_renderer.cpp	/^void render_start(Render_Group* group)$/;"	f
render_tilemap	src/rituals_tilemap.cpp	/^isize render_tilemap(Tilemap* tilemap, Vec2 pos, Rect2 area)$/;"	f
render_tilemap	src/rituals_tilemap.cpp	/^void render_tilemap(Tilemap* tilemap, Vec2 pos)$/;"	f
render_title_text	rituals_gui.cpp	/^void render_title_text(char* text, Vec2 position)$/;"	f
render_title_text	src/rituals_gui.cpp	/^void render_title_text(char* text, Vec2 position)$/;"	f
renderer	src/rituals_game.cpp	/^	OpenGL_Renderer* renderer;$/;"	m	struct:Game_Main	file:
renderer_arena	src/rituals_game.cpp	/^	Memory_Arena* renderer_arena;$/;"	m	struct:Game_Main	file:
replace_filename_char	src/rituals_game.cpp	/^char replace_filename_char(char c, char replace)$/;"	f
replace_invalid_filename_chars	src/rituals_game.cpp	/^isize replace_invalid_filename_chars(char* str, isize len, char replace)$/;"	f
resample	src/thirdparty/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon8
resample_row_1	src/thirdparty/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
resample_row_func	src/thirdparty/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t
resample_row_hv_2_kernel	src/thirdparty/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon6
restart_interval	src/thirdparty/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon6
restitution	src/rituals_simulation.cpp	/^	real inv_mass, restitution, damping;$/;"	m	struct:Sim_Body	file:
rgb	src/thirdparty/stb_image.h	/^   int            rgb;$/;"	m	struct:__anon6
rituals_animate_entities	src/rituals_entity_events.cpp	/^void rituals_animate_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_contact_entities	src/rituals_entity_events.cpp	/^void rituals_contact_entities(Sim_Contact* contacts, isize count, World_Area* area, World* world)$/;"	f
rituals_entity_on_contact_terrain	src/rituals_entity_events.cpp	/^void rituals_entity_on_contact_terrain(Entity* e, World_Area* area, World* world)$/;"	f
rituals_frametick_entities	src/rituals_entity_events.cpp	/^bool rituals_frametick_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_hit_entities	src/rituals_entity_events.cpp	/^void rituals_hit_entities(Hitbox_Contact* contacts, isize count, World_Area* area, World* world)$/;"	f
rituals_interact_entities	src/rituals_entity_events.cpp	/^void rituals_interact_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_on_activate_entity	src/rituals_entity_events.cpp	/^void rituals_on_activate_entity(Entity* entity, World_Area* area, World* world)$/;"	f
rituals_on_destroy_entity	src/rituals_entity_events.cpp	/^void rituals_on_destroy_entity(Entity* e, World_Area* area, World* world)$/;"	f
rituals_prop_drop_on_break	src/rituals_entity_events.cpp	/^void rituals_prop_drop_on_break(World_Area* area, Entity* a) $/;"	f
rituals_slowtick_entities	src/rituals_entity_events.cpp	/^void rituals_slowtick_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_spawn_enemy	src/rituals_entity_events.cpp	/^Entity* rituals_spawn_enemy(World_Area* area, isize enemykind, Vec2 position) $/;"	f
rituals_walk_entities	src/rituals_entity.cpp	/^void rituals_walk_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_walk_entities	src/rituals_entity_events.cpp	/^void rituals_walk_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rp1	src/rituals_math.cpp	/^	Vec2 rp1;$/;"	m	struct:Rect2_Clip_Info	file:
rp2	src/rituals_math.cpp	/^	Vec2 rp2;$/;"	m	struct:Rect2_Clip_Info	file:
running	src/rituals_animations.cpp	/^	bool running;$/;"	m	struct:Animated_Sprite	file:
running	src/rituals_main.cpp	/^	bool running;$/;"	m	struct:Play_State	file:
s	src/thirdparty/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon12
s	src/thirdparty/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon6
save_dir	src/rituals_main.cpp	/^	char save_dir[FilePathMaxLength];$/;"	m	struct:Menu_State	file:
save_dir_len	src/rituals_main.cpp	/^	isize save_dir_len;$/;"	m	struct:Menu_State	file:
save_world_on_stop	src/rituals_main.cpp	/^	bool save_world_on_stop;$/;"	m	struct:Play_State	file:
saves	src/rituals_main.cpp	/^	tinydir_dir saves;$/;"	m	struct:Menu_State	file:
saves_dirty	src/rituals_main.cpp	/^	bool saves_dirty;$/;"	m	struct:Menu_State	file:
scale	src/rituals_game.cpp	/^	real scale;$/;"	m	struct:Game_Main	file:
scale	src/rituals_particles.cpp	/^	real scale;$/;"	m	struct:Particle	file:
scale_max	src/rituals_particles.cpp	/^	real scale_max;$/;"	m	struct:Particle_Style	file:
scale_min	src/rituals_particles.cpp	/^	real scale_min;$/;"	m	struct:Particle_Style	file:
scan_n	src/thirdparty/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon6
scancodes	src/rituals_game.cpp	/^	int8* scancodes;$/;"	m	struct:Game_Input	file:
screen_mouse_pos	src/rituals_game.cpp	/^	Vec2i screen_mouse_pos;$/;"	m	struct:Game_Input	file:
seed	src/rituals_world.cpp	/^	usize seed;$/;"	m	struct:World	file:
seed	src/rituals_world_area.cpp	/^	usize seed;$/;"	m	struct:World_Area_Stub	file:
selection_start	src/rituals_gui.cpp	/^	isize cursor, selection_start;$/;"	m	struct:Gui_Text_Input_Handle	file:
serialize_area	src/rituals_serialization.cpp	/^void serialize_area(World_Area* area, FILE* area_file)$/;"	f
serialize_area_link	src/rituals_serialization.cpp	/^void serialize_area_link(Area_Link* link, FILE* fp)$/;"	f
serialize_entity	src/rituals_serialization.cpp	/^void serialize_entity(Entity* entity, FILE* file)$/;"	f
serialize_hitbox	src/rituals_serialization.cpp	/^void serialize_hitbox(Hitbox* hb, FILE* file)$/;"	f
serialize_rituals_entity_userdata	src/rituals_serialization.cpp	/^void serialize_rituals_entity_userdata(Entity* e, FILE* file)$/;"	f
serialize_sim_body	src/rituals_serialization.cpp	/^void serialize_sim_body(Sim_Body* body, FILE* file)$/;"	f
serialize_simulator	src/rituals_serialization.cpp	/^void serialize_simulator(Simulator* sim, FILE* file)$/;"	f
serialize_sprite	src/rituals_serialization.cpp	/^void serialize_sprite(Sprite* s, FILE* file)$/;"	f
serialize_tile_state	src/rituals_serialization.cpp	/^void serialize_tile_state(Tile_State* state, FILE* file)$/;"	f
serialize_tilemap	src/rituals_serialization.cpp	/^void serialize_tilemap(Tilemap* map, FILE* file)$/;"	f
serialize_world	src/rituals_serialization.cpp	/^void serialize_world(World* world)$/;"	f
serialize_world_area_stub	src/rituals_serialization.cpp	/^void serialize_world_area_stub(World_Area_Stub* stub, FILE* fp)$/;"	f
shader_program	src/rituals_renderer.cpp	/^	GLuint shader_program, vbo, vao;$/;"	m	struct:OpenGL_Renderer	file:
shader_program	src/wtb_sprite_renderer.h	/^	GLuint shader_program, vbo, vao;$/;"	m	struct:OpenGL_Renderer
shadow_color	src/rituals_particles.cpp	/^	Vec4 shadow_color;$/;"	m	struct:Particle_Style	file:
shadow_scale	src/rituals_world_area.cpp	/^	real shadow_scale;$/;"	m	struct:Entity	file:
shape	src/rituals_simulation.cpp	/^	AABB shape;$/;"	m	struct:Sim_Body	file:
sim	src/rituals_win32.cpp	/^Simulator sim;$/;"	v
sim	src/rituals_world_area.cpp	/^	Simulator sim;$/;"	m	struct:World_Area	file:
sim_find_body	src/rituals_simulation.cpp	/^Sim_Body* sim_find_body(Simulator* sim, isize id)$/;"	f
sim_get_next_body	src/rituals_simulation.cpp	/^Sim_Body* sim_get_next_body(Simulator* sim)$/;"	f
sim_get_next_static_body	src/rituals_simulation.cpp	/^Sim_Body* sim_get_next_static_body(Simulator* sim)$/;"	f
sim_query_aabb	src/rituals_simulation.cpp	/^Sim_Body* sim_query_aabb(Simulator* sim, AABB query)$/;"	f
sim_remove_body	src/rituals_simulation.cpp	/^void sim_remove_body(Simulator* sim, Sim_Body* body)$/;"	f
sim_remove_body	src/rituals_simulation.cpp	/^void sim_remove_body(Simulator* sim, isize body)$/;"	f
sim_sort_bodies_on_id	src/rituals_simulation.cpp	/^void sim_sort_bodies_on_id(Simulator* sim)$/;"	f
sim_update	src/rituals_simulation.cpp	/^void sim_update(Simulator* sim, Tilemap* map, real dt, bool capture_contacts = true)$/;"	f
size	src/rituals_animations.cpp	/^	Vec2 size;$/;"	m	struct:Animation_Frame	file:
size	src/rituals_game.cpp	/^	Vec2 size;$/;"	m	struct:Game_Main	file:
size	src/rituals_game_info.cpp	/^		isize size;$/;"	m	struct:Rituals_Entity_Userdata::__anon12	file:
size	src/rituals_inventory.cpp	/^	isize w, h, size;$/;"	m	struct:Inventory	file:
size	src/rituals_math.cpp	/^		Vec2 position, size;$/;"	m	struct:Rect2::__anon10	file:
size	src/rituals_particles.cpp	/^	Vec2 size;$/;"	m	struct:Particle_Style	file:
size	src/rituals_renderer.cpp	/^	Vec2 size;$/;"	m	struct:Sprite	file:
size	src/rituals_simulation.cpp	/^	Vec2i size;$/;"	m	struct:Sim_Static_Grid	file:
size	src/thirdparty/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon5
size	src/thirdparty/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon9
size	src/thirdparty/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon15
size	src/wtb_sprite_renderer.h	/^	Vec2 size;$/;"	m	struct:Sprite
skid_on_bounce_max	src/rituals_particles.cpp	/^	real skid_on_bounce_max;$/;"	m	struct:Particle_Style	file:
skid_on_bounce_min	src/rituals_particles.cpp	/^	real skid_on_bounce_min;$/;"	m	struct:Particle_Style	file:
skip	src/thirdparty/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon2
slowtick_timer	src/rituals_world.cpp	/^	usize slowtick_timer;$/;"	m	struct:World	file:
slowtick_timer_interval	src/rituals_world.cpp	/^	usize slowtick_timer_interval;$/;"	m	struct:World	file:
snake	src/rituals_game_info.cpp	/^			} snake;$/;"	m	union:Rituals_Entity_Userdata::__anon3::__anon4	typeref:struct:Rituals_Entity_Userdata::__anon3::__anon4::__anon6	file:
solid	src/rituals_game_info.cpp	/^	bool solid;$/;"	m	struct:Tile_Info	file:
sort_axis	src/rituals_simulation.cpp	/^	isize sort_axis;$/;"	m	struct:Simulator	file:
sort_offset	src/rituals_animations.cpp	/^	real sort_offset;$/;"	m	struct:Animation_Frame	file:
sort_offset	src/rituals_renderer.cpp	/^	real sort_offset;$/;"	m	struct:Sprite	file:
sort_offset	src/wtb_sprite_renderer.h	/^	real sort_offset;$/;"	m	struct:Sprite
south	src/rituals_world_area.cpp	/^	Area_Link south;$/;"	m	struct:World_Area_Stub	file:
spec_end	src/thirdparty/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon6
spec_start	src/thirdparty/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon6
speed	src/rituals_game_info.cpp	/^		real speed;$/;"	m	struct:Rituals_Entity_Userdata::__anon3	file:
sprite	src/rituals_world_area.cpp	/^	Sprite sprite;$/;"	m	struct:Entity	file:
spritefont_render_text	rituals_gui.cpp	/^void spritefont_render_text(Spritefont* font, char* text, Vec2 position)$/;"	f
spritefont_render_text	rituals_gui.cpp	/^void spritefont_render_text(Spritefont* font,$/;"	f
spritefont_render_text	src/rituals_gui.cpp	/^void spritefont_render_text(Spritefont* font, char* text, Vec2 position, Sprite_Anchor anchor = Anchor_Top_Left, real scale = 1.0f)$/;"	f
spritefont_render_text	src/rituals_gui.cpp	/^void spritefont_render_text(Spritefont* font,$/;"	f
spritefont_render_text_background	src/rituals_gui.cpp	/^void spritefont_render_text_background(Spritefont* font, char* text, Vec2 position, real scale, Vec4 background) $/;"	f
spritefont_render_text_ex	src/rituals_gui.cpp	/^void spritefont_render_text_ex(Spritefont* font,$/;"	f
spritefont_size_text	src/rituals_gui.cpp	/^Vec2 spritefont_size_text(Spritefont* font, char* text) $/;"	f
spritefont_size_text	src/rituals_gui.cpp	/^Vec2 spritefont_size_text(Spritefont* font, char* text, isize len)$/;"	f
sprites	src/rituals_renderer.cpp	/^	Sprite* sprites;$/;"	m	struct:Render_Group	file:
sprites	src/wtb_sprite_renderer.h	/^	Sprite* sprites;$/;"	m	struct:Render_Group
sprites_capacity	src/rituals_renderer.cpp	/^	isize sprites_count, sprites_capacity;$/;"	m	struct:Render_Group	file:
sprites_capacity	src/wtb_sprite_renderer.h	/^	isize sprites_count, sprites_capacity;$/;"	m	struct:Render_Group
sprites_count	src/rituals_renderer.cpp	/^	isize sprites_count, sprites_capacity;$/;"	m	struct:Render_Group	file:
sprites_count	src/wtb_sprite_renderer.h	/^	isize sprites_count, sprites_capacity;$/;"	m	struct:Render_Group
start	src/metaprogram/metaprogram_parser.cpp	/^	Token *start, *end;$/;"	m	struct:Proc_Prototype	file:
start	src/metaprogram/metaprogram_parser.cpp	/^	char* start;$/;"	m	struct:Lexer_File	file:
start	src/metaprogram/metaprogram_parser.cpp	/^	char* start;$/;"	m	struct:Token	file:
start_play_state	src/rituals_play_state.cpp	/^void start_play_state(char* world_name_in)$/;"	f
start_state	src/rituals_main.cpp	/^void start_state()$/;"	f
start_temp_arena	src/rituals_memory.cpp	/^void start_temp_arena(Memory_Arena* arena)$/;"	f
start_x	src/thirdparty/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon17
start_y	src/thirdparty/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon17
state	src/rituals_game.cpp	/^	Game_State state;$/;"	m	struct:Game_Main	file:
states	src/rituals_tilemap.cpp	/^	Tile_State* states;$/;"	m	struct:Tilemap	file:
static_b	src/rituals_simulation.cpp	/^	Sim_Body* static_b;$/;"	m	struct:Sim_Contact	file:
static_bodies	src/rituals_simulation.cpp	/^	Sim_Body* static_bodies;$/;"	m	struct:Simulator	file:
static_bodies_capacity	src/rituals_simulation.cpp	/^	isize static_bodies_count, static_bodies_capacity;$/;"	m	struct:Simulator	file:
static_bodies_count	src/rituals_simulation.cpp	/^	isize static_bodies_count, static_bodies_capacity;$/;"	m	struct:Simulator	file:
stbi__DNL	src/thirdparty/stb_image.h	2793;"	d
stbi__EOI	src/thirdparty/stb_image.h	2795;"	d
stbi__SOF	src/thirdparty/stb_image.h	2796;"	d
stbi__SOF_progressive	src/thirdparty/stb_image.h	2799;"	d
stbi__SOI	src/thirdparty/stb_image.h	2794;"	d
stbi__SOS	src/thirdparty/stb_image.h	2797;"	d
stbi__YCbCr_to_RGB_row	src/thirdparty/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)$/;"	f
stbi__YCbCr_to_RGB_simd	src/thirdparty/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)$/;"	f
stbi__at_eof	src/thirdparty/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f
stbi__bit_reverse	src/thirdparty/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f
stbi__bitcount	src/thirdparty/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f
stbi__bitreverse16	src/thirdparty/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f
stbi__bmask	src/thirdparty/stb_image.h	/^static stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v
stbi__bmp_data	src/thirdparty/stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anon14
stbi__bmp_info	src/thirdparty/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__bmp_load	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__bmp_parse_header	src/thirdparty/stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f
stbi__bmp_test	src/thirdparty/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f
stbi__bmp_test_raw	src/thirdparty/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f
stbi__build_fast_ac	src/thirdparty/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f
stbi__build_huffman	src/thirdparty/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f
stbi__check_png_header	src/thirdparty/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f
stbi__clamp	src/thirdparty/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f
stbi__cleanup_jpeg	src/thirdparty/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f
stbi__compute_huffman_codes	src/thirdparty/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f
stbi__compute_transparency	src/thirdparty/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f
stbi__compute_transparency16	src/thirdparty/stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f
stbi__compute_y	src/thirdparty/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f
stbi__context	src/thirdparty/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon3
stbi__convert_format	src/thirdparty/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f
stbi__copyval	src/thirdparty/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f
stbi__cpuid3	src/thirdparty/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f
stbi__create_png_image	src/thirdparty/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)$/;"	f
stbi__create_png_image_raw	src/thirdparty/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)$/;"	f
stbi__de_iphone	src/thirdparty/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f
stbi__de_iphone_flag	src/thirdparty/stb_image.h	/^static int stbi__de_iphone_flag = 0;$/;"	v
stbi__decode_jpeg_header	src/thirdparty/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f
stbi__decode_jpeg_image	src/thirdparty/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f
stbi__depth_scale_table	src/thirdparty/stb_image.h	/^static stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v
stbi__div16	src/thirdparty/stb_image.h	2915;"	d
stbi__div4	src/thirdparty/stb_image.h	2866;"	d
stbi__do_png	src/thirdparty/stb_image.h	/^static unsigned char *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp)$/;"	f
stbi__do_zlib	src/thirdparty/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f
stbi__err	src/thirdparty/stb_image.h	/^static int stbi__err(const char *str)$/;"	f
stbi__err	src/thirdparty/stb_image.h	908;"	d
stbi__err	src/thirdparty/stb_image.h	910;"	d
stbi__err	src/thirdparty/stb_image.h	912;"	d
stbi__errpf	src/thirdparty/stb_image.h	915;"	d
stbi__errpuc	src/thirdparty/stb_image.h	916;"	d
stbi__expand_png_palette	src/thirdparty/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f
stbi__extend_receive	src/thirdparty/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f
stbi__f2f	src/thirdparty/stb_image.h	1928;"	d
stbi__fill_bits	src/thirdparty/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f
stbi__fill_gif_background	src/thirdparty/stb_image.h	/^static void stbi__fill_gif_background(stbi__gif *g, int x0, int y0, int x1, int y1)$/;"	f
stbi__float2int	src/thirdparty/stb_image.h	1405;"	d
stbi__float_postprocess	src/thirdparty/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__fopen	src/thirdparty/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f
stbi__fsh	src/thirdparty/stb_image.h	1929;"	d
stbi__g_failure_reason	src/thirdparty/stb_image.h	/^static const char *stbi__g_failure_reason;$/;"	v
stbi__get16be	src/thirdparty/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f
stbi__get16le	src/thirdparty/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f
stbi__get32be	src/thirdparty/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f
stbi__get32le	src/thirdparty/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f
stbi__get8	src/thirdparty/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f
stbi__get_chunk_header	src/thirdparty/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f
stbi__get_marker	src/thirdparty/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f
stbi__getn	src/thirdparty/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f
stbi__gif	src/thirdparty/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon17
stbi__gif_header	src/thirdparty/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f
stbi__gif_info	src/thirdparty/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_info_raw	src/thirdparty/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_load	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__gif_load_next	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp)$/;"	f
stbi__gif_lzw	src/thirdparty/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon16
stbi__gif_parse_colortable	src/thirdparty/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)$/;"	f
stbi__gif_test	src/thirdparty/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f
stbi__gif_test_raw	src/thirdparty/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f
stbi__grow_buffer_unsafe	src/thirdparty/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f
stbi__h2l_gamma_i	src/thirdparty/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__h2l_scale_i	src/thirdparty/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__hdr_convert	src/thirdparty/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f
stbi__hdr_gettoken	src/thirdparty/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f
stbi__hdr_info	src/thirdparty/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__hdr_load	src/thirdparty/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__hdr_test	src/thirdparty/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f
stbi__hdr_test_core	src/thirdparty/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s)$/;"	f
stbi__hdr_to_ldr	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f
stbi__high_bit	src/thirdparty/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f
stbi__huffman	src/thirdparty/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon5
stbi__idct_block	src/thirdparty/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__idct_simd	src/thirdparty/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__info_main	src/thirdparty/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__init_zdefaults	src/thirdparty/stb_image.h	/^static void stbi__init_zdefaults(void)$/;"	f
stbi__int16	src/thirdparty/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t
stbi__int16	src/thirdparty/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t
stbi__int32	src/thirdparty/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t
stbi__int32	src/thirdparty/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t
stbi__jbias	src/thirdparty/stb_image.h	/^static int const stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};$/;"	v
stbi__jpeg	src/thirdparty/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon6
stbi__jpeg_decode_block	src/thirdparty/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi_uc *dequant)$/;"	f
stbi__jpeg_decode_block_prog_ac	src/thirdparty/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)$/;"	f
stbi__jpeg_decode_block_prog_dc	src/thirdparty/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)$/;"	f
stbi__jpeg_dequantize	src/thirdparty/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi_uc *dequant)$/;"	f
stbi__jpeg_dezigzag	src/thirdparty/stb_image.h	/^static stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v
stbi__jpeg_finish	src/thirdparty/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f
stbi__jpeg_get_bit	src/thirdparty/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f
stbi__jpeg_get_bits	src/thirdparty/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f
stbi__jpeg_huff_decode	src/thirdparty/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f
stbi__jpeg_info	src/thirdparty/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_info_raw	src/thirdparty/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_load	src/thirdparty/stb_image.h	/^static unsigned char *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__jpeg_reset	src/thirdparty/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f
stbi__jpeg_test	src/thirdparty/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f
stbi__l2h_gamma	src/thirdparty/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__l2h_scale	src/thirdparty/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__ldr_to_hdr	src/thirdparty/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f
stbi__load_flip	src/thirdparty/stb_image.h	/^static unsigned char *stbi__load_flip(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__load_main	src/thirdparty/stb_image.h	/^static unsigned char *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__loadf_main	src/thirdparty/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__malloc	src/thirdparty/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f
stbi__out_gif_code	src/thirdparty/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f
stbi__paeth	src/thirdparty/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f
stbi__parse_entropy_coded_data	src/thirdparty/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f
stbi__parse_huffman_block	src/thirdparty/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f
stbi__parse_png_file	src/thirdparty/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f
stbi__parse_uncompressed_block	src/thirdparty/stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f
stbi__parse_zlib	src/thirdparty/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f
stbi__parse_zlib_header	src/thirdparty/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f
stbi__pic_info	src/thirdparty/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pic_is4	src/thirdparty/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f
stbi__pic_load	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp)$/;"	f
stbi__pic_load_core	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *result)$/;"	f
stbi__pic_packet	src/thirdparty/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon15
stbi__pic_test	src/thirdparty/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f
stbi__pic_test_core	src/thirdparty/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f
stbi__png	src/thirdparty/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon12
stbi__png_info	src/thirdparty/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__png_info_raw	src/thirdparty/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f
stbi__png_load	src/thirdparty/stb_image.h	/^static unsigned char *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__png_test	src/thirdparty/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f
stbi__pngchunk	src/thirdparty/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon11
stbi__pnm_getinteger	src/thirdparty/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f
stbi__pnm_info	src/thirdparty/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pnm_isdigit	src/thirdparty/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f
stbi__pnm_isspace	src/thirdparty/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f
stbi__pnm_load	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__pnm_skip_whitespace	src/thirdparty/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f
stbi__pnm_test	src/thirdparty/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f
stbi__process_frame_header	src/thirdparty/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f
stbi__process_gif_raster	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f
stbi__process_marker	src/thirdparty/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f
stbi__process_scan_header	src/thirdparty/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f
stbi__psd_info	src/thirdparty/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__psd_load	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__psd_test	src/thirdparty/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f
stbi__readval	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f
stbi__reduce_png	src/thirdparty/stb_image.h	/^static int stbi__reduce_png(stbi__png *p)$/;"	f
stbi__refill_buffer	src/thirdparty/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f
stbi__resample	src/thirdparty/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon8
stbi__resample_row_generic	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_h_2	src/thirdparty/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2_simd	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_v_2	src/thirdparty/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__rewind	src/thirdparty/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f
stbi__setup_jpeg	src/thirdparty/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f
stbi__shiftsigned	src/thirdparty/stb_image.h	/^static int stbi__shiftsigned(int v, int shift, int bits)$/;"	f
stbi__skip	src/thirdparty/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f
stbi__sse2_available	src/thirdparty/stb_image.h	/^static int stbi__sse2_available()$/;"	f
stbi__start_callbacks	src/thirdparty/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f
stbi__start_file	src/thirdparty/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f
stbi__start_mem	src/thirdparty/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f
stbi__stdio_callbacks	src/thirdparty/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v
stbi__stdio_eof	src/thirdparty/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f
stbi__stdio_read	src/thirdparty/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f
stbi__stdio_skip	src/thirdparty/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f
stbi__tga_get_comp	src/thirdparty/stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f
stbi__tga_info	src/thirdparty/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__tga_load	src/thirdparty/stb_image.h	/^static stbi_uc *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__tga_read_rgb16	src/thirdparty/stb_image.h	/^void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f
stbi__tga_test	src/thirdparty/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f
stbi__uint16	src/thirdparty/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t
stbi__uint16	src/thirdparty/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t
stbi__uint32	src/thirdparty/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t
stbi__uint32	src/thirdparty/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t
stbi__unpremultiply_on_load	src/thirdparty/stb_image.h	/^static int stbi__unpremultiply_on_load = 0;$/;"	v
stbi__vertically_flip_on_load	src/thirdparty/stb_image.h	/^static int stbi__vertically_flip_on_load = 0;$/;"	v
stbi__zbuf	src/thirdparty/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon10
stbi__zbuild_huffman	src/thirdparty/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, stbi_uc *sizelist, int num)$/;"	f
stbi__zdefault_distance	src/thirdparty/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v
stbi__zdefault_length	src/thirdparty/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v
stbi__zdist_base	src/thirdparty/stb_image.h	/^static int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v
stbi__zdist_extra	src/thirdparty/stb_image.h	/^static int stbi__zdist_extra[32] =$/;"	v
stbi__zexpand	src/thirdparty/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f
stbi__zget8	src/thirdparty/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f
stbi__zhuffman	src/thirdparty/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon9
stbi__zhuffman_decode	src/thirdparty/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zhuffman_decode_slowpath	src/thirdparty/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zlength_base	src/thirdparty/stb_image.h	/^static int stbi__zlength_base[31] = {$/;"	v
stbi__zlength_extra	src/thirdparty/stb_image.h	/^static int stbi__zlength_extra[31]=$/;"	v
stbi__zreceive	src/thirdparty/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f
stbi_convert_iphone_png_to_rgb	src/thirdparty/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f
stbi_failure_reason	src/thirdparty/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f
stbi_hdr_to_ldr_gamma	src/thirdparty/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f
stbi_hdr_to_ldr_scale	src/thirdparty/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f
stbi_image_free	src/thirdparty/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f
stbi_info	src/thirdparty/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f
stbi_info_from_callbacks	src/thirdparty/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)$/;"	f
stbi_info_from_file	src/thirdparty/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f
stbi_info_from_memory	src/thirdparty/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f
stbi_inline	src/thirdparty/stb_image.h	586;"	d
stbi_inline	src/thirdparty/stb_image.h	588;"	d
stbi_inline	src/thirdparty/stb_image.h	591;"	d
stbi_io_callbacks	src/thirdparty/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon2
stbi_is_hdr	src/thirdparty/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f
stbi_is_hdr_from_callbacks	src/thirdparty/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f
stbi_is_hdr_from_file	src/thirdparty/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_file(FILE *f)$/;"	f
stbi_is_hdr_from_memory	src/thirdparty/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_ldr_to_hdr_gamma	src/thirdparty/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f
stbi_ldr_to_hdr_scale	src/thirdparty/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f
stbi_load	src/thirdparty/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_callbacks	src/thirdparty/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_file	src/thirdparty/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_memory	src/thirdparty/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf	src/thirdparty/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_callbacks	src/thirdparty/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_file	src/thirdparty/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_memory	src/thirdparty/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_lrot	src/thirdparty/stb_image.h	622;"	d
stbi_lrot	src/thirdparty/stb_image.h	624;"	d
stbi_set_flip_vertically_on_load	src/thirdparty/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f
stbi_set_unpremultiply_on_load	src/thirdparty/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f
stbi_uc	src/thirdparty/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_zlib_decode_buffer	src/thirdparty/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_malloc	src/thirdparty/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize	src/thirdparty/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize_headerflag	src/thirdparty/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initial_size, int *outlen, int parse_header)$/;"	f
stbi_zlib_decode_noheader_buffer	src/thirdparty/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_noheader_malloc	src/thirdparty/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f
step	src/thirdparty/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon17
stop_state	src/rituals_main.cpp	/^void stop_state()$/;"	f
stub	src/rituals_world_area.cpp	/^	World_Area_Stub* stub;$/;"	m	struct:World_Area	file:
style_index	src/rituals_particles.cpp	/^	int32 style_index;$/;"	m	struct:Particle	file:
styles	src/rituals_particles.cpp	/^	Particle_Style* styles;$/;"	m	struct:Emitter	file:
styles_capacity	src/rituals_particles.cpp	/^	isize styles_count, styles_capacity;$/;"	m	struct:Emitter	file:
styles_count	src/rituals_particles.cpp	/^	isize styles_count, styles_capacity;$/;"	m	struct:Emitter	file:
subtype	src/rituals_game_info.cpp	/^		isize subtype;$/;"	m	struct:Rituals_Entity_Userdata::__anon1	file:
succ_high	src/thirdparty/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon6
succ_low	src/thirdparty/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon6
suffix	src/thirdparty/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon16
switch_state	src/rituals_main.cpp	/^void switch_state(Game_State newstate)$/;"	f
tab_size	rituals_gui.cpp	/^	int32 tab_size;$/;"	m	struct:Spritefont	file:
tab_size	src/rituals_gui.cpp	/^	int32 tab_size;$/;"	m	struct:Spritefont	file:
target	src/rituals_world_area.cpp	/^	Vec2 target;$/;"	m	struct:World_Area	file:
temp_arena	src/metaprogram/metaprogram_main.cpp	/^	Memory_Arena temp_arena;$/;"	m	struct:Metaprogram_Core	file:
temp_arena	src/rituals_game.cpp	/^	Memory_Arena* temp_arena;$/;"	m	struct:Game_Main	file:
temp_head	src/rituals_memory.cpp	/^	isize temp_head;$/;"	m	struct:Memory_Arena	file:
terms	src/metaprogram/metaprogram_parser.cpp	/^		char** terms;$/;"	m	struct:Struct_Member::__anon2	file:
terms	src/metaprogram/metaprogram_parser.cpp	/^	char** terms;$/;"	m	struct:Proc_Arg	file:
test_init	src/rituals_main.cpp	/^void test_init()$/;"	f
test_update	src/rituals_main.cpp	/^void test_update()$/;"	f
text	src/rituals_game.cpp	/^	char* text;$/;"	m	struct:Game_Input	file:
text_count	src/rituals_game.cpp	/^	isize text_count;$/;"	m	struct:Game_Input	file:
texture	src/rituals_animations.cpp	/^	Rect2 texture;$/;"	m	struct:Animation_Frame	file:
texture	src/rituals_game_info.cpp	/^	Rect2 texture;$/;"	m	struct:Item_Info	file:
texture	src/rituals_game_info.cpp	/^	Rect2 texture;$/;"	m	struct:Tile_Info	file:
texture	src/rituals_particles.cpp	/^	Rect2 texture;$/;"	m	struct:Particle_Style	file:
texture	src/rituals_renderer.cpp	/^	GLuint texture;$/;"	m	struct:Render_Group	file:
texture	src/rituals_renderer.cpp	/^	Rect2 texture;$/;"	m	struct:Sprite	file:
texture	src/wtb_sprite_renderer.h	/^	GLuint texture;$/;"	m	struct:Render_Group
texture	src/wtb_sprite_renderer.h	/^	Rect2 texture;$/;"	m	struct:Sprite
texture_size	src/rituals_renderer.cpp	/^	Vec2i texture_size;$/;"	m	struct:Render_Group	file:
texture_size	src/wtb_sprite_renderer.h	/^	Vec2i texture_size;$/;"	m	struct:Render_Group
tilemap_get_at	src/rituals_tilemap.cpp	/^Tile tilemap_get_at(Tilemap* tilemap, Vec2 pos)$/;"	f
tilemap_get_at	src/rituals_tilemap.cpp	/^Tile tilemap_get_at(Tilemap* tilemap, isize x, isize y)$/;"	f
tilemap_get_state_at	src/rituals_tilemap.cpp	/^Tile_State* tilemap_get_state_at(Tilemap* tilemap, Vec2 pos)$/;"	f
tilemap_get_state_at	src/rituals_tilemap.cpp	/^Tile_State* tilemap_get_state_at(Tilemap* tilemap, isize x, isize y)$/;"	f
tilemap_set_at	src/rituals_tilemap.cpp	/^bool tilemap_set_at(Tilemap* tilemap, Vec2 pos, Tile value)$/;"	f
tilemap_set_at	src/rituals_tilemap.cpp	/^bool tilemap_set_at(Tilemap* tilemap, isize x, isize y, Tile value)$/;"	f
tiles	src/rituals_game_registry.cpp	/^	Tile_Info* tiles;$/;"	m	struct:Game_Registry	file:
tiles	src/rituals_tilemap.cpp	/^	Tile* tiles;$/;"	m	struct:Tilemap	file:
tiles_count	src/rituals_game_registry.cpp	/^	isize tiles_count;$/;"	m	struct:Game_Registry	file:
tiles_hash	src/rituals_game_registry.cpp	/^	usize* tiles_hash;$/;"	m	struct:Game_Registry	file:
time	src/rituals_particles.cpp	/^	int32 time;$/;"	m	struct:Particle	file:
time_alpha	src/rituals_particles.cpp	/^	bool time_alpha;$/;"	m	struct:Particle_Style	file:
time_max	src/rituals_particles.cpp	/^	int32 time_max;$/;"	m	struct:Particle_Style	file:
time_min	src/rituals_particles.cpp	/^	int32 time_min;$/;"	m	struct:Particle_Style	file:
time_scaling	src/rituals_particles.cpp	/^	bool time_scaling;$/;"	m	struct:Particle_Style	file:
timer	src/rituals_animations.cpp	/^	real timer;$/;"	m	struct:Animated_Sprite	file:
tinydir_close	src/thirdparty/tinydir.h	/^void tinydir_close(tinydir_dir *dir)$/;"	f
tinydir_dir	src/thirdparty/tinydir.h	/^typedef struct tinydir_dir$/;"	s
tinydir_dir	src/thirdparty/tinydir.h	/^} tinydir_dir;$/;"	t	typeref:struct:tinydir_dir
tinydir_file	src/thirdparty/tinydir.h	/^typedef struct tinydir_file$/;"	s
tinydir_file	src/thirdparty/tinydir.h	/^} tinydir_file;$/;"	t	typeref:struct:tinydir_file
tinydir_file_open	src/thirdparty/tinydir.h	/^int tinydir_file_open(tinydir_file *file, const _tinydir_char_t *path)$/;"	f
tinydir_next	src/thirdparty/tinydir.h	/^int tinydir_next(tinydir_dir *dir)$/;"	f
tinydir_open	src/thirdparty/tinydir.h	/^int tinydir_open(tinydir_dir *dir, const _tinydir_char_t *path)$/;"	f
tinydir_open_sorted	src/thirdparty/tinydir.h	/^int tinydir_open_sorted(tinydir_dir *dir, const _tinydir_char_t *path)$/;"	f
tinydir_open_subdir_n	src/thirdparty/tinydir.h	/^int tinydir_open_subdir_n(tinydir_dir *dir, size_t i)$/;"	f
tinydir_readfile	src/thirdparty/tinydir.h	/^int tinydir_readfile(const tinydir_dir *dir, tinydir_file *file)$/;"	f
tinydir_readfile_n	src/thirdparty/tinydir.h	/^int tinydir_readfile_n(const tinydir_dir *dir, tinydir_file *file, size_t i)$/;"	f
title	src/rituals_gui.cpp	/^	char* title;$/;"	m	struct:Gui_Window_Handle	file:
title_font	src/rituals_game.cpp	/^	Spritefont* title_font;$/;"	m	struct:Game_Main	file:
todo	src/thirdparty/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon6
top_texture	src/rituals_game_info.cpp	/^	Rect2 top_texture;$/;"	m	struct:Tile_Info	file:
total_time	src/rituals_particles.cpp	/^	int32 total_time;$/;"	m	struct:Particle	file:
tq	src/thirdparty/stb_image.h	/^      int tq;$/;"	m	struct:__anon6::__anon7
transparent	src/thirdparty/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon17
tt	src/rituals_main.cpp	/^float tt = 0;$/;"	v
type	src/thirdparty/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon11
type	src/thirdparty/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon15
u_night_amount	src/rituals_renderer.cpp	/^	isize u_texturesize, u_orthomat, u_night_amount, u_night_cutoff;$/;"	m	struct:OpenGL_Renderer	file:
u_night_amount	src/wtb_sprite_renderer.h	/^	isize u_texturesize, u_orthomat, u_night_amount, u_night_cutoff;$/;"	m	struct:OpenGL_Renderer
u_night_cutoff	src/rituals_renderer.cpp	/^	isize u_texturesize, u_orthomat, u_night_amount, u_night_cutoff;$/;"	m	struct:OpenGL_Renderer	file:
u_night_cutoff	src/wtb_sprite_renderer.h	/^	isize u_texturesize, u_orthomat, u_night_amount, u_night_cutoff;$/;"	m	struct:OpenGL_Renderer
u_orthomat	src/rituals_renderer.cpp	/^	isize u_texturesize, u_orthomat, u_night_amount, u_night_cutoff;$/;"	m	struct:OpenGL_Renderer	file:
u_orthomat	src/wtb_sprite_renderer.h	/^	isize u_texturesize, u_orthomat, u_night_amount, u_night_cutoff;$/;"	m	struct:OpenGL_Renderer
u_texturesize	src/rituals_renderer.cpp	/^	isize u_texturesize, u_orthomat, u_night_amount, u_night_cutoff;$/;"	m	struct:OpenGL_Renderer	file:
u_texturesize	src/wtb_sprite_renderer.h	/^	isize u_texturesize, u_orthomat, u_night_amount, u_night_cutoff;$/;"	m	struct:OpenGL_Renderer
uint16	src/metaprogram/metaprogram_main.cpp	/^typedef uint16_t uint16;$/;"	t	file:
uint16	src/rituals_main.cpp	/^typedef uint16_t uint16;$/;"	t	file:
uint16	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(uint16);$/;"	v
uint16	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(uint16);$/;"	v
uint16	src/rituals_win32.cpp	/^typedef uint16_t uint16;$/;"	t	file:
uint32	src/metaprogram/metaprogram_main.cpp	/^typedef uint32_t uint32;$/;"	t	file:
uint32	src/rituals_main.cpp	/^typedef uint32_t uint32;$/;"	t	file:
uint32	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(uint32);$/;"	v
uint32	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(uint32);$/;"	v
uint32	src/rituals_win32.cpp	/^typedef uint32_t uint32;$/;"	t	file:
uint64	src/metaprogram/metaprogram_main.cpp	/^typedef uint64_t uint64;$/;"	t	file:
uint64	src/rituals_main.cpp	/^typedef uint64_t uint64;$/;"	t	file:
uint64	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(uint64);$/;"	v
uint64	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(uint64);$/;"	v
uint64	src/rituals_win32.cpp	/^typedef uint64_t uint64;$/;"	t	file:
uint64_t	src/thirdparty/gl_core_3_3.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	src/thirdparty/gl_core_3_3.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	src/thirdparty/gl_core_3_3.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint8	src/metaprogram/metaprogram_main.cpp	/^typedef uint8_t uint8;$/;"	t	file:
uint8	src/rituals_main.cpp	/^typedef uint8_t uint8;$/;"	t	file:
uint8	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(uint8);$/;"	v
uint8	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(uint8);$/;"	v
uint8	src/rituals_win32.cpp	/^typedef uint8_t uint8;$/;"	t	file:
unknown	src/rituals_game_info.cpp	/^	} unknown;$/;"	m	union:Rituals_Entity_Userdata	typeref:struct:Rituals_Entity_Userdata::__anon12	file:
update	src/rituals_main.cpp	/^void update()$/;"	f
update	src/rituals_win32.cpp	/^void update()$/;"	f
update_screen	src/rituals_main.cpp	/^void update_screen()$/;"	f
update_screen	src/rituals_win32.cpp	/^void update_screen()$/;"	f
update_tile_state_at	src/rituals_tilemap.cpp	/^void update_tile_state_at(Tilemap* map, Vec2 pos)$/;"	f
update_tile_state_at	src/rituals_tilemap.cpp	/^void update_tile_state_at(Tilemap* map, isize x, isize y)$/;"	f
userdata	src/rituals_world_area.cpp	/^	Rituals_Entity_Userdata userdata;$/;"	m	struct:Entity	file:
usize	src/metaprogram/metaprogram_main.cpp	/^typedef size_t usize;$/;"	t	file:
usize	src/rituals_main.cpp	/^typedef size_t usize;$/;"	t	file:
usize	src/rituals_sort_generator.cpp	/^_generate_sort_and_search_for_numeric_type(usize);$/;"	v
usize	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(usize);$/;"	v
usize	src/rituals_win32.cpp	/^typedef size_t usize;$/;"	t	file:
v	src/thirdparty/stb_image.h	/^      int h,v;$/;"	m	struct:__anon6::__anon7
v2	src/rituals_math.cpp	/^static inline Vec2 v2(Vec2i vi)$/;"	f	file:
v2	src/rituals_math.cpp	/^static inline Vec2 v2(Vec3 v)$/;"	f	file:
v2	src/rituals_math.cpp	/^static inline Vec2 v2(real x, real y)$/;"	f	file:
v2_cross	src/rituals_math.cpp	/^inline real v2_cross(Vec2 a, Vec2 b)$/;"	f
v2_dot	src/rituals_math.cpp	/^inline real v2_dot(Vec2 a, Vec2 b)$/;"	f
v2_from_angle	src/rituals_math.cpp	/^inline Vec2 v2_from_angle(real normal)$/;"	f
v2_normalize	src/rituals_math.cpp	/^inline Vec2 v2_normalize(Vec2 v)$/;"	f
v2_perpendicular	src/rituals_math.cpp	/^inline Vec2 v2_perpendicular(Vec2 v)$/;"	f
v2_to_angle	src/rituals_math.cpp	/^inline real v2_to_angle(Vec2 v)$/;"	f
v2i	src/rituals_math.cpp	/^static inline Vec2i v2i(int32 x, int32 y)$/;"	f	file:
v3	src/rituals_math.cpp	/^static inline Vec3 v3(Vec2 a)$/;"	f	file:
v3	src/rituals_math.cpp	/^static inline Vec3 v3(Vec2 a, real z)$/;"	f	file:
v3	src/rituals_math.cpp	/^static inline Vec3 v3(real x, real y, real z)$/;"	f	file:
v4	src/rituals_math.cpp	/^static inline Vec4 v4(real x, real y, real z, real w)$/;"	f	file:
valid	src/metaprogram/metaprogram_parser.cpp	204;"	d	file:
valid	src/metaprogram/metaprogram_parser.cpp	421;"	d	file:
validate_uint32	src/thirdparty/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t
value	helping_gb.cpp	/^	T value;$/;"	m	struct:MapEntry	file:
value	src/thirdparty/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon9
values	src/thirdparty/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon5
vao	src/rituals_renderer.cpp	/^	GLuint shader_program, vbo, vao;$/;"	m	struct:OpenGL_Renderer	file:
vao	src/wtb_sprite_renderer.h	/^	GLuint shader_program, vbo, vao;$/;"	m	struct:OpenGL_Renderer
vbo	src/rituals_renderer.cpp	/^	GLuint shader_program, vbo, vao;$/;"	m	struct:OpenGL_Renderer	file:
vbo	src/wtb_sprite_renderer.h	/^	GLuint shader_program, vbo, vao;$/;"	m	struct:OpenGL_Renderer
velocity	src/rituals_particles.cpp	/^	Vec3 velocity;$/;"	m	struct:Particle	file:
velocity	src/rituals_simulation.cpp	/^	Vec2 velocity, force, collision_vel;$/;"	m	struct:Sim_Body	file:
vs	src/thirdparty/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon8
w	src/rituals_inventory.cpp	/^	isize w, h, size;$/;"	m	struct:Inventory	file:
w	src/rituals_math.cpp	/^		real x, y, w, h;$/;"	m	struct:Rect2::__anon9	file:
w	src/rituals_math.cpp	/^		real x, y, z, w;$/;"	m	struct:Vec4::__anon4	file:
w	src/rituals_math.cpp	/^	int32 x, y, w, h;$/;"	m	struct:Rect2i	file:
w	src/rituals_tilemap.cpp	/^	isize w, h;$/;"	m	struct:Tilemap	file:
w	src/thirdparty/stb_image.h	/^   int w,h;$/;"	m	struct:__anon17
w2	src/thirdparty/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon6::__anon7
w_lores	src/thirdparty/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon8
walk_impulse	src/rituals_world_area.cpp	/^	Vec2 walk_impulse;$/;"	m	struct:Entity	file:
west	src/rituals_world_area.cpp	/^	Area_Link west;$/;"	m	struct:World_Area_Stub	file:
window	src/rituals_game.cpp	/^	SDL_Window* window;$/;"	m	struct:Game_Main	file:
window_size	src/rituals_game.cpp	/^	Vec2i window_size;$/;"	m	struct:Game_Main	file:
work_arena	src/metaprogram/metaprogram_main.cpp	/^	Memory_Arena work_arena;$/;"	m	struct:Metaprogram_Core	file:
world	src/rituals_main.cpp	/^	World* world;$/;"	m	struct:Play_State	file:
world	src/rituals_world_area.cpp	/^	World* world;$/;"	m	struct:World_Area	file:
world_area_animate_entities	src/rituals_world.cpp	/^void world_area_animate_entities(World_Area* area, World* world)$/;"	f
world_area_build_hitboxes	src/rituals_world_area.cpp	/^void world_area_build_hitboxes(World_Area* area)$/;"	f
world_area_contact_entities	src/rituals_world.cpp	/^void world_area_contact_entities(World_Area* area, World* world)$/;"	f
world_area_deinit_player	src/rituals_world.cpp	/^void world_area_deinit_player(World_Area* area, bool move_player=true)$/;"	f
world_area_find_entity	src/rituals_world_area.cpp	/^Entity* world_area_find_entity(World_Area* area, isize id)$/;"	f
world_area_frametick_entities	src/rituals_world.cpp	/^bool world_area_frametick_entities(World_Area* area, World* world)$/;"	f
world_area_get_next_entity	src/rituals_world_area.cpp	/^Entity* world_area_get_next_entity(World_Area* area)$/;"	f
world_area_hit_entities	src/rituals_world.cpp	/^void world_area_hit_entities(World_Area* area, World* world)$/;"	f
world_area_init_player	src/rituals_world.cpp	/^void world_area_init_player(World_Area* area, Vec2i tile_pos, bool move_player=true)$/;"	f
world_area_interact	src/rituals_world.cpp	/^void world_area_interact(World_Area* area, World* world)$/;"	f
world_area_on_activate_entity	src/rituals_world.cpp	/^void world_area_on_activate_entity(Entity* e, World_Area* area, World* world)$/;"	f
world_area_on_destroy_entity	src/rituals_world.cpp	/^void world_area_on_destroy_entity(Entity* e, World_Area* area, World* world)$/;"	f
world_area_process_hitboxes	src/rituals_world_area.cpp	/^void world_area_process_hitboxes(World_Area* area)$/;"	f
world_area_process_removed_entities	src/rituals_world_area.cpp	/^void world_area_process_removed_entities(World_Area* area)$/;"	f
world_area_remove_entity	src/rituals_world_area.cpp	/^bool world_area_remove_entity(World_Area* area, Entity* entity)$/;"	f
world_area_remove_entity_internal	src/rituals_world_area.cpp	/^void world_area_remove_entity_internal(World_Area* area, isize id)$/;"	f
world_area_render	src/rituals_world.cpp	/^void world_area_render(World_Area* area, World* world)$/;"	f
world_area_slowtick_entities	src/rituals_world.cpp	/^void world_area_slowtick_entities(World_Area* area, World* world)$/;"	f
world_area_sort_entities_on_id	src/rituals_world_area.cpp	/^void world_area_sort_entities_on_id(World_Area* area)$/;"	f
world_area_synchronize_entities_and_bodies	src/rituals_world_area.cpp	/^void world_area_synchronize_entities_and_bodies(World_Area* area)$/;"	f
world_area_update	src/rituals_world.cpp	/^void world_area_update(World_Area* area, World* world)$/;"	f
world_area_walk_entities	src/rituals_world.cpp	/^void world_area_walk_entities(World_Area* area, World* world)$/;"	f
world_arena	src/rituals_game.cpp	/^	Memory_Arena* world_arena;$/;"	m	struct:Game_Main	file:
world_delete_self	src/rituals_world.cpp	/^void world_delete_self(World* world)$/;"	f
world_load_area	src/rituals_world.cpp	/^World_Area* world_load_area(World* world, isize id, Memory_Arena* arena)$/;"	f
world_start_in_area	src/rituals_world.cpp	/^void world_start_in_area(World* world, World_Area_Stub* area, Memory_Arena* arena)$/;"	f
world_switch_current_area	src/rituals_world.cpp	/^void world_switch_current_area(World* world, Area_Link link, Memory_Arena* arena)$/;"	f
world_xy	src/rituals_main.cpp	/^	Vec2i world_xy;$/;"	m	struct:Play_State	file:
x	src/rituals_math.cpp	/^		int32 x, y;$/;"	m	struct:Vec2i::__anon2	file:
x	src/rituals_math.cpp	/^		real x, y, w, h;$/;"	m	struct:Rect2::__anon9	file:
x	src/rituals_math.cpp	/^		real x, y, z, w;$/;"	m	struct:Vec4::__anon4	file:
x	src/rituals_math.cpp	/^		real x, y, z;$/;"	m	struct:Vec3::__anon3	file:
x	src/rituals_math.cpp	/^		real x, y;$/;"	m	struct:Vec2::__anon1	file:
x	src/rituals_math.cpp	/^	int32 x, y, w, h;$/;"	m	struct:Rect2i	file:
x	src/rituals_random.cpp	/^	uint64 x, y;$/;"	m	struct:Random	file:
x	src/thirdparty/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon6::__anon7
y	src/rituals_math.cpp	/^		int32 x, y;$/;"	m	struct:Vec2i::__anon2	file:
y	src/rituals_math.cpp	/^		real x, y, w, h;$/;"	m	struct:Rect2::__anon9	file:
y	src/rituals_math.cpp	/^		real x, y, z, w;$/;"	m	struct:Vec4::__anon4	file:
y	src/rituals_math.cpp	/^		real x, y, z;$/;"	m	struct:Vec3::__anon3	file:
y	src/rituals_math.cpp	/^		real x, y;$/;"	m	struct:Vec2::__anon1	file:
y	src/rituals_math.cpp	/^	int32 x, y, w, h;$/;"	m	struct:Rect2i	file:
y	src/rituals_random.cpp	/^	uint64 x, y;$/;"	m	struct:Random	file:
y	src/thirdparty/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon6::__anon7
ypos	src/thirdparty/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon8
ystep	src/thirdparty/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon8
z	src/rituals_gui.cpp	/^	int32 z;$/;"	m	struct:Gui_Window_Handle	file:
z	src/rituals_math.cpp	/^		real x, y, z, w;$/;"	m	struct:Vec4::__anon4	file:
z	src/rituals_math.cpp	/^		real x, y, z;$/;"	m	struct:Vec3::__anon3	file:
z	src/rituals_world_area.cpp	/^	real z;$/;"	m	struct:Entity	file:
z_distance	src/thirdparty/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon10
z_expandable	src/thirdparty/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon10
z_length	src/thirdparty/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon10
zbuffer	src/thirdparty/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon10
zbuffer_end	src/thirdparty/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon10
zout	src/thirdparty/stb_image.h	/^   char *zout;$/;"	m	struct:__anon10
zout_end	src/thirdparty/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon10
zout_start	src/thirdparty/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon10
