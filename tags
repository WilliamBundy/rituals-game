$	src/rituals_main.cpp	1;"	d	file:
AABB	src/rituals_math.cpp	/^union AABB$/;"	u	file:
AABB_x1	src/rituals_math.cpp	1051;"	d	file:
AABB_x2	src/rituals_math.cpp	1052;"	d	file:
AABB_y1	src/rituals_math.cpp	1053;"	d	file:
AABB_y2	src/rituals_math.cpp	1054;"	d	file:
ALLOC_API	src/wb_alloc.h	167;"	d
ALLOC_API	src/wb_alloc.h	169;"	d
ALLOC_BACKEND_API	src/wb_alloc.h	174;"	d
ALLOC_CPLUSPLUS_FEATURES	src/rituals_main.cpp	28;"	d	file:
ALLOC_CPLUSPLUS_FEATURES	src/wb_alloc.h	149;"	d
ALLOC_CUSTOM_INTEGER_TYPES	src/rituals_main.cpp	26;"	d	file:
ALLOC_ERROR_HANDLER	src/wb_alloc.h	143;"	d
ALLOC_EXTENDED_INFO	src/wb_alloc.h	191;"	d
ALLOC_IMPLEMENTATION	src/rituals_main.cpp	27;"	d	file:
ALLOC_MEMCPY	src/wb_alloc.h	207;"	d
ALLOC_MEMSET	src/wb_alloc.h	203;"	d
ALLOC_POSIX	src/wb_alloc.h	158;"	d
ALLOC_POSIX	src/wb_alloc.h	161;"	d
ALLOC_STACK_PTR	src/wb_alloc.h	187;"	d
ALLOC_TAGGEDHEAP_MAX_TAG_COUNT	src/wb_alloc.h	216;"	d
ALLOC_WINDOWS	src/wb_alloc.h	155;"	d
Allocate	src/rituals_defines.h	51;"	d
Anchor_BottomCenter	src/render.c	/^	Anchor_BottomCenter = 6,$/;"	e	enum:SpriteFlags	file:
Anchor_BottomCenter	src/render.cpp	/^	Anchor_BottomCenter = 6,$/;"	e	enum:SpriteFlags	file:
Anchor_BottomLeft	src/render.c	/^	Anchor_BottomLeft = 7,$/;"	e	enum:SpriteFlags	file:
Anchor_BottomLeft	src/render.cpp	/^	Anchor_BottomLeft = 7,$/;"	e	enum:SpriteFlags	file:
Anchor_BottomRight	src/render.c	/^	Anchor_BottomRight = 5,$/;"	e	enum:SpriteFlags	file:
Anchor_BottomRight	src/render.cpp	/^	Anchor_BottomRight = 5,$/;"	e	enum:SpriteFlags	file:
Anchor_Center	src/render.c	/^	Anchor_Center = 0,$/;"	e	enum:SpriteFlags	file:
Anchor_Center	src/render.cpp	/^	Anchor_Center = 0,$/;"	e	enum:SpriteFlags	file:
Anchor_LeftCenter	src/render.c	/^	Anchor_LeftCenter = 8,$/;"	e	enum:SpriteFlags	file:
Anchor_LeftCenter	src/render.cpp	/^	Anchor_LeftCenter = 8,$/;"	e	enum:SpriteFlags	file:
Anchor_RightCenter	src/render.c	/^	Anchor_RightCenter = 4,$/;"	e	enum:SpriteFlags	file:
Anchor_RightCenter	src/render.cpp	/^	Anchor_RightCenter = 4,$/;"	e	enum:SpriteFlags	file:
Anchor_TopCenter	src/render.c	/^	Anchor_TopCenter = 2,$/;"	e	enum:SpriteFlags	file:
Anchor_TopCenter	src/render.cpp	/^	Anchor_TopCenter = 2,$/;"	e	enum:SpriteFlags	file:
Anchor_TopLeft	src/render.c	/^	Anchor_TopLeft = 1,$/;"	e	enum:SpriteFlags	file:
Anchor_TopLeft	src/render.cpp	/^	Anchor_TopLeft = 1,$/;"	e	enum:SpriteFlags	file:
Anchor_TopRight	src/render.c	/^	Anchor_TopRight = 3,$/;"	e	enum:SpriteFlags	file:
Anchor_TopRight	src/render.cpp	/^	Anchor_TopRight = 3,$/;"	e	enum:SpriteFlags	file:
Anim_Standing	src/rituals_world.cpp	/^isize Anim_Standing;$/;"	v
Anim_Walking	src/rituals_world.cpp	/^isize Anim_Walking;$/;"	v
Animated_Sprite	src/rituals_animations.cpp	/^struct Animated_Sprite$/;"	s	file:
Animation	src/rituals_animations.cpp	/^struct Animation$/;"	s	file:
Animation_Frame	src/rituals_animations.cpp	/^struct Animation_Frame$/;"	s	file:
AreaBiome_Desert	src/rituals_world_area.cpp	/^	AreaBiome_Desert$/;"	e	enum:World_Area_Biome	file:
AreaBiome_Grassland	src/rituals_world_area.cpp	/^	AreaBiome_Grassland,$/;"	e	enum:World_Area_Biome	file:
Area_Link	src/rituals_world_area.cpp	/^struct Area_Link$/;"	s	file:
AsciiPrintableCount	src/rituals_gui.cpp	17;"	d	file:
AsciiPrintableEnd	src/rituals_gui.cpp	16;"	d	file:
AsciiPrintableStart	src/rituals_gui.cpp	15;"	d	file:
BOOL	src/wb_alloc.h	/^typedef int BOOL;$/;"	t
Backspace	src/rituals_defines.h	63;"	d
BackspaceStr	src/rituals_defines.h	64;"	d
Body_Flag_Always_Contact	src/rituals_simulation.cpp	/^	Body_Flag_Always_Contact = Flag(4),$/;"	e	enum:Sim_Body_Flags	file:
Body_Flag_No_Friction	src/rituals_simulation.cpp	/^	Body_Flag_No_Friction = Flag(2),$/;"	e	enum:Sim_Body_Flags	file:
Body_Flag_None	src/rituals_simulation.cpp	/^	Body_Flag_None,$/;"	e	enum:Sim_Body_Flags	file:
Body_Flag_Sensor	src/rituals_simulation.cpp	/^	Body_Flag_Sensor = Flag(3),$/;"	e	enum:Sim_Body_Flags	file:
Body_Flag_Static	src/rituals_simulation.cpp	/^	Body_Flag_Static = Flag(1),$/;"	e	enum:Sim_Body_Flags	file:
Button_Down	src/rituals_input.cpp	/^	Button_Down = 1,$/;"	e	enum:Button_State	file:
Button_JustDown	src/rituals_input.cpp	/^	Button_JustDown = 2,$/;"	e	enum:Button_State	file:
Button_JustUp	src/rituals_input.cpp	/^	Button_JustUp = -1,$/;"	e	enum:Button_State	file:
Button_State	src/rituals_input.cpp	/^enum Button_State$/;"	g	file:
Button_State_Count	src/rituals_input.cpp	/^	Button_State_Count$/;"	e	enum:Button_State	file:
Button_Up	src/rituals_input.cpp	/^	Button_Up = 0,$/;"	e	enum:Button_State	file:
CTL_HW	src/wb_alloc.h	739;"	d
CalcGigabytes	src/wb_alloc.h	221;"	d
CalcKilobytes	src/wb_alloc.h	219;"	d
CalcMegabytes	src/wb_alloc.h	220;"	d
ColorBlack	src/rituals_math.cpp	1229;"	d	file:
ColorMediumGrey	src/rituals_math.cpp	1228;"	d	file:
ColorWhite	src/rituals_math.cpp	1227;"	d	file:
Color_Black	src/rituals_gui.cpp	/^Vec4 Color_Black = _color(0, 0, 0, 1);$/;"	v
Color_White	src/rituals_gui.cpp	/^Vec4 Color_White = _color(1, 1, 1, 1);$/;"	v
DWORD	src/wb_alloc.h	/^typedef unsigned int DWORD;$/;"	t
DWORD_PTR	src/wb_alloc.h	/^typedef DWORD* DWORD_PTR;$/;"	t
Direction	src/rituals_game.cpp	/^enum Direction $/;"	g	file:
Direction_East	src/rituals_game.cpp	/^	Direction_East,$/;"	e	enum:Direction	file:
Direction_North	src/rituals_game.cpp	/^	Direction_North,$/;"	e	enum:Direction	file:
Direction_South	src/rituals_game.cpp	/^	Direction_South,$/;"	e	enum:Direction	file:
Direction_West	src/rituals_game.cpp	/^	Direction_West$/;"	e	enum:Direction	file:
Disable_Flag	src/rituals_defines.h	72;"	d
Emitter	src/rituals_particles.cpp	/^struct Emitter$/;"	s	file:
EmitterStyleCapacity	src/rituals_particles.cpp	124;"	d	file:
Enable_Flag	src/rituals_defines.h	71;"	d
EnemyKind_Bat	src/rituals_game_info.cpp	/^	EnemyKind_Bat,$/;"	e	enum:Rituals_Enemy_Kind	file:
EnemyKind_Goblin_Knight	src/rituals_game_info.cpp	/^	EnemyKind_Goblin_Knight,$/;"	e	enum:Rituals_Enemy_Kind	file:
EnemyKind_Slime	src/rituals_game_info.cpp	/^	EnemyKind_Slime,$/;"	e	enum:Rituals_Enemy_Kind	file:
EnemyKind_Snake	src/rituals_game_info.cpp	/^	EnemyKind_Snake,$/;"	e	enum:Rituals_Enemy_Kind	file:
Entity	src/rituals_world_area.cpp	/^struct Entity$/;"	s	file:
EntityFlag_None	src/rituals_world_area.cpp	/^	EntityFlag_None,$/;"	e	enum:Entity_Flags	file:
EntityFlag_SameShadow	src/rituals_world_area.cpp	/^	EntityFlag_SameShadow = Flag(2)$/;"	e	enum:Entity_Flags	file:
EntityFlag_Tail	src/rituals_world_area.cpp	/^	EntityFlag_Tail = Flag(1),$/;"	e	enum:Entity_Flags	file:
EntityKind_Bullet	src/rituals_game_info.cpp	/^	EntityKind_Bullet,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Enemy	src/rituals_game_info.cpp	/^	EntityKind_Enemy,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Pickup	src/rituals_game_info.cpp	/^	EntityKind_Pickup,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Player	src/rituals_game_info.cpp	/^	EntityKind_Player,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Prop	src/rituals_game_info.cpp	/^	EntityKind_Prop,$/;"	e	enum:Rituals_Entity_Kinds	file:
EntityKind_Static	src/rituals_game_info.cpp	/^	EntityKind_Static,$/;"	e	enum:Rituals_Entity_Kinds	file:
Entity_Flags	src/rituals_world_area.cpp	/^enum Entity_Flags$/;"	g	file:
Entity_On_Activate	src/rituals_game_info.cpp	/^typedef void* Entity_On_Activate;$/;"	t	file:
Execute	src/wb_alloc.h	227;"	d
FilePathMaxLength	src/rituals_defines.h	59;"	d
Flag	src/rituals_defines.h	69;"	d
FlagArenaExtended	src/wb_alloc.h	232;"	d
FlagArenaFixedSize	src/wb_alloc.h	230;"	d
FlagArenaNoRecommit	src/wb_alloc.h	234;"	d
FlagArenaNoZeroMemory	src/wb_alloc.h	233;"	d
FlagArenaNormal	src/wb_alloc.h	229;"	d
FlagArenaStack	src/wb_alloc.h	231;"	d
FlagPoolCompacting	src/wb_alloc.h	238;"	d
FlagPoolFixedSize	src/wb_alloc.h	237;"	d
FlagPoolNoDoubleFreeCheck	src/wb_alloc.h	240;"	d
FlagPoolNoZeroMemory	src/wb_alloc.h	239;"	d
FlagPoolNormal	src/wb_alloc.h	236;"	d
FlagTaggedHeapFixedSize	src/wb_alloc.h	243;"	d
FlagTaggedHeapNoSetCommitSize	src/wb_alloc.h	245;"	d
FlagTaggedHeapNoZeroMemory	src/wb_alloc.h	244;"	d
FlagTaggedHeapNormal	src/wb_alloc.h	242;"	d
FlagTaggedHeapSearchForBestFit	src/wb_alloc.h	246;"	d
GLES2_frag	src/rituals_game.cpp	/^const char* GLES2_frag = "" "#version 100\\n"$/;"	v
GLES2_vert	src/rituals_game.cpp	/^const char* GLES2_vert = "" "#version 100\\n"$/;"	v
Game	src/rituals_game.cpp	/^Game_Main* Game;$/;"	v
Game_Input	src/rituals_input.cpp	/^struct Game_Input$/;"	s	file:
Game_Main	src/rituals_game.cpp	/^struct Game_Main$/;"	s	file:
Game_Registry	src/rituals_game_registry.cpp	/^struct Game_Registry$/;"	s	file:
GenerateBinarySearchForType	src/rituals_sort_macros.cpp	95;"	d	file:
GenerateInsertionSortForType	src/rituals_sort_macros.cpp	35;"	d	file:
GenerateIntrosortForType	src/rituals_sort_macros.cpp	49;"	d	file:
GenerateQsortForType	src/rituals_sort_macros.cpp	81;"	d	file:
GenerateQuicksortForType	src/rituals_sort_macros.cpp	12;"	d	file:
Gigabytes	src/rituals_defines.h	76;"	d
Gohufont_Glyphs	src/rituals_gui.cpp	/^const Rect2 Gohufont_Glyphs[] = {$/;"	v
Gui_ButtonActiveColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonActiveColor = _color(.9, .9, .9, 1) * Gui_Tint;$/;"	v
Gui_ButtonDownColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonDownColor = _color(.5, .5, .5, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineActiveColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineActiveColor = _color(1, 1, 1, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineActiveColor2	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineActiveColor2 = _color(0.5, 0.5, 0.5, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineDownColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineDownColor = _color(.4, .4, .4, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineDownColor2	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineDownColor2 = _color(.7, .7, .7, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineRestColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineRestColor = _color(.9, .9, .9, 1) * Gui_Tint;$/;"	v
Gui_ButtonOutlineRestColor2	src/rituals_gui.cpp	/^Vec4 Gui_ButtonOutlineRestColor2 = _color(0.5, 0.5, 0.5, 1) * Gui_Tint;$/;"	v
Gui_ButtonRestColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonRestColor = _color(.8, .8, .8, 1) * Gui_Tint;$/;"	v
Gui_ButtonTextColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonTextColor = _color(0, 0, 0, 1);$/;"	v
Gui_ButtonTextDownColor	src/rituals_gui.cpp	/^Vec4 Gui_ButtonTextDownColor = Gui_ButtonTextColor;$/;"	v
Gui_Context	src/rituals_gui.cpp	/^struct Gui_Context$/;"	s	file:
Gui_TextBackgroundColor	src/rituals_gui.cpp	/^Vec4 Gui_TextBackgroundColor = Vec4{0, 0, 0, 0.8f};$/;"	v
Gui_TextInputActiveColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputActiveColor = _color(0.5, 0.5, 0.5, 1) * Gui_Tint;$/;"	v
Gui_TextInputHotColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputHotColor = _color(0.6, 0.6, 0.6, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineActiveColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineActiveColor = _color(0.4, 0.4, 0.4, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineActiveColor2	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineActiveColor2 = _color(0.7, 0.7, 0.7, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineHotColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineHotColor = _color(0.5, 0.5, 0.5, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineHotColor2	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineHotColor2 = _color(0.7, 0.7, 0.7, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineRestColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineRestColor = _color(0.2, 0.2, 0.2, 1) * Gui_Tint;$/;"	v
Gui_TextInputOutlineRestColor2	src/rituals_gui.cpp	/^Vec4 Gui_TextInputOutlineRestColor2 = _color(0.4, 0.4, 0.4, 1) * Gui_Tint;$/;"	v
Gui_TextInputRestColor	src/rituals_gui.cpp	/^Vec4 Gui_TextInputRestColor = _color(0.3, 0.3, 0.3, 1) * Gui_Tint;$/;"	v
Gui_Text_Input_Handle	src/rituals_gui.cpp	/^struct Gui_Text_Input_Handle$/;"	s	file:
Gui_Tint	src/rituals_gui.cpp	/^Vec4 Gui_Tint = _color(0.88, 0.89, 1, 1);$/;"	v
Gui_Window_Handle	src/rituals_gui.cpp	/^struct Gui_Window_Handle$/;"	s	file:
HW_MEMSIZE	src/wb_alloc.h	742;"	d
HW_PAGESIZE	src/wb_alloc.h	740;"	d
HW_PHYSMEM	src/wb_alloc.h	741;"	d
Has_Flag	src/rituals_defines.h	70;"	d
Hitbox	src/rituals_world_area.cpp	/^struct Hitbox$/;"	s	file:
Hitbox_Contact	src/rituals_world_area.cpp	/^struct Hitbox_Contact$/;"	s	file:
Input	src/rituals_game.cpp	/^Game_Input* Input;$/;"	v
InputTextCapacity	src/rituals_input.cpp	11;"	d	file:
Kilobytes	src/rituals_defines.h	74;"	d
LPSYSTEM_INFO	src/wb_alloc.h	/^} SYSTEM_INFO, *LPSYSTEM_INFO;$/;"	t	typeref:struct:_SYSTEM_INFO
LPVOID	src/wb_alloc.h	/^typedef void* LPVOID;$/;"	t
Log_Error	src/rituals_game.cpp	16;"	d	file:
MAP_ANON	src/wb_alloc.h	676;"	d
MAP_ANON	src/wb_alloc.h	699;"	d
MAP_FIXED	src/wb_alloc.h	675;"	d
MAP_FIXED	src/wb_alloc.h	698;"	d
MAP_PRIVATE	src/wb_alloc.h	674;"	d
MAP_PRIVATE	src/wb_alloc.h	697;"	d
MAP_SHARED	src/wb_alloc.h	673;"	d
MAP_SHARED	src/wb_alloc.h	696;"	d
MEM_COMMIT	src/wb_alloc.h	570;"	d
MEM_DECOMMIT	src/wb_alloc.h	580;"	d
MEM_RELEASE	src/wb_alloc.h	581;"	d
MEM_RESERVE	src/wb_alloc.h	571;"	d
MS_ASYNC	src/wb_alloc.h	678;"	d
MS_ASYNC	src/wb_alloc.h	701;"	d
MS_INVALIDATE	src/wb_alloc.h	679;"	d
MS_INVALIDATE	src/wb_alloc.h	702;"	d
MS_SYNC	src/wb_alloc.h	677;"	d
MS_SYNC	src/wb_alloc.h	700;"	d
Math_DegToRad	src/rituals_defines.h	49;"	d
Math_InvSqrt2	src/rituals_defines.h	45;"	d
Math_Pi	src/rituals_defines.h	46;"	d
Math_RadToDeg	src/rituals_defines.h	48;"	d
Math_Sqrt2	src/rituals_defines.h	44;"	d
Math_Tau	src/rituals_defines.h	47;"	d
Max	src/rituals_defines.h	67;"	d
Megabytes	src/rituals_defines.h	75;"	d
MemoryArena	src/wb_alloc.h	/^struct MemoryArena$/;"	s
MemoryArena	src/wb_alloc.h	/^typedef struct MemoryArena MemoryArena;$/;"	t	typeref:struct:MemoryArena
MemoryInfo	src/wb_alloc.h	/^struct MemoryInfo$/;"	s
MemoryInfo	src/wb_alloc.h	/^typedef struct MemoryInfo MemoryInfo;$/;"	t	typeref:struct:MemoryInfo
MemoryPool	src/wb_alloc.h	/^struct MemoryPool$/;"	s
MemoryPool	src/wb_alloc.h	/^typedef struct MemoryPool MemoryPool;$/;"	t	typeref:struct:MemoryPool
Menu_State	src/rituals_game_states.cpp	/^struct Menu_State$/;"	s	file:
Min	src/rituals_defines.h	66;"	d
MixerNumberOfChannels	src/rituals_defines.h	57;"	d
None	src/wb_alloc.h	224;"	d
None_State	src/rituals_game_states.cpp	/^struct None_State$/;"	s	file:
PAGE_EXECUTE	src/wb_alloc.h	572;"	d
PAGE_EXECUTE_READ	src/wb_alloc.h	573;"	d
PAGE_EXECUTE_READWRITE	src/wb_alloc.h	574;"	d
PAGE_EXECUTE_WRITECOPY	src/wb_alloc.h	575;"	d
PAGE_NOACCESS	src/wb_alloc.h	576;"	d
PAGE_READONLY	src/wb_alloc.h	577;"	d
PAGE_READWRITE	src/wb_alloc.h	578;"	d
PAGE_WRITECOPY	src/wb_alloc.h	579;"	d
PROT_EXEC	src/wb_alloc.h	672;"	d
PROT_EXEC	src/wb_alloc.h	694;"	d
PROT_NONE	src/wb_alloc.h	669;"	d
PROT_NONE	src/wb_alloc.h	695;"	d
PROT_READ	src/wb_alloc.h	670;"	d
PROT_READ	src/wb_alloc.h	692;"	d
PROT_WRITE	src/wb_alloc.h	671;"	d
PROT_WRITE	src/wb_alloc.h	693;"	d
PULONGLONG	src/wb_alloc.h	/^typedef unsigned long long* PULONGLONG;$/;"	t
Particle	src/rituals_particles.cpp	/^struct Particle$/;"	s	file:
Particle_Style	src/rituals_particles.cpp	/^struct Particle_Style$/;"	s	file:
PathSeparator	src/rituals_defines.h	61;"	d
PathSeparatorChar	src/rituals_defines.h	62;"	d
PickupKind_Health	src/rituals_game_info.cpp	/^	PickupKind_Health$/;"	e	enum:Rituals_Pickup_Kind	file:
PickupKind_Item	src/rituals_game_info.cpp	/^	PickupKind_Item,$/;"	e	enum:Rituals_Pickup_Kind	file:
Platform	src/rituals_game.cpp	/^struct Platform$/;"	s	file:
Play_State	src/rituals_game_states.cpp	/^struct Play_State$/;"	s	file:
Random	src/rituals_random.cpp	/^struct Random$/;"	s	file:
Read	src/wb_alloc.h	225;"	d
Rect2	src/rituals_math.cpp	/^union Rect2$/;"	u	file:
Rect2_Clip_Info	src/rituals_math.cpp	/^struct Rect2_Clip_Info$/;"	s	file:
Rect2i	src/rituals_math.cpp	/^struct Rect2i$/;"	s	file:
Rituals_Bat_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Bat_Userdata$/;"	s	file:
Rituals_Enemy_Kind	src/rituals_game_info.cpp	/^enum Rituals_Enemy_Kind$/;"	g	file:
Rituals_Enemy_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Enemy_Userdata$/;"	s	file:
Rituals_Entity_Kinds	src/rituals_game_info.cpp	/^enum Rituals_Entity_Kinds$/;"	g	file:
Rituals_Entity_Userdata	src/rituals_game_info.cpp	/^union Rituals_Entity_Userdata$/;"	u	file:
Rituals_Goblin_Knight_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Goblin_Knight_Userdata$/;"	s	file:
Rituals_Health_Pickup_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Health_Pickup_Userdata$/;"	s	file:
Rituals_Item_Pickup_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Item_Pickup_Userdata$/;"	s	file:
Rituals_Pickup_Kind	src/rituals_game_info.cpp	/^enum Rituals_Pickup_Kind$/;"	g	file:
Rituals_Pickup_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Pickup_Userdata$/;"	s	file:
Rituals_Player_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Player_Userdata {$/;"	s	file:
Rituals_Prop_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Prop_Userdata {$/;"	s	file:
Rituals_Snake_Userdata	src/rituals_game_info.cpp	/^struct Rituals_Snake_Userdata$/;"	s	file:
STBI_ONLY_PNG	src/thirdparty.h	10;"	d
STB_IMAGE_IMPLEMENTATION	src/thirdparty.h	9;"	d
SYSTEM_INFO	src/wb_alloc.h	/^} SYSTEM_INFO, *LPSYSTEM_INFO;$/;"	t	typeref:struct:_SYSTEM_INFO
ShuffleToByte	src/rituals_defines.h	37;"	d
SimGridCellSide	src/rituals_simulation.cpp	91;"	d	file:
SimIter	src/rituals_simulation.cpp	272;"	d	file:
SimIter_i	src/rituals_simulation.cpp	271;"	d	file:
Sim_Body	src/rituals_simulation.cpp	/^struct Sim_Body$/;"	s	file:
Sim_Body_Flags	src/rituals_simulation.cpp	/^enum Sim_Body_Flags$/;"	g	file:
Sim_Contact	src/rituals_simulation.cpp	/^struct Sim_Contact$/;"	s	file:
Sim_Grid_Cell	src/rituals_simulation.cpp	/^struct Sim_Grid_Cell$/;"	s	file:
Sim_Static_Grid	src/rituals_simulation.cpp	/^struct Sim_Static_Grid$/;"	s	file:
Simulator	src/rituals_simulation.cpp	/^struct Simulator$/;"	s	file:
SoffsetX	src/render.c	/^float SoffsetX[] = {0.0, 0.5, 0.0, -0.5, -0.5, -0.5,  0.0,  0.5, 0.5};$/;"	v
SoffsetX	src/render.cpp	/^float SoffsetX[] = {0.0, 0.5, 0.0, -0.5, -0.5, -0.5,  0.0,  0.5, 0.5};$/;"	v
SoffsetY	src/render.c	/^float SoffsetY[] = {0.0, 0.5, 0.5,  0.5,  0.0, -0.5, -0.5, -0.5, 0.0};$/;"	v
SoffsetY	src/render.cpp	/^float SoffsetY[] = {0.0, 0.5, 0.5,  0.5,  0.0, -0.5, -0.5, -0.5, 0.0};$/;"	v
Sprite	src/render.cpp	/^typedef struct wSprite Sprite;$/;"	t	typeref:struct:wSprite	file:
SpriteFlags	src/render.c	/^enum SpriteFlags$/;"	g	file:
SpriteFlags	src/render.cpp	/^enum SpriteFlags$/;"	g	file:
Sprite_FlipHoriz	src/render.c	/^	Sprite_FlipHoriz = 1<<8,$/;"	e	enum:SpriteFlags	file:
Sprite_FlipHoriz	src/render.cpp	/^	Sprite_FlipHoriz = 1<<8,$/;"	e	enum:SpriteFlags	file:
Sprite_FlipVert	src/render.c	/^	Sprite_FlipVert = 1<<9,$/;"	e	enum:SpriteFlags	file:
Sprite_FlipVert	src/render.cpp	/^	Sprite_FlipVert = 1<<9,$/;"	e	enum:SpriteFlags	file:
Sprite_Hidden	src/render.c	/^	Sprite_Hidden = 1<<4,$/;"	e	enum:SpriteFlags	file:
Sprite_Hidden	src/render.cpp	/^	Sprite_Hidden = 1<<4,$/;"	e	enum:SpriteFlags	file:
Sprite_MSDF	src/render.c	/^	Sprite_MSDF = 1<<11,$/;"	e	enum:SpriteFlags	file:
Sprite_MSDF	src/render.cpp	/^	Sprite_MSDF = 1<<11,$/;"	e	enum:SpriteFlags	file:
Sprite_NoAA	src/render.c	/^	Sprite_NoAA = 1<<10,$/;"	e	enum:SpriteFlags	file:
Sprite_NoAA	src/render.cpp	/^	Sprite_NoAA = 1<<10,$/;"	e	enum:SpriteFlags	file:
Sprite_NoTexture	src/render.c	/^	Sprite_NoTexture = 1<<5,$/;"	e	enum:SpriteFlags	file:
Sprite_NoTexture	src/render.cpp	/^	Sprite_NoTexture = 1<<5,$/;"	e	enum:SpriteFlags	file:
Sprite_RotateCCW	src/render.c	/^	Sprite_RotateCCW = 1<<7,$/;"	e	enum:SpriteFlags	file:
Sprite_RotateCCW	src/render.cpp	/^	Sprite_RotateCCW = 1<<7,$/;"	e	enum:SpriteFlags	file:
Sprite_RotateCW	src/render.c	/^	Sprite_RotateCW = 1<<6,$/;"	e	enum:SpriteFlags	file:
Sprite_RotateCW	src/render.cpp	/^	Sprite_RotateCW = 1<<6,$/;"	e	enum:SpriteFlags	file:
Spritefont	src/rituals_gui.cpp	/^struct Spritefont$/;"	s	file:
StackAlloc	src/rituals_defines.h	52;"	d
TaggedHeap	src/wb_alloc.h	/^struct TaggedHeap$/;"	s
TaggedHeap	src/wb_alloc.h	/^typedef struct TaggedHeap TaggedHeap;$/;"	t	typeref:struct:TaggedHeap
TiSz	src/rituals_game_registry.cpp	29;"	d	file:
Tile	src/rituals_tilemap.cpp	/^typedef i32 Tile;$/;"	t	file:
Tile_Cracked_Road	src/rituals_game_registry.cpp	/^	Tile_Cracked_Road, $/;"	e	enum:__anon1	file:
Tile_Dense_Grass	src/rituals_game_registry.cpp	/^	Tile_Dense_Grass, $/;"	e	enum:__anon1	file:
Tile_Dug_Earth	src/rituals_game_registry.cpp	/^	Tile_Dug_Earth, $/;"	e	enum:__anon1	file:
Tile_Grass	src/rituals_game_registry.cpp	/^	Tile_Grass, $/;"	e	enum:__anon1	file:
Tile_Info	src/rituals_game_info.cpp	/^struct Tile_Info$/;"	s	file:
Tile_Pristine_Road	src/rituals_game_registry.cpp	/^	Tile_Pristine_Road, $/;"	e	enum:__anon1	file:
Tile_Sand	src/rituals_game_registry.cpp	/^	Tile_Sand, $/;"	e	enum:__anon1	file:
Tile_Shallow_Water	src/rituals_game_registry.cpp	/^	Tile_Shallow_Water, $/;"	e	enum:__anon1	file:
Tile_Slab_Wall	src/rituals_game_registry.cpp	/^	Tile_Slab_Wall, $/;"	e	enum:__anon1	file:
Tile_State	src/rituals_game_info.cpp	/^struct Tile_State$/;"	s	file:
Tile_Stone_Road	src/rituals_game_registry.cpp	/^	Tile_Stone_Road, $/;"	e	enum:__anon1	file:
Tile_Tree_Wall	src/rituals_game_registry.cpp	/^	Tile_Tree_Wall, $/;"	e	enum:__anon1	file:
Tile_Void	src/rituals_game_registry.cpp	/^	Tile_Void, $/;"	e	enum:__anon1	file:
Tile_Water	src/rituals_game_registry.cpp	/^	Tile_Water, $/;"	e	enum:__anon1	file:
Tilemap	src/rituals_tilemap.cpp	/^struct Tilemap$/;"	s	file:
TimeStep	src/rituals_simulation.cpp	270;"	d	file:
Unknown_Userdata	src/rituals_game_info.cpp	/^struct Unknown_Userdata {$/;"	s	file:
Vec2	src/rituals_math.cpp	/^union Vec2 $/;"	u	file:
Vec2i	src/rituals_math.cpp	/^union Vec2i$/;"	u	file:
Vec3	src/rituals_math.cpp	/^union Vec3$/;"	u	file:
Vec3i	src/rituals_math.cpp	/^union Vec3i$/;"	u	file:
Vec4	src/rituals_math.cpp	/^union Vec4$/;"	u	file:
Vec4i	src/rituals_math.cpp	/^union Vec4i$/;"	u	file:
WBGL_GL_VERSION_3_3	src/rituals_main.cpp	31;"	d	file:
WBGL_IMPLEMENTATION	src/rituals_main.cpp	33;"	d	file:
WBGL_SDL	src/rituals_main.cpp	32;"	d	file:
WINAPI	src/wb_alloc.h	509;"	d
WORD	src/wb_alloc.h	/^typedef unsigned short WORD;$/;"	t
World	src/rituals_world.cpp	/^struct World$/;"	s	file:
WorldAreaEntityCapacity	src/rituals_world_area.cpp	80;"	d	file:
WorldAreaTilemapHeight	src/rituals_tilemap.cpp	11;"	d	file:
WorldAreaTilemapWidth	src/rituals_tilemap.cpp	10;"	d	file:
World_Area	src/rituals_world_area.cpp	/^struct World_Area$/;"	s	file:
World_Area_Biome	src/rituals_world_area.cpp	/^enum World_Area_Biome$/;"	g	file:
World_Area_Stub	src/rituals_world_area.cpp	/^struct World_Area_Stub$/;"	s	file:
Write	src/wb_alloc.h	226;"	d
_CRT_SECURE_NO_WARNINGS	src/rituals_main.cpp	10;"	d	file:
_In_	src/wb_alloc.h	512;"	d
_In_opt_	src/wb_alloc.h	514;"	d
_Out_	src/wb_alloc.h	513;"	d
_SC_PAGESIZE	src/wb_alloc.h	683;"	d
_SC_PAGESIZE	src/wb_alloc.h	706;"	d
_SYSTEM_INFO	src/wb_alloc.h	/^typedef struct _SYSTEM_INFO {$/;"	s
_body_get_id	src/rituals_simulation.cpp	73;"	d	file:
_body_get_min_x	src/rituals_simulation.cpp	37;"	d	file:
_body_get_min_y	src/rituals_simulation.cpp	38;"	d	file:
_body_get_not_static	src/rituals_simulation.cpp	70;"	d	file:
_bodyp_get_id	src/rituals_simulation.cpp	74;"	d	file:
_c	src/rituals_math.cpp	990;"	d	file:
_c	src/rituals_math.cpp	995;"	d	file:
_check	src/rituals_defines.h	78;"	d
_cmp_body_x	src/rituals_simulation.cpp	/^i32 _cmp_body_x(const void * a, const void* b)$/;"	f
_cmp_body_y	src/rituals_simulation.cpp	/^i32 _cmp_body_y(const void * a, const void* b)$/;"	f
_collision_slop	src/rituals_simulation.cpp	273;"	d	file:
_color	src/rituals_gui.cpp	286;"	d	file:
_do_collide_bodies	src/rituals_simulation.cpp	/^i32 _do_collide_bodies(Sim_Body* a, Sim_Body* b, i32 sort_axis)$/;"	f
_do_collide_bodies_sweep	src/rituals_simulation.cpp	/^i32 _do_collide_bodies_sweep(Sim_Body* a, Sim_Body* b, i32 sort_axis)$/;"	f
_entity_get_id	src/rituals_world_area.cpp	62;"	d	file:
_f	src/rituals_math.cpp	1002;"	d	file:
_f	src/rituals_math.cpp	997;"	d	file:
_f	src/wb_alloc.h	/^	char _f[20-2*sizeof(long)-sizeof(int)];$/;"	m	struct:sysinfo
_generate_sort_and_search_for_numeric_type	src/rituals_sort_macros.cpp	117;"	d	file:
_get_at	src/rituals_simulation.cpp	/^Tile_Info* _get_at(Game_Registry* Registry, isize x, isize y)$/;"	f
_glyph_offset_x	src/rituals_gui.cpp	19;"	d	file:
_glyph_offset_y	src/rituals_gui.cpp	20;"	d	file:
_hitbox_get_x1	src/rituals_world_area.cpp	19;"	d	file:
_hitbox_get_y1	src/rituals_world_area.cpp	21;"	d	file:
_isnt_spritefont_separator	src/rituals_gui.cpp	/^static inline bool _isnt_spritefont_separator(char c)$/;"	f	file:
_new_tile	src/rituals_game_registry.cpp	33;"	d	file:
_passthru_macro	src/rituals_sort_macros.cpp	116;"	d	file:
_recursive_delete	src/rituals_serialization.cpp	/^int _recursive_delete(const char* last_path, isize last_path_len, char* path)$/;"	f
_rotate_left	src/rituals_random.cpp	/^static inline u64 _rotate_left(const u64 t, i64 k)$/;"	f	file:
_scancode	src/rituals_defines.h	79;"	d
_separate_bodies	src/rituals_simulation.cpp	/^void _separate_bodies(Sim_Body* a, Sim_Body* b, bool capture_contacts, i32 times, Simulator* sim)$/;"	f
_splitmix64	src/rituals_random.cpp	/^static inline u64 _splitmix64(u64* x)$/;"	f	file:
_th	src/rituals_simulation.cpp	/^isize _tw, _th;$/;"	v
_tile_texture	src/rituals_game_registry.cpp	32;"	d	file:
_tiles	src/rituals_simulation.cpp	/^Tile* _tiles;$/;"	v
_tw	src/rituals_simulation.cpp	/^isize _tw, _th;$/;"	v
a	src/rituals_world_area.cpp	/^	Entity* a;$/;"	m	struct:Hitbox_Contact	file:
a_id	src/rituals_simulation.cpp	/^	isize a_id;$/;"	m	struct:Sim_Contact	file:
a_id	src/rituals_world_area.cpp	/^	isize a_id;$/;"	m	struct:Hitbox_Contact	file:
aabb	src/rituals_math.cpp	/^static inline AABB aabb(Vec2 c, f32 hw, f32 hh)$/;"	f	file:
aabb	src/rituals_math.cpp	/^static inline AABB aabb(f32 x, f32 y, f32 hw, f32 hh)$/;"	f	file:
aabb_intersect	src/rituals_math.cpp	/^static inline bool aabb_intersect(AABB a, AABB b)$/;"	f	file:
aabb_intersect_f	src/rituals_math.cpp	/^static inline bool aabb_intersect_f(f32 dx, f32 w, f32 dy, f32 h)$/;"	f	file:
aabb_overlap	src/rituals_math.cpp	/^static inline void aabb_overlap(AABB a, AABB b, Vec2* s)$/;"	f	file:
aabb_overlap_v2	src/rituals_math.cpp	/^static inline Vec2 aabb_overlap_v2(AABB a, AABB b)$/;"	f	file:
aabb_to_rect	src/rituals_math.cpp	/^static inline Rect2 aabb_to_rect(AABB b)$/;"	f	file:
acceleration	src/rituals_particles.cpp	/^	Vec3 acceleration;$/;"	m	struct:Particle_Style	file:
accept_newlines	src/rituals_gui.cpp	/^	bool accept_newlines;$/;"	m	struct:Gui_Text_Input_Handle	file:
accept_tabs	src/rituals_gui.cpp	/^	bool accept_tabs;$/;"	m	struct:Gui_Text_Input_Handle	file:
accumulator	src/rituals_game_states.cpp	/^	real accumulator = 0;$/;"	m	struct:Play_State	file:
active	src/rituals_gui.cpp	/^	bool active;$/;"	m	struct:Gui_Text_Input_Handle	file:
add_animation	src/rituals_animations.cpp	/^isize add_animation(Animated_Sprite* s, Animation* a) $/;"	f
add_tile_info	src/rituals_game_registry.cpp	/^Tile_Info* add_tile_info($/;"	f
alert_dist	src/rituals_game_info.cpp	/^    f32 alert_dist;$/;"	m	struct:Rituals_Enemy_Userdata	file:
align	src/wb_alloc.h	/^	isize align;$/;"	m	struct:MemoryArena
align	src/wb_alloc.h	/^	usize arenaSize, align;$/;"	m	struct:TaggedHeap
alignTo	src/wb_alloc.h	/^isize alignTo(usize x, usize align)$/;"	f
alloc	src/wb_alloc.h	/^	MemoryArena* alloc;$/;"	m	struct:MemoryPool
amount	src/rituals_game_info.cpp	/^    isize amount;$/;"	m	struct:Rituals_Health_Pickup_Userdata	file:
amount	src/rituals_game_info.cpp	/^    isize amount;$/;"	m	struct:Rituals_Prop_Userdata	file:
angle	src/render.cpp	/^	f32 angle;$/;"	m	struct:wSprite	file:
angle	src/rituals_animations.cpp	/^	f32 angle;$/;"	m	struct:Animation_Frame	file:
angle	src/rituals_particles.cpp	/^	f32 angle;$/;"	m	struct:Particle	file:
angle_max	src/rituals_particles.cpp	/^	f32 angle_max;$/;"	m	struct:Particle_Style	file:
angle_min	src/rituals_particles.cpp	/^	f32 angle_min;$/;"	m	struct:Particle_Style	file:
angle_vel_max	src/rituals_particles.cpp	/^	f32 angle_vel_max;$/;"	m	struct:Particle_Style	file:
angle_vel_min	src/rituals_particles.cpp	/^	f32 angle_vel_min;$/;"	m	struct:Particle_Style	file:
angular_vel	src/rituals_particles.cpp	/^	f32 angular_vel;$/;"	m	struct:Particle	file:
anim	src/rituals_world_area.cpp	/^	Animated_Sprite* anim;$/;"	m	struct:Entity	file:
animated_sprite_update	src/rituals_animations.cpp	/^void animated_sprite_update(Animated_Sprite* s, f32 timestep)$/;"	f
animations	src/rituals_animations.cpp	/^	Animation** animations;$/;"	m	struct:Animated_Sprite	file:
animations_capacity	src/rituals_animations.cpp	/^	isize animations_count, animations_capacity;$/;"	m	struct:Animated_Sprite	file:
animations_count	src/rituals_animations.cpp	/^	isize animations_count, animations_capacity;$/;"	m	struct:Animated_Sprite	file:
append_input_text	src/rituals_input.cpp	/^isize append_input_text(Game_Input* input, char* str, isize str_cap, isize str_len, isize insert_from_end, MemoryArena* tempArena)$/;"	f
area_stubs	src/rituals_world.cpp	/^	World_Area_Stub* area_stubs;$/;"	m	struct:World	file:
areas_capacity	src/rituals_world.cpp	/^	isize areas_count, areas_capacity;$/;"	m	struct:World	file:
areas_count	src/rituals_world.cpp	/^	isize areas_count, areas_capacity;$/;"	m	struct:World	file:
areas_height	src/rituals_world.cpp	/^	isize areas_width, areas_height;$/;"	m	struct:World	file:
areas_width	src/rituals_world.cpp	/^	isize areas_width, areas_height;$/;"	m	struct:World	file:
arenaBootstrap	src/wb_alloc.h	/^MemoryArena* arenaBootstrap(MemoryInfo info, isize flags)$/;"	f
arenaClear	src/wb_alloc.h	/^void arenaClear(MemoryArena* arena)$/;"	f
arenaDestroy	src/wb_alloc.h	/^void arenaDestroy(MemoryArena* arena)$/;"	f
arenaEndTemp	src/wb_alloc.h	/^void arenaEndTemp(MemoryArena* arena)$/;"	f
arenaFixedSizeBootstrap	src/wb_alloc.h	/^MemoryArena* arenaFixedSizeBootstrap(void* buffer, usize size,$/;"	f
arenaFixedSizeInit	src/wb_alloc.h	/^void arenaFixedSizeInit(MemoryArena* arena, $/;"	f
arenaInit	src/wb_alloc.h	/^void arenaInit(MemoryArena* arena, MemoryInfo info, isize flags)$/;"	f
arenaPop	src/wb_alloc.h	/^void arenaPop(MemoryArena* arena)$/;"	f
arenaPush	src/wb_alloc.h	/^T* arenaPush(MemoryArena* arena)$/;"	f
arenaPush	src/wb_alloc.h	/^void* arenaPush(MemoryArena* arena, isize size)$/;"	f
arenaPushEx	src/wb_alloc.h	/^T* arenaPushEx(MemoryArena* arena, $/;"	f
arenaPushEx	src/wb_alloc.h	/^void* arenaPushEx(MemoryArena* arena, isize size, $/;"	f
arenaSize	src/wb_alloc.h	/^	usize arenaSize, align;$/;"	m	struct:TaggedHeap
arenaStartTemp	src/wb_alloc.h	/^void arenaStartTemp(MemoryArena* arena)$/;"	f
arenas	src/wb_alloc.h	/^	wbi__TaggedHeapArena* arenas[ALLOC_TAGGEDHEAP_MAX_TAG_COUNT];$/;"	m	struct:TaggedHeap
attack	src/rituals_world_area.cpp	/^	i32 attack;$/;"	m	struct:Entity	file:
attack_interval	src/rituals_world_area.cpp	/^	f32 attack_interval;$/;"	m	struct:Entity	file:
attack_timer	src/rituals_world_area.cpp	/^	f32 attack_timer;$/;"	m	struct:Entity	file:
axis	src/rituals_gui.cpp	/^	isize axis;$/;"	m	struct:Gui_Context	file:
b	src/render.c	/^	f32 l, b, r, t;$/;"	m	struct:wSpriteList	file:
b	src/render.cpp	/^	f32 l, b, r, t;$/;"	m	struct:wSpriteList	file:
b	src/rituals_world_area.cpp	/^	Entity* b;$/;"	m	struct:Hitbox_Contact	file:
b_id	src/rituals_simulation.cpp	/^	isize b_id;$/;"	m	struct:Sim_Contact	file:
b_id	src/rituals_world_area.cpp	/^	isize b_id;$/;"	m	struct:Hitbox_Contact	file:
baseArena	src/rituals_game.cpp	/^	MemoryArena* baseArena;$/;"	m	struct:Game_Main	file:
base_path	src/rituals_game.cpp	/^	const char* base_path;$/;"	m	struct:Game_Main	file:
base_path_length	src/rituals_game.cpp	/^	isize base_path_length;$/;"	m	struct:Game_Main	file:
base_style	src/rituals_world.cpp	/^	Particle_Style base_style;$/;"	m	struct:World	file:
bat	src/rituals_game_info.cpp	/^        Rituals_Bat_Userdata bat;$/;"	m	union:Rituals_Enemy_Userdata::__anon1	file:
biome	src/rituals_world_area.cpp	/^	World_Area_Biome biome;$/;"	m	struct:World_Area_Stub	file:
blank	src/render.c	/^	i32 blank;$/;"	m	struct:wRenderGroup	file:
blank	src/render.cpp	/^	i32 blank;$/;"	m	struct:wRenderGroup	file:
bodies	src/rituals_simulation.cpp	/^	Sim_Body* bodies;$/;"	m	struct:Simulator	file:
bodies_capacity	src/rituals_simulation.cpp	/^	isize bodies_count, bodies_capacity, next_body_id;$/;"	m	struct:Simulator	file:
bodies_count	src/rituals_simulation.cpp	/^	isize bodies_count, bodies_capacity, next_body_id;$/;"	m	struct:Simulator	file:
body	src/rituals_simulation.cpp	/^	Sim_Body* body;$/;"	m	struct:Sim_Grid_Cell	file:
body	src/rituals_world_area.cpp	/^	Sim_Body* body;$/;"	m	struct:Entity	file:
body_group	src/rituals_game_info.cpp	/^	u64 body_group;$/;"	m	struct:Tile_Info	file:
body_id	src/rituals_world_area.cpp	/^	isize body_id;$/;"	m	struct:Entity	file:
body_mask	src/rituals_game_info.cpp	/^	u64 body_mask;$/;"	m	struct:Tile_Info	file:
body_sort_on_x	src/rituals_simulation.cpp	/^void body_sort_on_x(Sim_Body* bodies, isize count)$/;"	f
body_sort_on_y	src/rituals_simulation.cpp	/^void body_sort_on_y(Sim_Body* bodies, isize count)$/;"	f
bottom_texture	src/rituals_game_info.cpp	/^	Rect2i bottom_texture;$/;"	m	struct:Tile_Info	file:
box	src/rituals_world_area.cpp	/^	AABB box;$/;"	m	struct:Hitbox	file:
break_to_id	src/rituals_game_info.cpp	/^	isize break_to_id;$/;"	m	struct:Tile_Info	file:
break_to_name	src/rituals_game_info.cpp	/^	char* break_to_name;$/;"	m	struct:Tile_Info	file:
buffer	src/rituals_gui.cpp	/^	char* buffer;$/;"	m	struct:Gui_Text_Input_Handle	file:
buffer	src/wb_alloc.h	/^	char buffer;$/;"	m	struct:wbi__TaggedHeapArena
bufferMemory	src/wb_alloc.h	/^	wbi__u64 bufferMemory;$/;"	m	struct:sysinfo
buffer_capacity	src/rituals_gui.cpp	/^	isize buffer_length, buffer_capacity;$/;"	m	struct:Gui_Text_Input_Handle	file:
buffer_length	src/rituals_gui.cpp	/^	isize buffer_length, buffer_capacity;$/;"	m	struct:Gui_Text_Input_Handle	file:
build_static_grid	src/rituals_simulation.cpp	/^void build_static_grid(Sim_Static_Grid* grid, Sim_Body* bodies, isize count)$/;"	f
calcTaggedHeapSize	src/wb_alloc.h	/^isize calcTaggedHeapSize(isize arenaSize, isize arenaCount,$/;"	f
capacity	src/render.c	/^	i32 count, capacity;$/;"	m	struct:wRenderGroup	file:
capacity	src/render.cpp	/^	i32 count, capacity;$/;"	m	struct:wRenderGroup	file:
capacity	src/wb_alloc.h	/^	isize count, capacity;$/;"	m	struct:MemoryPool
capture_newlines	src/rituals_input.cpp	/^	bool capture_newlines;$/;"	m	struct:Game_Input	file:
capture_tabs	src/rituals_input.cpp	/^	bool capture_tabs;$/;"	m	struct:Game_Input	file:
cell_storage	src/rituals_simulation.cpp	/^	Sim_Grid_Cell* cell_storage;$/;"	m	struct:Sim_Static_Grid	file:
cell_storage_capacity	src/rituals_simulation.cpp	/^	isize cell_storage_count, cell_storage_capacity;$/;"	m	struct:Sim_Static_Grid	file:
cell_storage_count	src/rituals_simulation.cpp	/^	isize cell_storage_count, cell_storage_capacity;$/;"	m	struct:Sim_Static_Grid	file:
cells	src/rituals_simulation.cpp	/^	Sim_Grid_Cell** cells;$/;"	m	struct:Sim_Static_Grid	file:
cells_length	src/rituals_simulation.cpp	/^	isize cells_length;$/;"	m	struct:Sim_Static_Grid	file:
center	src/render.cpp	/^	union { Vec2 center; struct{f32 cx, cy;};};$/;"	m	union:wSprite::__anon5	file:
center	src/rituals_math.cpp	/^		Vec2 center;$/;"	m	struct:AABB::__anon9	file:
character_padding	src/rituals_gui.cpp	/^	i32 character_padding;$/;"	m	struct:Spritefont	file:
chase_speed_modifier	src/rituals_game_info.cpp	/^    f32 chase_speed_modifier;$/;"	m	struct:Rituals_Snake_Userdata	file:
check_dir	src/rituals_serialization.cpp	/^void check_dir(char* dir)$/;"	f
check_gl_attributes	src/rituals_game.cpp	/^	bool check_gl_attributes;$/;"	m	struct:Platform	file:
check_path	src/rituals_serialization.cpp	/^int check_path(char* path)$/;"	f
clamp	src/rituals_math.cpp	/^inline f32 clamp(f32 x, f32 min, f32 max)$/;"	f
clamp_01	src/rituals_math.cpp	/^f32 clamp_01(f32 x)$/;"	f
clearOnDraw	src/render.c	/^	i32 clearOnDraw;$/;"	m	struct:wRenderGroup	file:
clearOnDraw	src/render.cpp	/^	i32 clearOnDraw;$/;"	m	struct:wRenderGroup	file:
collision_vel	src/rituals_simulation.cpp	/^	Vec2 velocity, force, collision_vel;$/;"	m	struct:Sim_Body	file:
color	src/render.c	/^	u32 color;$/;"	m	struct:wSprite	file:
color	src/render.c	/^	u32 color;$/;"	m	struct:wVertex	file:
color	src/render.cpp	/^	u32 color;$/;"	m	struct:wSprite	file:
color	src/render.cpp	/^	u32 color;$/;"	m	struct:wVertex	file:
color	src/rituals_animations.cpp	/^	Vec4 color;$/;"	m	struct:Animation_Frame	file:
color	src/rituals_gui.cpp	/^	Vec4 color;$/;"	m	struct:Spritefont	file:
color	src/rituals_particles.cpp	/^	u32 color;$/;"	m	struct:Particle_Style	file:
commitFlags	src/wb_alloc.h	/^	isize commitFlags;$/;"	m	struct:MemoryInfo
commitSize	src/wb_alloc.h	/^	usize totalMemory, commitSize, pageSize;$/;"	m	struct:MemoryInfo
contacts	src/rituals_simulation.cpp	/^	Sim_Contact* contacts;$/;"	m	struct:Simulator	file:
contacts_capacity	src/rituals_simulation.cpp	/^	isize contacts_count, contacts_capacity;$/;"	m	struct:Simulator	file:
contacts_count	src/rituals_simulation.cpp	/^	isize contacts_count, contacts_capacity;$/;"	m	struct:Simulator	file:
contains	src/rituals_game_info.cpp	/^    Rituals_Entity_Kinds contains;$/;"	m	struct:Rituals_Prop_Userdata	file:
copy_particle_style	src/rituals_particles.cpp	/^Particle_Style copy_particle_style(Particle_Style s,$/;"	f
count	src/render.c	/^	i32 count, capacity;$/;"	m	struct:wRenderGroup	file:
count	src/render.c	/^	i32 start, count;$/;"	m	struct:wSpriteList	file:
count	src/render.cpp	/^	i32 count, capacity;$/;"	m	struct:wRenderGroup	file:
count	src/render.cpp	/^	i32 start, count;$/;"	m	struct:wSpriteList	file:
count	src/rituals_game_info.cpp	/^    isize id, count;$/;"	m	struct:Rituals_Item_Pickup_Userdata	file:
count	src/wb_alloc.h	/^	isize count, capacity;$/;"	m	struct:MemoryPool
counter	src/rituals_world_area.cpp	/^	i32 counter;$/;"	m	struct:Entity	file:
current_animation	src/rituals_animations.cpp	/^	isize current_animation, current_frame;$/;"	m	struct:Animated_Sprite	file:
current_area	src/rituals_world.cpp	/^	World_Area* current_area;$/;"	m	struct:World	file:
current_frame	src/rituals_animations.cpp	/^	isize current_animation, current_frame;$/;"	m	struct:Animated_Sprite	file:
current_time	src/rituals_game_states.cpp	/^	usize current_time = 0, prev_time = 0;$/;"	m	struct:Play_State	file:
cursor	src/rituals_gui.cpp	/^	isize cursor, selection_start;$/;"	m	struct:Gui_Text_Input_Handle	file:
cx	src/render.c	/^	f32 x, y, w, h, cx, cy;$/;"	m	struct:wSprite	file:
cx	src/render.cpp	/^	union { Vec2 center; struct{f32 cx, cy;};};$/;"	m	struct:wSprite::__anon5::__anon6	file:
cy	src/render.c	/^	f32 x, y, w, h, cx, cy;$/;"	m	struct:wSprite	file:
cy	src/render.cpp	/^	union { Vec2 center; struct{f32 cx, cy;};};$/;"	m	struct:wSprite::__anon5::__anon6	file:
damage	src/rituals_game_info.cpp	/^	i32 damage;$/;"	m	struct:Tile_State	file:
damping	src/rituals_simulation.cpp	/^	f32 inv_mass, restitution, damping;$/;"	m	struct:Sim_Body	file:
dec_str_to_int	src/rituals_gui.cpp	/^static inline i32 dec_str_to_int(char* str, isize len)$/;"	f	file:
delete_file	src/rituals_serialization.cpp	/^int delete_file(char* path, isize path_length, char* file)$/;"	f
delete_folder	src/rituals_serialization.cpp	/^int delete_folder(char* path, isize path_length)$/;"	f
delete_index	src/rituals_game_states.cpp	/^	isize delete_index;$/;"	m	struct:Menu_State	file:
delete_world_on_stop	src/rituals_game_states.cpp	/^	bool delete_world_on_stop;$/;"	m	struct:Play_State	file:
deserialize_world	src/rituals_serialization.cpp	/^void deserialize_world(World* world, FILE* world_file)$/;"	f
diff1	src/rituals_math.cpp	/^	Vec2 diff1;$/;"	m	struct:Rect2_Clip_Info	file:
diff2	src/rituals_math.cpp	/^	Vec2 diff2;$/;"	m	struct:Rect2_Clip_Info	file:
direction	src/rituals_world_area.cpp	/^	Direction direction;$/;"	m	struct:Entity	file:
display_index	src/rituals_game.cpp	/^	i32 display_index;$/;"	m	struct:Platform	file:
dpi	src/render.c	/^	f32 dpi;$/;"	m	struct:wRenderGroup	file:
dpi	src/render.cpp	/^	f32 dpi;$/;"	m	struct:wRenderGroup	file:
dwActiveProcessorMask	src/wb_alloc.h	/^  DWORD_PTR dwActiveProcessorMask;$/;"	m	struct:_SYSTEM_INFO
dwAllocationGranularity	src/wb_alloc.h	/^  DWORD     dwAllocationGranularity;$/;"	m	struct:_SYSTEM_INFO
dwNumberOfProcessors	src/wb_alloc.h	/^  DWORD     dwNumberOfProcessors;$/;"	m	struct:_SYSTEM_INFO
dwOemId	src/wb_alloc.h	/^    DWORD  dwOemId;$/;"	m	union:_SYSTEM_INFO::__anon1
dwPageSize	src/wb_alloc.h	/^  DWORD     dwPageSize;$/;"	m	struct:_SYSTEM_INFO
dwProcessorType	src/wb_alloc.h	/^  DWORD     dwProcessorType;$/;"	m	struct:_SYSTEM_INFO
e	src/rituals_math.cpp	/^	f32 e[2];$/;"	m	union:Vec2	file:
e	src/rituals_math.cpp	/^	f32 e[3];$/;"	m	union:Vec3	file:
e	src/rituals_math.cpp	/^	f32 e[4];$/;"	m	union:AABB	file:
e	src/rituals_math.cpp	/^	f32 e[4];$/;"	m	union:Rect2	file:
e	src/rituals_math.cpp	/^	f32 e[4];$/;"	m	union:Vec4	file:
e	src/rituals_math.cpp	/^	i32 e[2];$/;"	m	union:Vec2i	file:
e	src/rituals_math.cpp	/^	i32 e[3];$/;"	m	union:Vec3i	file:
e	src/rituals_math.cpp	/^	i32 e[4];$/;"	m	union:Vec4i	file:
east	src/rituals_world_area.cpp	/^	Area_Link east;$/;"	m	struct:World_Area_Stub	file:
elementSize	src/wb_alloc.h	/^	usize elementSize; $/;"	m	struct:MemoryPool
emitter	src/rituals_world.cpp	/^	Emitter emitter;$/;"	m	struct:World	file:
emitter_render	src/rituals_particles.cpp	/^void emitter_render(Emitter* e, Simulator* sim, f32 dt)$/;"	f
emitter_spawn	src/rituals_particles.cpp	/^void emitter_spawn(Emitter* e, Vec3 pos, Vec2 angle_range, isize count, Particle_Style style) $/;"	f
end	src/wb_alloc.h	/^	void *head, *end;$/;"	m	struct:wbi__TaggedHeapArena
end	src/wb_alloc.h	/^	void *start, *head, *end;$/;"	m	struct:MemoryArena
enemy	src/rituals_game_info.cpp	/^    Rituals_Enemy_Userdata enemy;$/;"	m	union:Rituals_Entity_Userdata	file:
entities	src/rituals_world_area.cpp	/^	Entity* entities;$/;"	m	struct:World_Area	file:
entities_capacity	src/rituals_world_area.cpp	/^	isize entities_count, entities_capacity, next_entity_id;$/;"	m	struct:World_Area	file:
entities_count	src/rituals_world_area.cpp	/^	isize entities_count, entities_capacity, next_entity_id;$/;"	m	struct:World_Area	file:
entities_dirty	src/rituals_world_area.cpp	/^	bool entities_dirty;$/;"	m	struct:World_Area	file:
entity	src/rituals_simulation.cpp	/^	Entity* entity;$/;"	m	struct:Sim_Body	file:
entity_id	src/rituals_simulation.cpp	/^	isize entity_id;$/;"	m	struct:Sim_Body	file:
entity_id_cmp	src/rituals_world_area.cpp	/^i32 entity_id_cmp(const void* a, const void* b)$/;"	f
error	src/rituals_game_states.cpp	/^	i32 error;$/;"	m	struct:Menu_State	file:
error	src/rituals_game_states.cpp	/^	i32 error;$/;"	m	struct:None_State	file:
error	src/rituals_game_states.cpp	/^	i32 error;$/;"	m	struct:Play_State	file:
events	src/rituals_world_area.cpp	/^	u64 events;$/;"	m	struct:Entity	file:
extents_to_aabb	src/rituals_math.cpp	/^static inline AABB extents_to_aabb(Vec2 tl, Vec2 br)$/;"	f	file:
extents_to_aabb	src/rituals_math.cpp	/^static inline AABB extents_to_aabb(f32 left, f32 top, f32 right, f32 bottom)$/;"	f	file:
f	src/rituals_defines.h	/^	f32 f[4];$/;"	m	union:vf32x4
f32	src/rituals_defines.h	/^typedef float f32;$/;"	t
f32	src/rituals_sort_macros.cpp	/^_generate_sort_and_search_for_numeric_type(f32);$/;"	v
f64	src/rituals_defines.h	/^typedef double f64;$/;"	t
facing	src/rituals_world_area.cpp	/^	i32 facing;$/;"	m	struct:Entity	file:
flags	src/render.c	/^	i32 flags;$/;"	m	struct:wSprite	file:
flags	src/render.cpp	/^	i32 flags;$/;"	m	struct:wSprite	file:
flags	src/rituals_simulation.cpp	/^	u64 flags;$/;"	m	struct:Sim_Body	file:
flags	src/rituals_world_area.cpp	/^	u64 flags;$/;"	m	struct:Entity	file:
flags	src/wb_alloc.h	/^	isize flags;$/;"	m	struct:MemoryArena
flags	src/wb_alloc.h	/^	isize flags;$/;"	m	struct:MemoryPool
flags	src/wb_alloc.h	/^	isize flags;$/;"	m	struct:TaggedHeap
follow_dist	src/rituals_game_info.cpp	/^    f32 follow_dist;$/;"	m	struct:Rituals_Enemy_Userdata	file:
force	src/rituals_simulation.cpp	/^	Vec2 velocity, force, collision_vel;$/;"	m	struct:Sim_Body	file:
fps	src/rituals_animations.cpp	/^	f32 fps;$/;"	m	struct:Animation	file:
frag	src/render.c	/^	u32 vert, frag, program;$/;"	m	struct:wShader	file:
frag	src/render.cpp	/^	u32 vert, frag, program;$/;"	m	struct:wShader	file:
frag_shader	src/rituals_game.cpp	/^	const char* frag_shader;$/;"	m	struct:Platform	file:
frame	src/rituals_particles.cpp	/^	i32 frame;$/;"	m	struct:Particle	file:
frame_max	src/rituals_particles.cpp	/^	i32 frame_max;$/;"	m	struct:Particle_Style	file:
frame_min	src/rituals_particles.cpp	/^	i32 frame_min;$/;"	m	struct:Particle_Style	file:
framerate	src/rituals_particles.cpp	/^	i32 framerate;$/;"	m	struct:Particle_Style	file:
frames	src/rituals_animations.cpp	/^	Animation_Frame* frames;$/;"	m	struct:Animation	file:
frames_capacity	src/rituals_animations.cpp	/^	isize frames_count, frames_capacity;$/;"	m	struct:Animation	file:
frames_count	src/rituals_animations.cpp	/^	isize frames_count, frames_capacity;$/;"	m	struct:Animation	file:
freeHigh	src/wb_alloc.h	/^	wbi__u64 freeHigh;$/;"	m	struct:sysinfo
freeList	src/wb_alloc.h	/^	void** freeList;$/;"	m	struct:MemoryPool
freeMemory	src/wb_alloc.h	/^	wbi__u64 freeMemory;$/;"	m	struct:sysinfo
freeSwap	src/wb_alloc.h	/^	wbi__u64 freeSwap;$/;"	m	struct:sysinfo
friction	src/rituals_game_info.cpp	/^	f32 friction;$/;"	m	struct:Tile_Info	file:
gameArena	src/rituals_game.cpp	/^	MemoryArena* gameArena;$/;"	m	struct:Game_Main	file:
game_calc_mouse_pos	src/rituals_game.cpp	/^void game_calc_mouse_pos(Vec2 offset)$/;"	f
game_free_Menu_state	src/rituals_game_states.cpp	/^void game_free_Menu_state()$/;"	f
game_free_None_state	src/rituals_game_states.cpp	/^void game_free_None_state()$/;"	f
game_free_Play_state	src/rituals_game_states.cpp	/^void game_free_Play_state()$/;"	f
game_init	src/rituals_game.cpp	/^i32 game_init(Platform* platform)$/;"	f
game_init_Menu_state	src/rituals_game_states.cpp	/^void game_init_Menu_state()$/;"	f
game_init_None_state	src/rituals_game_states.cpp	/^void game_init_None_state()$/;"	f
game_init_Play_state	src/rituals_game_states.cpp	/^void game_init_Play_state()$/;"	f
game_scale	src/rituals_game.cpp	/^	f32 game_scale;$/;"	m	struct:Platform	file:
game_set_scale	src/rituals_game.cpp	/^void game_set_scale(f32 scale)$/;"	f
game_start	src/rituals_game.cpp	/^i32 game_start(Platform* platform, Game_Main* game)$/;"	f
game_start_Menu_state	src/rituals_game_states.cpp	/^void game_start_Menu_state()$/;"	f
game_start_None_state	src/rituals_game_states.cpp	/^void game_start_None_state()$/;"	f
game_start_Play_state	src/rituals_game_states.cpp	/^void game_start_Play_state()$/;"	f
game_stop_Menu_state	src/rituals_game_states.cpp	/^void game_stop_Menu_state()$/;"	f
game_stop_None_state	src/rituals_game_states.cpp	/^void game_stop_None_state()$/;"	f
game_stop_Play_state	src/rituals_game_states.cpp	/^void game_stop_Play_state()$/;"	f
game_switch_state	src/rituals_game.cpp	/^void game_switch_state(i32 state)$/;"	f
game_update_Menu_state	src/rituals_game_states.cpp	/^void game_update_Menu_state()$/;"	f
game_update_None_state	src/rituals_game_states.cpp	/^void game_update_None_state()$/;"	f
game_update_Play_state	src/rituals_game_states.cpp	/^void game_update_Play_state()$/;"	f
game_update_screen	src/rituals_game.cpp	/^void game_update_screen()$/;"	f
generate_statics_for_tilemap	src/rituals_simulation.cpp	/^void generate_statics_for_tilemap(Game_Registry* Registry, Simulator* sim, Tilemap* tilemap, MemoryArena* tempArena)$/;"	f
generate_tilemap	src/rituals_tilemap.cpp	/^void generate_tilemap(Tilemap* tilemap, u64 seed)$/;"	f
generate_world	src/rituals_world.cpp	/^void generate_world(char* name, World* world)$/;"	f
generate_world_area	src/rituals_world.cpp	/^void generate_world_area(Game_Registry* Registry, World* world, World_Area* area, World_Area_Stub* stub)$/;"	f
getMemoryInfo	src/wb_alloc.h	/^MemoryInfo getMemoryInfo()$/;"	f
get_area_file	src/rituals_serialization.cpp	/^FILE* get_area_file(const char* name, isize id, const char* mode)$/;"	f
get_next_grid_cell	src/rituals_simulation.cpp	/^Sim_Grid_Cell* get_next_grid_cell(Sim_Static_Grid* grid)$/;"	f
get_world_file	src/rituals_serialization.cpp	/^FILE* get_world_file(const char* name, const char* mode)$/;"	f
glIndex	src/render.c	/^	u32 glIndex;$/;"	m	struct:wTexture	file:
glIndex	src/render.cpp	/^	u32 glIndex;$/;"	m	struct:wTexture	file:
globalWorld	src/rituals_main.cpp	/^World* globalWorld;$/;"	v
global_player_body	src/rituals_world.cpp	/^	Sim_Body global_player_body;$/;"	m	struct:World	file:
global_player_entity	src/rituals_world.cpp	/^	Entity global_player_entity;$/;"	m	struct:World	file:
glyph_height	src/rituals_gui.cpp	/^	i32 glyph_width, glyph_height;$/;"	m	struct:Spritefont	file:
glyph_width	src/rituals_gui.cpp	/^	i32 glyph_width, glyph_height;$/;"	m	struct:Spritefont	file:
glyphs	src/rituals_gui.cpp	/^	const Rect2* glyphs;$/;"	m	struct:Spritefont	file:
goblin_knight	src/rituals_game_info.cpp	/^        Rituals_Goblin_Knight_Userdata goblin_knight;$/;"	m	union:Rituals_Enemy_Userdata::__anon1	file:
grid	src/rituals_simulation.cpp	/^	Sim_Static_Grid* grid;$/;"	m	struct:Simulator	file:
ground_restitution	src/rituals_particles.cpp	/^	f32 ground_restitution;$/;"	m	struct:Particle_Style	file:
group	src/rituals_simulation.cpp	/^	u64 group;$/;"	m	struct:Sim_Body	file:
group	src/rituals_world_area.cpp	/^	u64 group;$/;"	m	struct:Hitbox	file:
groupProcessSprites	src/render.c	/^void groupProcessSprites(f32 width, f32 height, wRenderGroup* group)$/;"	f	file:
groupProcessSprites	src/render.cpp	/^void groupProcessSprites(f32 width, f32 height, wRenderGroup* group)$/;"	f	file:
gui_add_button	src/rituals_gui.cpp	/^bool gui_add_button(Vec2 position, char* text)$/;"	f
gui_add_button	src/rituals_gui.cpp	/^bool gui_add_button(Vec2 position, char* text, Vec2 minimum_size)$/;"	f
gui_add_checkbox	src/rituals_gui.cpp	/^bool gui_add_checkbox(Vec2 position, char* text, bool* value)$/;"	f
gui_add_slider	src/rituals_gui.cpp	/^void gui_add_slider(Vec2 position, Vec2 size, char* label, f32 min, f32 max, int precision, f32* in_value, bool* active, bool show_bounds = false)$/;"	f
gui_add_text_input	src/rituals_gui.cpp	/^void gui_add_text_input(Gui_Text_Input_Handle* handle, Vec2 position, Vec2 size, char* default_text=NULL)$/;"	f
gui_query_mouse	src/rituals_gui.cpp	/^bool gui_query_mouse(Rect2 region, Vec2 parent)$/;"	f
h	src/render.c	/^	f32 x, y, w, h, cx, cy;$/;"	m	struct:wSprite	file:
h	src/render.c	/^	i32 w, h;$/;"	m	struct:wTexture	file:
h	src/render.cpp	/^	i32 w, h;$/;"	m	struct:wTexture	file:
h	src/render.cpp	/^	union { Vec2 size; struct{f32 w, h;};};$/;"	m	struct:wSprite::__anon3::__anon4	file:
h	src/rituals_math.cpp	/^		f32 x, y, w, h;$/;"	m	struct:Rect2::__anon7	file:
h	src/rituals_math.cpp	/^	i16 x, y, w, h;$/;"	m	struct:Rect2i	file:
h	src/rituals_tilemap.cpp	/^	isize w, h;$/;"	m	struct:Tilemap	file:
hTiSz	src/rituals_game_registry.cpp	30;"	d	file:
handle	src/rituals_game_states.cpp	/^	Gui_Text_Input_Handle handle;$/;"	m	struct:Menu_State	file:
has_bottom_texture	src/rituals_game_info.cpp	/^	bool has_bottom_texture;$/;"	m	struct:Tile_Info	file:
has_top_texture	src/rituals_game_info.cpp	/^	bool has_top_texture;$/;"	m	struct:Tile_Info	file:
hash	src/rituals_game_info.cpp	/^	usize hash;$/;"	m	struct:Tile_Info	file:
head	src/wb_alloc.h	/^	void *head, *end;$/;"	m	struct:wbi__TaggedHeapArena
head	src/wb_alloc.h	/^	void *start, *head, *end;$/;"	m	struct:MemoryArena
heal_cooldown	src/rituals_game_info.cpp	/^    f32 heal_cooldown;$/;"	m	struct:Rituals_Player_Userdata	file:
heal_rate	src/rituals_game_info.cpp	/^    i32 heal_rate;$/;"	m	struct:Rituals_Player_Userdata	file:
heal_timer	src/rituals_game_info.cpp	/^    f32 heal_timer;$/;"	m	struct:Rituals_Player_Userdata	file:
heal_to_interval	src/rituals_game_info.cpp	/^    i32 heal_to_interval;$/;"	m	struct:Rituals_Player_Userdata	file:
health	src/rituals_game_info.cpp	/^    Rituals_Health_Pickup_Userdata health;$/;"	m	struct:Rituals_Pickup_Userdata	file:
health	src/rituals_world_area.cpp	/^	i32 health;$/;"	m	struct:Entity	file:
held_entity_id	src/rituals_game_info.cpp	/^    isize held_entity_id;$/;"	m	struct:Rituals_Player_Userdata	file:
hex_to_v4	src/rituals_math.cpp	/^static inline Vec4 hex_to_v4(u32 rgba)$/;"	f	file:
hext	src/rituals_math.cpp	/^				Vec2 hext;$/;"	m	struct:AABB::__anon9::__anon10::__anon12	file:
hh	src/rituals_math.cpp	/^				f32 hw, hh;$/;"	m	struct:AABB::__anon9::__anon10::__anon11	file:
hitbox	src/rituals_world_area.cpp	/^	Hitbox hitbox;$/;"	m	struct:Entity	file:
hitbox_contacts	src/rituals_world_area.cpp	/^	Hitbox_Contact* hitbox_contacts;$/;"	m	struct:World_Area	file:
hitbox_contacts_capacity	src/rituals_world_area.cpp	/^	isize hitbox_contacts_count, hitbox_contacts_capacity;$/;"	m	struct:World_Area	file:
hitbox_contacts_count	src/rituals_world_area.cpp	/^	isize hitbox_contacts_count, hitbox_contacts_capacity;$/;"	m	struct:World_Area	file:
hitbox_sort_axis	src/rituals_world_area.cpp	/^	i32 hitbox_sort_axis;$/;"	m	struct:World_Area	file:
hitboxes	src/rituals_world_area.cpp	/^	Hitbox* hitboxes;$/;"	m	struct:World_Area	file:
hitboxes_capacity	src/rituals_world_area.cpp	/^	isize hitboxes_count, hitboxes_capacity;$/;"	m	struct:World_Area	file:
hitboxes_count	src/rituals_world_area.cpp	/^	isize hitboxes_count, hitboxes_capacity;$/;"	m	struct:World_Area	file:
hw	src/rituals_math.cpp	/^				f32 hw, hh;$/;"	m	struct:AABB::__anon9::__anon10::__anon11	file:
i16	src/rituals_defines.h	/^typedef int16_t i16;$/;"	t
i32	src/rituals_defines.h	/^typedef int32_t i32;$/;"	t
i64	src/rituals_defines.h	/^typedef int64_t i64;$/;"	t
i8	src/rituals_defines.h	/^typedef int8_t i8;$/;"	t
id	src/rituals_animations.cpp	/^	isize id;$/;"	m	struct:Animation	file:
id	src/rituals_game_info.cpp	/^	isize id;$/;"	m	struct:Tile_Info	file:
id	src/rituals_game_info.cpp	/^	isize id;$/;"	m	struct:Tile_State	file:
id	src/rituals_game_info.cpp	/^    isize id, count;$/;"	m	struct:Rituals_Item_Pickup_Userdata	file:
id	src/rituals_particles.cpp	/^	i32 id;$/;"	m	struct:Particle_Style	file:
id	src/rituals_simulation.cpp	/^	isize id;$/;"	m	struct:Sim_Body	file:
id	src/rituals_world_area.cpp	/^	isize id;$/;"	m	struct:Entity	file:
id	src/rituals_world_area.cpp	/^	isize id;$/;"	m	struct:Hitbox	file:
id	src/rituals_world_area.cpp	/^	isize id;$/;"	m	struct:World_Area	file:
id	src/rituals_world_area.cpp	/^	isize id;$/;"	m	struct:World_Area_Stub	file:
immune_to_damage	src/rituals_game_info.cpp	/^	bool immune_to_damage;$/;"	m	struct:Tile_Info	file:
impulse_max	src/rituals_particles.cpp	/^	f32 impulse_max;$/;"	m	struct:Particle_Style	file:
impulse_min	src/rituals_particles.cpp	/^	f32 impulse_min;$/;"	m	struct:Particle_Style	file:
indices	src/render.c	/^	u16* indices;$/;"	m	struct:wRenderGroup	file:
indices	src/render.cpp	/^	u16* indices;$/;"	m	struct:wRenderGroup	file:
info	src/wb_alloc.h	/^	MemoryInfo info;$/;"	m	struct:MemoryArena
info	src/wb_alloc.h	/^	MemoryInfo info;$/;"	m	struct:TaggedHeap
init_animated_sprite	src/rituals_animations.cpp	/^void init_animated_sprite(Animated_Sprite* s, isize capacity, MemoryArena* arena)$/;"	f
init_animation	src/rituals_animations.cpp	/^void init_animation(Animation* a, f32 fps, isize capacity, MemoryArena* arena)$/;"	f
init_animation_frame	src/rituals_animations.cpp	/^void init_animation_frame(Animation_Frame* fr)$/;"	f
init_body	src/rituals_simulation.cpp	/^void init_body(Sim_Body* b)$/;"	f
init_emitter	src/rituals_particles.cpp	/^void init_emitter(Emitter* e, isize max_particles, MemoryArena* arena)$/;"	f
init_entity	src/rituals_world_area.cpp	/^void init_entity(Entity* entity)$/;"	f
init_particle	src/rituals_particles.cpp	/^void init_particle(Particle* p, Vec3 pos, Vec3 vel, f32 scale, f32 angle, f32 anglev, i32 frame, i32 time, i32 style_index)$/;"	f
init_random	src/rituals_random.cpp	/^void init_random(Random* r, u64 seed) $/;"	f
init_simulator	src/rituals_simulation.cpp	/^void init_simulator(Simulator* sim, isize cap, MemoryArena* arena)$/;"	f
init_spritefont	src/rituals_gui.cpp	/^void init_spritefont(Spritefont* font, const Rect2* glyphs)$/;"	f
init_static_grid	src/rituals_simulation.cpp	/^void init_static_grid(Sim_Static_Grid* grid, Vec2i size, isize capacity, MemoryArena* arena)$/;"	f
init_text_input_handle	src/rituals_gui.cpp	/^void init_text_input_handle(Gui_Text_Input_Handle* handle, char* buf, isize capacity, isize length)$/;"	f
init_text_input_handle	src/rituals_gui.cpp	/^void init_text_input_handle(Gui_Text_Input_Handle* handle, f32 width, Memory_Arena* arena)$/;"	f
init_tile_state	src/rituals_game_info.cpp	/^void init_tile_state(Tile_State* state, isize id)$/;"	f
init_tilemap	src/rituals_tilemap.cpp	/^void init_tilemap(Tilemap* tilemap, isize w, isize h, MemoryArena* arena)$/;"	f
init_world	src/rituals_world.cpp	/^void init_world(World* world, isize width, isize height, usize seed, MemoryArena* arena)$/;"	f
init_world_area	src/rituals_world_area.cpp	/^void init_world_area(World_Area* area, MemoryArena* arena)$/;"	f
input	src/rituals_game.cpp	/^	Game_Input* input; $/;"	m	struct:Game_Main	file:
input_init	src/rituals_input.cpp	/^void input_init(Game_Input* input, MemoryArena* arena)$/;"	f
input_text_append_char	src/rituals_input.cpp	/^void input_text_append_char(Game_Input* input, char c)$/;"	f
inv_fps	src/rituals_animations.cpp	/^	f32 inv_fps;$/;"	m	struct:Animation	file:
inv_mass	src/rituals_simulation.cpp	/^	f32 inv_mass, restitution, damping;$/;"	m	struct:Sim_Body	file:
is_valid_filename_char	src/rituals_game.cpp	/^bool is_valid_filename_char(char c)$/;"	f
isize	src/rituals_defines.h	/^typedef ptrdiff_t isize;$/;"	t
isize	src/wb_alloc.h	/^typedef isize isize;$/;"	t
isize	src/wb_alloc.h	/^typedef ptrdiff_t isize;$/;"	t
isizeof	src/rituals_defines.h	54;"	d
isz	src/rituals_defines.h	55;"	d
item	src/rituals_game_info.cpp	/^    Rituals_Item_Pickup_Userdata item;$/;"	m	struct:Rituals_Pickup_Userdata	file:
jitter_on_bounce_mag	src/rituals_particles.cpp	/^	f32 jitter_on_bounce_mag;$/;"	m	struct:Particle_Style	file:
keycodes	src/rituals_input.cpp	/^	i8* keycodes;$/;"	m	struct:Game_Input	file:
kind	src/render.c	/^	f32 kind;$/;"	m	struct:wVertex	file:
kind	src/render.cpp	/^	f32 kind;$/;"	m	struct:wVertex	file:
kind	src/rituals_game_info.cpp	/^    isize kind;$/;"	m	struct:Rituals_Enemy_Userdata	file:
kind	src/rituals_game_info.cpp	/^    isize kind;$/;"	m	struct:Rituals_Pickup_Userdata	file:
kind	src/rituals_world_area.cpp	/^	isize kind;$/;"	m	struct:Entity	file:
knockback	src/rituals_world_area.cpp	/^	f32 knockback;$/;"	m	struct:Entity	file:
l	src/render.c	/^	f32 l, b, r, t;$/;"	m	struct:wSpriteList	file:
l	src/render.cpp	/^	f32 l, b, r, t;$/;"	m	struct:wSpriteList	file:
lastFilled	src/wb_alloc.h	/^	isize lastFilled;$/;"	m	struct:MemoryPool
last_frame_time	src/rituals_game.cpp	/^	isize last_frame_time;$/;"	m	struct:Game_Main	file:
last_pos	src/rituals_gui.cpp	/^	Vec2 last_pos;$/;"	m	struct:Gui_Context	file:
lerp	src/rituals_math.cpp	/^f32 lerp(f32 a, f32 b, f32 t)$/;"	f
line_padding	src/rituals_gui.cpp	/^	i32 line_padding;$/;"	m	struct:Spritefont	file:
link	src/rituals_world_area.cpp	/^	World_Area_Stub* link;$/;"	m	struct:Area_Link	file:
loads	src/wb_alloc.h	/^	wbi__u64 loads[3];$/;"	m	struct:sysinfo
looping	src/rituals_animations.cpp	/^	bool looping;$/;"	m	struct:Animation	file:
lpMaximumApplicationAddress	src/wb_alloc.h	/^  LPVOID    lpMaximumApplicationAddress;$/;"	m	struct:_SYSTEM_INFO
lpMinimumApplicationAddress	src/wb_alloc.h	/^  LPVOID    lpMinimumApplicationAddress;$/;"	m	struct:_SYSTEM_INFO
mag	src/rituals_simulation.cpp	/^	f32 mag;$/;"	m	struct:Sim_Contact	file:
main	src/rituals_main.cpp	/^int main(int argc, char** argv)$/;"	f
make_animaiton_from_strip	src/rituals_animations.cpp	/^Animation* make_animaiton_from_strip(MemoryArena* arena, f32 fps, Rect2i frame, isize count) $/;"	f
make_particle_style	src/rituals_particles.cpp	/^Particle_Style make_particle_style($/;"	f
map	src/rituals_world_area.cpp	/^	Tilemap map;$/;"	m	struct:World_Area	file:
mask	src/rituals_simulation.cpp	/^	u64 mask;$/;"	m	struct:Sim_Body	file:
mask	src/rituals_world_area.cpp	/^	u64 mask;$/;"	m	struct:Hitbox	file:
max_chars_by_width	src/rituals_gui.cpp	/^	isize max_chars_by_width;$/;"	m	struct:Gui_Text_Input_Handle	file:
max_damage	src/rituals_game_info.cpp	/^	i32 max_damage;$/;"	m	struct:Tile_Info	file:
max_frames	src/rituals_particles.cpp	/^	i32 max_frames;$/;"	m	struct:Particle_Style	file:
memUnit	src/wb_alloc.h	/^	wbi__u32 memUnit;$/;"	m	struct:sysinfo
mode	src/rituals_game_info.cpp	/^    isize mode;$/;"	m	struct:Rituals_Enemy_Userdata	file:
modulus	src/rituals_math.cpp	/^static inline isize modulus(isize a, isize b)$/;"	f	file:
mouse	src/rituals_input.cpp	/^	i8* mouse;$/;"	m	struct:Game_Input	file:
mouse_pos	src/rituals_input.cpp	/^	Vec2 mouse_pos;$/;"	m	struct:Game_Input	file:
mouse_x	src/rituals_input.cpp	/^	i32 mouse_x;$/;"	m	struct:Game_Input	file:
mouse_y	src/rituals_input.cpp	/^	i32 mouse_y;$/;"	m	struct:Game_Input	file:
movement_modifier	src/rituals_game_info.cpp	/^	f32 movement_modifier;$/;"	m	struct:Tile_Info	file:
name	src/rituals_game_info.cpp	/^	const char* name;$/;"	m	struct:Tile_Info	file:
name	src/rituals_world.cpp	/^	char* name;$/;"	m	struct:World	file:
name	src/wb_alloc.h	/^	const char* name;$/;"	m	struct:MemoryArena
name	src/wb_alloc.h	/^	const char* name;$/;"	m	struct:MemoryPool
name	src/wb_alloc.h	/^	const char* name;$/;"	m	struct:TaggedHeap
next	src/rituals_simulation.cpp	/^	Sim_Grid_Cell* next;$/;"	m	struct:Sim_Grid_Cell	file:
next	src/wb_alloc.h	/^	wbi__TaggedHeapArena *next;$/;"	m	struct:wbi__TaggedHeapArena
next_area_id	src/rituals_world.cpp	/^	isize next_area_id;$/;"	m	struct:World	file:
next_body_id	src/rituals_simulation.cpp	/^	isize bodies_count, bodies_capacity, next_body_id;$/;"	m	struct:Simulator	file:
next_entity_id	src/rituals_world_area.cpp	/^	isize entities_count, entities_capacity, next_entity_id;$/;"	m	struct:World_Area	file:
next_pos	src/rituals_gui.cpp	/^	Vec2 next_pos;$/;"	m	struct:Gui_Context	file:
next_random	src/rituals_game.cpp	/^f32 next_random() $/;"	f
next_random	src/rituals_random.cpp	/^f32 next_random(Random* r) $/;"	f
next_random_double	src/rituals_game.cpp	/^f64 next_random_double()$/;"	f
next_random_double	src/rituals_random.cpp	/^f64 next_random_double(Random* r)$/;"	f
next_random_float	src/rituals_game.cpp	/^f32 next_random_float()$/;"	f
next_random_float	src/rituals_random.cpp	/^f32 next_random_float(Random* r)$/;"	f
next_random_u64	src/rituals_random.cpp	/^u64 next_random_u64(Random* r)$/;"	f
normal	src/rituals_simulation.cpp	/^	Vec2 normal;$/;"	m	struct:Sim_Contact	file:
north	src/rituals_world_area.cpp	/^	Area_Link north;$/;"	m	struct:World_Area_Stub	file:
num_keys_down	src/rituals_input.cpp	/^	isize num_keys_down;$/;"	m	struct:Game_Input	file:
num_mouse_down	src/rituals_input.cpp	/^	isize num_mouse_down;$/;"	m	struct:Game_Input	file:
off_t	src/wb_alloc.h	/^typedef usize off_t;$/;"	t
offset	src/rituals_world_area.cpp	/^	Vec2 offset;$/;"	m	struct:World_Area	file:
offsetX	src/render.c	/^	f32 offsetX, offsetY;$/;"	m	struct:wRenderGroup	file:
offsetX	src/render.cpp	/^	f32 offsetX, offsetY;$/;"	m	struct:wRenderGroup	file:
offsetY	src/render.c	/^	f32 offsetX, offsetY;$/;"	m	struct:wRenderGroup	file:
offsetY	src/render.cpp	/^	f32 offsetX, offsetY;$/;"	m	struct:wRenderGroup	file:
operator *	src/rituals_math.cpp	/^static inline Vec2 operator*(Vec2 a, Vec2 b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec2 operator*(Vec2 a, f32 s)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec2 operator*(f32 s, Vec2 a)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec2i operator*(Vec2i a, Vec2i b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec2i operator*(Vec2i a, i32 s)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec2i operator*(i32 s, Vec2i a)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3 operator*(Vec3 a, Vec3 b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3 operator*(Vec3 a, f32 s)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3 operator*(f32 s, Vec3 a)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3i operator*(Vec3i a, Vec3i b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3i operator*(Vec3i a, i32 s)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec3i operator*(i32 s, Vec3i a)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4 operator*(Vec4 a, Vec4 b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4 operator*(Vec4 a, f32 b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4 operator*(f32 b, Vec4 a) $/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4i operator*(Vec4i a, Vec4i b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4i operator*(Vec4i a, i32 b)$/;"	f	file:
operator *	src/rituals_math.cpp	/^static inline Vec4i operator*(i32 b, Vec4i a) $/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec2& operator*=(Vec2& a, Vec2 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec2& operator*=(Vec2& a, f32 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec2i& operator*=(Vec2i& a, Vec2i b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec2i& operator*=(Vec2i& a, i32 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec3& operator*=(Vec3& a, Vec3 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec3& operator*=(Vec3& a, f32 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec3i& operator*=(Vec3i& a, Vec3i b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec3i& operator*=(Vec3i& a, i32 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec4 operator*=(Vec4& a, Vec4 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec4 operator*=(Vec4& a, f32 b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec4i operator*=(Vec4i& a, Vec4i b)$/;"	f	file:
operator *=	src/rituals_math.cpp	/^static inline Vec4i operator*=(Vec4i& a, i32 b)$/;"	f	file:
operator +	src/rituals_math.cpp	/^static inline Vec2 operator+(Vec2 a, Vec2 b)$/;"	f	file:
operator +	src/rituals_math.cpp	/^static inline Vec2i operator+(Vec2i a, Vec2i b)$/;"	f	file:
operator +	src/rituals_math.cpp	/^static inline Vec3 operator+(Vec3 a, Vec3 b)$/;"	f	file:
operator +	src/rituals_math.cpp	/^static inline Vec3i operator+(Vec3i a, Vec3i b)$/;"	f	file:
operator +	src/rituals_math.cpp	/^static inline Vec4 operator+(Vec4 a, Vec4 b)$/;"	f	file:
operator +	src/rituals_math.cpp	/^static inline Vec4i operator+(Vec4i a, Vec4i b)$/;"	f	file:
operator +=	src/rituals_math.cpp	/^static inline Vec2& operator+=(Vec2& a, Vec2 b)$/;"	f	file:
operator +=	src/rituals_math.cpp	/^static inline Vec2i& operator+=(Vec2i& a, Vec2i b)$/;"	f	file:
operator +=	src/rituals_math.cpp	/^static inline Vec3& operator+=(Vec3& a, Vec3 b)$/;"	f	file:
operator +=	src/rituals_math.cpp	/^static inline Vec3i& operator+=(Vec3i& a, Vec3i b)$/;"	f	file:
operator +=	src/rituals_math.cpp	/^static inline Vec4 operator+=(Vec4& a, Vec4 b)$/;"	f	file:
operator +=	src/rituals_math.cpp	/^static inline Vec4i operator+=(Vec4i& a, Vec4i b)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec2 operator-(Vec2 a)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec2 operator-(Vec2 a, Vec2 b)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec2i operator-(Vec2i a)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec2i operator-(Vec2i a, Vec2i b)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec3 operator-(Vec3 a)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec3 operator-(Vec3 a, Vec3 b)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec3i operator-(Vec3i a)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec3i operator-(Vec3i a, Vec3i b)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec4 operator-(Vec4 a)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec4 operator-(Vec4 a, Vec4 b)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec4i operator-(Vec4i a)$/;"	f	file:
operator -	src/rituals_math.cpp	/^static inline Vec4i operator-(Vec4i a, Vec4i b)$/;"	f	file:
operator -=	src/rituals_math.cpp	/^static inline Vec2& operator-=(Vec2& a, Vec2 b)$/;"	f	file:
operator -=	src/rituals_math.cpp	/^static inline Vec2i& operator-=(Vec2i& a, Vec2i b)$/;"	f	file:
operator -=	src/rituals_math.cpp	/^static inline Vec3& operator-=(Vec3& a, Vec3 b)$/;"	f	file:
operator -=	src/rituals_math.cpp	/^static inline Vec3i& operator-=(Vec3i& a, Vec3i b)$/;"	f	file:
operator -=	src/rituals_math.cpp	/^static inline Vec4 operator-=(Vec4& a, Vec4 b)$/;"	f	file:
operator -=	src/rituals_math.cpp	/^static inline Vec4i operator-=(Vec4i& a, Vec4i b)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec2 operator\/(Vec2 a, f32 s)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec2i operator\/(Vec2i a, i32 s)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec3 operator\/(Vec3 a, f32 s)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec3i operator\/(Vec3i a, i32 s)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec4 operator\/(Vec4 a, f32 b)$/;"	f	file:
operator /	src/rituals_math.cpp	/^static inline Vec4i operator\/(Vec4i a, i32 b)$/;"	f	file:
operator /=	src/rituals_math.cpp	/^static inline Vec2& operator\/=(Vec2& a, f32 b)$/;"	f	file:
operator /=	src/rituals_math.cpp	/^static inline Vec2i& operator\/=(Vec2i& a, i32 b)$/;"	f	file:
operator /=	src/rituals_math.cpp	/^static inline Vec3& operator\/=(Vec3& a, f32 b)$/;"	f	file:
operator /=	src/rituals_math.cpp	/^static inline Vec3i& operator\/=(Vec3i& a, i32 b)$/;"	f	file:
operator /=	src/rituals_math.cpp	/^static inline Vec4 operator\/=(Vec4& a, f32 b)$/;"	f	file:
operator /=	src/rituals_math.cpp	/^static inline Vec4i operator\/=(Vec4i& a, i32 b)$/;"	f	file:
operator ==	src/rituals_math.cpp	/^static inline bool operator==(Rect2 a, Rect2 b)$/;"	f	file:
overlap	src/rituals_simulation.cpp	/^	Vec2 overlap;$/;"	m	struct:Sim_Contact	file:
pad	src/wb_alloc.h	/^	wbi__u16 pad;$/;"	m	struct:sysinfo
pageSize	src/wb_alloc.h	/^	usize totalMemory, commitSize, pageSize;$/;"	m	struct:MemoryInfo
particles	src/rituals_particles.cpp	/^	Particle* particles;$/;"	m	struct:Emitter	file:
particles_capacity	src/rituals_particles.cpp	/^	isize particles_count, particles_capacity;$/;"	m	struct:Emitter	file:
particles_count	src/rituals_particles.cpp	/^	isize particles_count, particles_capacity;$/;"	m	struct:Emitter	file:
patrol_end	src/rituals_game_info.cpp	/^    Vec2 patrol_end;$/;"	m	struct:Rituals_Goblin_Knight_Userdata	file:
patrol_start	src/rituals_game_info.cpp	/^    Vec2 patrol_start;$/;"	m	struct:Rituals_Goblin_Knight_Userdata	file:
perch	src/rituals_game_info.cpp	/^    Vec2 perch;$/;"	m	struct:Rituals_Bat_Userdata	file:
pickup	src/rituals_game_info.cpp	/^    Rituals_Pickup_Userdata pickup;$/;"	m	union:Rituals_Entity_Userdata	file:
pixels	src/render.c	/^	u32* pixels;$/;"	m	struct:wTexture	file:
pixels	src/render.cpp	/^	u32* pixels;$/;"	m	struct:wTexture	file:
platform_init	src/rituals_game.cpp	/^i32 platform_init(Platform* platform)$/;"	f
platform_quit	src/rituals_game.cpp	/^void platform_quit()$/;"	f
play_animation	src/rituals_animations.cpp	/^isize play_animation(Animated_Sprite* s, isize anim_index)$/;"	f
player	src/rituals_game_info.cpp	/^    Rituals_Player_Userdata player;$/;"	m	union:Rituals_Entity_Userdata	file:
player	src/rituals_world_area.cpp	/^	Entity* player;$/;"	m	struct:World_Area	file:
pool	src/wb_alloc.h	/^	MemoryPool pool;$/;"	m	struct:TaggedHeap
poolBootstrap	src/wb_alloc.h	/^MemoryPool* poolBootstrap(MemoryInfo info, $/;"	f
poolBootstrap	src/wb_alloc.h	/^MemoryPool* poolBootstrap(MemoryInfo info,$/;"	f
poolFixedSizeBootstrap	src/wb_alloc.h	/^MemoryPool* poolFixedSizeBootstrap($/;"	f
poolInit	src/wb_alloc.h	/^void poolInit($/;"	f
poolInit	src/wb_alloc.h	/^void poolInit(MemoryPool* pool, MemoryArena* alloc, $/;"	f
poolRelease	src/wb_alloc.h	/^void poolRelease(MemoryPool* pool, T* ptr)$/;"	f
poolRelease	src/wb_alloc.h	/^void poolRelease(MemoryPool* pool, void* ptr)$/;"	f
poolRetrieve	src/wb_alloc.h	/^T* poolRetrieve(MemoryPool* pool)$/;"	f
poolRetrieve	src/wb_alloc.h	/^void* poolRetrieve(MemoryPool* pool)$/;"	f
pos	src/render.cpp	/^		Vec2 pos;$/;"	m	union:wSprite::__anon1	file:
position	src/rituals_animations.cpp	/^	Vec3 position; $/;"	m	struct:Animation_Frame	file:
position	src/rituals_gui.cpp	/^	Vec2 position;$/;"	m	struct:Gui_Window_Handle	file:
position	src/rituals_math.cpp	/^		Vec2 position, size;$/;"	m	struct:Rect2::__anon8	file:
position	src/rituals_particles.cpp	/^	Vec3 position;$/;"	m	struct:Particle	file:
position	src/rituals_world_area.cpp	/^	Vec2i position;$/;"	m	struct:Area_Link	file:
prev_time	src/rituals_game_states.cpp	/^	usize current_time = 0, prev_time = 0;$/;"	m	struct:Play_State	file:
primMember	src/render.c	208;"	d	file:
primMember	src/render.cpp	260;"	d	file:
procs	src/wb_alloc.h	/^	wbi__u16 procs;$/;"	m	struct:sysinfo
program	src/render.c	/^	u32 vert, frag, program;$/;"	m	struct:wShader	file:
program	src/render.cpp	/^	u32 vert, frag, program;$/;"	m	struct:wShader	file:
prop	src/rituals_game_info.cpp	/^    Rituals_Prop_Userdata prop;$/;"	m	union:Rituals_Entity_Userdata	file:
ptr	src/rituals_game_info.cpp	/^    void* ptr;$/;"	m	struct:Unknown_Userdata	file:
quality	src/rituals_game_info.cpp	/^    isize quality;$/;"	m	struct:Rituals_Prop_Userdata	file:
r	src/render.c	/^	f32 l, b, r, t;$/;"	m	struct:wSpriteList	file:
r	src/render.cpp	/^	f32 l, b, r, t;$/;"	m	struct:wSpriteList	file:
r	src/rituals_game.cpp	/^	Random r;$/;"	m	struct:Game_Main	file:
rand_range	src/rituals_game.cpp	/^f32 rand_range(f32 min, f32 max)$/;"	f
rand_range	src/rituals_random.cpp	/^f32 rand_range(Random* r, f32 min, f32 max)$/;"	f
rand_range_int	src/rituals_game.cpp	/^i32 rand_range_int(f32 min, f32 max)$/;"	f
rand_range_int	src/rituals_random.cpp	/^i32 rand_range_int(Random* r, f32 min, f32 max)$/;"	f
real32	src/rituals_defines.h	/^typedef float real32;$/;"	t
real64	src/rituals_defines.h	/^typedef double real64;$/;"	t
rect2	src/rituals_math.cpp	/^static inline Rect2 rect2(Vec2 topleft, Vec2 size)$/;"	f	file:
rect2	src/rituals_math.cpp	/^static inline Rect2 rect2(f32 x, f32 y, f32 w, f32 h)$/;"	f	file:
rect2_clip	src/rituals_math.cpp	/^static inline Rect2_Clip_Info rect2_clip(Rect2 r, Rect2 clip)$/;"	f	file:
rect2i	src/rituals_math.cpp	/^static inline Rect2i rect2i(i16 x, i16 y, i16 w, i16 h)$/;"	f	file:
rect_contains_point	src/rituals_math.cpp	/^static inline bool rect_contains_point(Rect2 r, Vec2 p)$/;"	f	file:
rect_to_aabb	src/rituals_math.cpp	/^static inline AABB rect_to_aabb(Rect2 r)$/;"	f	file:
recursively_delete_folder	src/rituals_serialization.cpp	/^int recursively_delete_folder(char* path, bool append_base_path)$/;"	f
ref	src/rituals_world_area.cpp	/^	Entity* ref;$/;"	m	struct:Hitbox	file:
register_all_rituals_tile_info	src/rituals_game_registry.cpp	/^void register_all_rituals_tile_info(Game_Registry* Registry)$/;"	f
register_everything_in_rituals	src/rituals_game_registry.cpp	/^void register_everything_in_rituals(Game_Registry* Registry)$/;"	f
registry	src/rituals_game.cpp	/^	Game_Registry* registry;$/;"	m	struct:Game_Main	file:
registryInit	src/rituals_game_registry.cpp	/^void registryInit(Game_Registry* reg, isize capacity, MemoryArena* arena)$/;"	f
removed_entities	src/rituals_world_area.cpp	/^	isize* removed_entities;$/;"	m	struct:World_Area	file:
removed_entities_capacity	src/rituals_world_area.cpp	/^	isize removed_entities_count, removed_entities_capacity;$/;"	m	struct:World_Area	file:
removed_entities_count	src/rituals_world_area.cpp	/^	isize removed_entities_count, removed_entities_capacity;$/;"	m	struct:World_Area	file:
render	src/rituals_game.cpp	/^	wRenderGroup* render;$/;"	m	struct:Game_Main	file:
renderAdd	src/rituals_game.cpp	/^Sprite* renderAdd($/;"	f
render_add	src/rituals_game.cpp	/^void render_add(wSprite* sprite)$/;"	f
render_body_text	src/rituals_gui.cpp	/^void render_body_text(char* text, Vec2 position, bool background=false, f32 scale = 1.0f)$/;"	f
render_tilemap	src/rituals_tilemap.cpp	/^isize render_tilemap(Game_Registry* Registry, Tilemap* tilemap, Vec2 pos, Rect2 area)$/;"	f
render_tilemap	src/rituals_tilemap.cpp	/^void render_tilemap(Game_Registry* Registry, Tilemap* tilemap, Vec2 pos)$/;"	f
render_title_text	src/rituals_gui.cpp	/^void render_title_text(char* text, Vec2 position)$/;"	f
replace_filename_char	src/rituals_game.cpp	/^char replace_filename_char(char c, char replace)$/;"	f
replace_invalid_filename_chars	src/rituals_game.cpp	/^isize replace_invalid_filename_chars(char* str, isize len, char replace)$/;"	f
restitution	src/rituals_simulation.cpp	/^	f32 inv_mass, restitution, damping;$/;"	m	struct:Sim_Body	file:
rituals_animate_entities	src/rituals_entity_events.cpp	/^void rituals_animate_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_contact_entities	src/rituals_entity_events.cpp	/^void rituals_contact_entities(Sim_Contact* contacts, isize count, World_Area* area, World* world)$/;"	f
rituals_entity_on_contact_terrain	src/rituals_entity_events.cpp	/^void rituals_entity_on_contact_terrain(Entity* e, World_Area* area, World* world)$/;"	f
rituals_frametick_entities	src/rituals_entity_events.cpp	/^bool rituals_frametick_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_hit_entities	src/rituals_entity_events.cpp	/^void rituals_hit_entities(Hitbox_Contact* contacts, isize count, World_Area* area, World* world)$/;"	f
rituals_interact_entities	src/rituals_entity_events.cpp	/^void rituals_interact_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_on_activate_entity	src/rituals_entity_events.cpp	/^void rituals_on_activate_entity(Entity* entity, World_Area* area, World* world)$/;"	f
rituals_on_destroy_entity	src/rituals_entity_events.cpp	/^void rituals_on_destroy_entity(Entity* e, World_Area* area, World* world)$/;"	f
rituals_prop_drop_on_break	src/rituals_entity_events.cpp	/^void rituals_prop_drop_on_break(World_Area* area, Entity* a) $/;"	f
rituals_slowtick_entities	src/rituals_entity_events.cpp	/^void rituals_slowtick_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rituals_spawn_enemy	src/rituals_entity_events.cpp	/^Entity* rituals_spawn_enemy(World_Area* area, isize enemykind, Vec2 position) $/;"	f
rituals_walk_entities	src/rituals_entity_events.cpp	/^void rituals_walk_entities(Entity* entities, isize count, World_Area* area, World* world)$/;"	f
rp1	src/rituals_math.cpp	/^	Vec2 rp1;$/;"	m	struct:Rect2_Clip_Info	file:
rp2	src/rituals_math.cpp	/^	Vec2 rp2;$/;"	m	struct:Rect2_Clip_Info	file:
running	src/rituals_animations.cpp	/^	bool running;$/;"	m	struct:Animated_Sprite	file:
running	src/rituals_game_states.cpp	/^	bool running;$/;"	m	struct:Play_State	file:
save_dir	src/rituals_game_states.cpp	/^	char save_dir[FilePathMaxLength];$/;"	m	struct:Menu_State	file:
save_dir_len	src/rituals_game_states.cpp	/^	isize save_dir_len;$/;"	m	struct:Menu_State	file:
save_world_on_stop	src/rituals_game_states.cpp	/^	bool save_world_on_stop;$/;"	m	struct:Play_State	file:
saves	src/rituals_game_states.cpp	/^	tinydir_dir saves;$/;"	m	struct:Menu_State	file:
saves_dirty	src/rituals_game_states.cpp	/^	bool saves_dirty;$/;"	m	struct:Menu_State	file:
scale	src/render.c	/^	f32 scale;$/;"	m	struct:wRenderGroup	file:
scale	src/render.cpp	/^	f32 scale;$/;"	m	struct:wRenderGroup	file:
scale	src/rituals_game.cpp	/^	f32 scale;$/;"	m	struct:Game_Main	file:
scale	src/rituals_particles.cpp	/^	f32 scale;$/;"	m	struct:Particle	file:
scale_max	src/rituals_particles.cpp	/^	f32 scale_max;$/;"	m	struct:Particle_Style	file:
scale_min	src/rituals_particles.cpp	/^	f32 scale_min;$/;"	m	struct:Particle_Style	file:
scancodes	src/rituals_input.cpp	/^	i8* scancodes;$/;"	m	struct:Game_Input	file:
screen_mouse_pos	src/rituals_input.cpp	/^	Vec2i screen_mouse_pos;$/;"	m	struct:Game_Input	file:
sdf	src/render.c	/^	f32 sdf;$/;"	m	struct:wSprite	file:
sdf	src/render.cpp	/^	f32 sdf;$/;"	m	struct:wSprite	file:
sdfPxRange	src/render.c	/^	float sdfPxRange;$/;"	m	struct:wRenderGroup	file:
sdfPxRange	src/render.cpp	/^	float sdfPxRange;$/;"	m	struct:wRenderGroup	file:
seed	src/rituals_world.cpp	/^	usize seed;$/;"	m	struct:World	file:
seed	src/rituals_world_area.cpp	/^	usize seed;$/;"	m	struct:World_Area_Stub	file:
selection_start	src/rituals_gui.cpp	/^	isize cursor, selection_start;$/;"	m	struct:Gui_Text_Input_Handle	file:
serialize_world	src/rituals_serialization.cpp	/^void serialize_world(World* world)$/;"	f
shader	src/render.c	/^	wShader* shader;$/;"	m	struct:wRenderGroup	file:
shader	src/render.cpp	/^	wShader* shader;$/;"	m	struct:wRenderGroup	file:
shadow_color	src/rituals_particles.cpp	/^	u32 shadow_color;$/;"	m	struct:Particle_Style	file:
shadow_scale	src/rituals_world_area.cpp	/^	f32 shadow_scale;$/;"	m	struct:Entity	file:
shape	src/rituals_simulation.cpp	/^	AABB shape;$/;"	m	struct:Sim_Body	file:
sharedMemory	src/wb_alloc.h	/^	wbi__u64 sharedMemory;$/;"	m	struct:sysinfo
sim	src/rituals_world_area.cpp	/^	Simulator sim;$/;"	m	struct:World_Area	file:
sim_find_body	src/rituals_simulation.cpp	/^Sim_Body* sim_find_body(Simulator* sim, isize id)$/;"	f
sim_get_next_body	src/rituals_simulation.cpp	/^Sim_Body* sim_get_next_body(Simulator* sim)$/;"	f
sim_get_next_static_body	src/rituals_simulation.cpp	/^Sim_Body* sim_get_next_static_body(Simulator* sim)$/;"	f
sim_query_aabb	src/rituals_simulation.cpp	/^Sim_Body* sim_query_aabb(Simulator* sim, AABB query)$/;"	f
sim_remove_body	src/rituals_simulation.cpp	/^void sim_remove_body(Simulator* sim, Sim_Body* body)$/;"	f
sim_remove_body	src/rituals_simulation.cpp	/^void sim_remove_body(Simulator* sim, isize body)$/;"	f
sim_sort_bodies_on_id	src/rituals_simulation.cpp	/^void sim_sort_bodies_on_id(Simulator* sim)$/;"	f
sim_update	src/rituals_simulation.cpp	/^void sim_update(Game_Registry* Registry, Simulator* sim, Tilemap* map, f32 dt)$/;"	f
size	src/render.cpp	/^	union { Vec2 size; struct{f32 w, h;};};$/;"	m	union:wSprite::__anon3	file:
size	src/rituals_animations.cpp	/^	Vec2 size;$/;"	m	struct:Animation_Frame	file:
size	src/rituals_game.cpp	/^	Vec2 size;$/;"	m	struct:Game_Main	file:
size	src/rituals_game_info.cpp	/^    isize size;$/;"	m	struct:Unknown_Userdata	file:
size	src/rituals_math.cpp	/^		Vec2 position, size;$/;"	m	struct:Rect2::__anon8	file:
size	src/rituals_particles.cpp	/^	Vec2 size;$/;"	m	struct:Particle_Style	file:
size	src/rituals_simulation.cpp	/^	Vec2i size;$/;"	m	struct:Sim_Static_Grid	file:
skid_on_bounce_max	src/rituals_particles.cpp	/^	f32 skid_on_bounce_max;$/;"	m	struct:Particle_Style	file:
skid_on_bounce_min	src/rituals_particles.cpp	/^	f32 skid_on_bounce_min;$/;"	m	struct:Particle_Style	file:
slots	src/wb_alloc.h	/^	void* slots;$/;"	m	struct:MemoryPool
slowtick_timer	src/rituals_world.cpp	/^	usize slowtick_timer;$/;"	m	struct:World	file:
slowtick_timer_interval	src/rituals_world.cpp	/^	usize slowtick_timer_interval;$/;"	m	struct:World	file:
snake	src/rituals_game_info.cpp	/^        Rituals_Snake_Userdata snake;$/;"	m	union:Rituals_Enemy_Userdata::__anon1	file:
solid	src/rituals_game_info.cpp	/^	bool solid;$/;"	m	struct:Tile_Info	file:
sort_axis	src/rituals_simulation.cpp	/^	isize sort_axis;$/;"	m	struct:Simulator	file:
sort_offset	src/render.cpp	/^	f32 sort_offset;$/;"	m	struct:wSprite	file:
sort_offset	src/rituals_animations.cpp	/^	f32 sort_offset;$/;"	m	struct:Animation_Frame	file:
south	src/rituals_world_area.cpp	/^	Area_Link south;$/;"	m	struct:World_Area_Stub	file:
speed	src/rituals_game_info.cpp	/^    f32 speed;$/;"	m	struct:Rituals_Enemy_Userdata	file:
sprite	src/rituals_world_area.cpp	/^	Sprite sprite;$/;"	m	struct:Entity	file:
spritefont_render_text	src/rituals_gui.cpp	/^void spritefont_render_text(Spritefont* font, char* text, Vec2 position, Sprite_Anchor anchor = Anchor_Top_Left, f32 scale = 1.0f)$/;"	f
spritefont_render_text	src/rituals_gui.cpp	/^void spritefont_render_text(Spritefont* font,$/;"	f
spritefont_render_text_background	src/rituals_gui.cpp	/^void spritefont_render_text_background(Spritefont* font, char* text, Vec2 position, f32 scale, Vec4 background) $/;"	f
spritefont_render_text_ex	src/rituals_gui.cpp	/^void spritefont_render_text_ex(Spritefont* font,$/;"	f
spritefont_size_text	src/rituals_gui.cpp	/^Vec2 spritefont_size_text(Spritefont* font, char* text) $/;"	f
spritefont_size_text	src/rituals_gui.cpp	/^Vec2 spritefont_size_text(Spritefont* font, char* text, isize len)$/;"	f
sprites	src/render.c	/^	wSprite* sprites;$/;"	m	struct:wRenderGroup	file:
sprites	src/render.cpp	/^	wSprite* sprites;$/;"	m	struct:wRenderGroup	file:
start	src/render.c	/^	i32 start, count;$/;"	m	struct:wSpriteList	file:
start	src/render.cpp	/^	i32 start, count;$/;"	m	struct:wSpriteList	file:
start	src/wb_alloc.h	/^	void *start, *head, *end;$/;"	m	struct:MemoryArena
state	src/rituals_game.cpp	/^	i32 state;$/;"	m	struct:Game_Main	file:
states	src/rituals_tilemap.cpp	/^	Tile_State* states;$/;"	m	struct:Tilemap	file:
static_b	src/rituals_simulation.cpp	/^	Sim_Body* static_b;$/;"	m	struct:Sim_Contact	file:
static_bodies	src/rituals_simulation.cpp	/^	Sim_Body* static_bodies;$/;"	m	struct:Simulator	file:
static_bodies_capacity	src/rituals_simulation.cpp	/^	isize static_bodies_count, static_bodies_capacity;$/;"	m	struct:Simulator	file:
static_bodies_count	src/rituals_simulation.cpp	/^	isize static_bodies_count, static_bodies_capacity;$/;"	m	struct:Simulator	file:
stub	src/rituals_world_area.cpp	/^	World_Area_Stub* stub;$/;"	m	struct:World_Area	file:
style_index	src/rituals_particles.cpp	/^	i32 style_index;$/;"	m	struct:Particle	file:
styles	src/rituals_particles.cpp	/^	Particle_Style* styles;$/;"	m	struct:Emitter	file:
styles_capacity	src/rituals_particles.cpp	/^	isize styles_count, styles_capacity;$/;"	m	struct:Emitter	file:
styles_count	src/rituals_particles.cpp	/^	isize styles_count, styles_capacity;$/;"	m	struct:Emitter	file:
subtype	src/rituals_game_info.cpp	/^    isize subtype;$/;"	m	struct:Rituals_Prop_Userdata	file:
sx	src/render.c	/^	f32 sx, sy;$/;"	m	struct:wVertex	file:
sx	src/render.cpp	/^	f32 sx, sy;$/;"	m	struct:wVertex	file:
sy	src/render.c	/^	f32 sx, sy;$/;"	m	struct:wVertex	file:
sy	src/render.cpp	/^	f32 sx, sy;$/;"	m	struct:wVertex	file:
sysinfo	src/wb_alloc.h	/^int __cdecl sysinfo(struct sysinfo* info)$/;"	f
sysinfo	src/wb_alloc.h	/^struct sysinfo $/;"	s
t	src/render.c	/^	f32 l, b, r, t;$/;"	m	struct:wSpriteList	file:
t	src/render.cpp	/^	f32 l, b, r, t;$/;"	m	struct:wSpriteList	file:
tab_size	src/rituals_gui.cpp	/^	i32 tab_size;$/;"	m	struct:Spritefont	file:
tag	src/wb_alloc.h	/^	isize tag;$/;"	m	struct:wbi__TaggedHeapArena
taggedAlloc	src/wb_alloc.h	/^T* taggedAlloc(TaggedHeap* heap, isize tag)$/;"	f
taggedAlloc	src/wb_alloc.h	/^void* taggedAlloc(TaggedHeap* heap, isize tag, usize size)$/;"	f
taggedBootstrap	src/wb_alloc.h	/^TaggedHeap* taggedBootstrap(MemoryInfo info, $/;"	f
taggedFixedSizeBootstrap	src/wb_alloc.h	/^TaggedHeap* taggedFixedSizeBootstrap($/;"	f
taggedFree	src/wb_alloc.h	/^void taggedFree(TaggedHeap* heap, isize tag)$/;"	f
taggedInit	src/wb_alloc.h	/^void taggedInit(TaggedHeap* heap, MemoryArena* arena, $/;"	f
target	src/rituals_world_area.cpp	/^	Vec2 target;$/;"	m	struct:World_Area	file:
tempArena	src/rituals_game.cpp	/^	MemoryArena* tempArena;$/;"	m	struct:Game_Main	file:
tempHead	src/wb_alloc.h	/^	void *tempStart, *tempHead;$/;"	m	struct:MemoryArena
tempStart	src/wb_alloc.h	/^	void *tempStart, *tempHead;$/;"	m	struct:MemoryArena
testInit	src/rituals_main.cpp	/^void testInit()$/;"	f
testUpdate	src/rituals_main.cpp	/^void testUpdate()$/;"	f
text	src/rituals_input.cpp	/^	char* text;$/;"	m	struct:Game_Input	file:
text_count	src/rituals_input.cpp	/^	isize text_count;$/;"	m	struct:Game_Input	file:
texture	src/render.c	/^	wTexture* texture;$/;"	m	struct:wRenderGroup	file:
texture	src/render.cpp	/^		Rect2i texture;$/;"	m	union:wSprite::__anon7	file:
texture	src/render.cpp	/^	wTexture* texture;$/;"	m	struct:wRenderGroup	file:
texture	src/rituals_animations.cpp	/^	Rect2i texture;$/;"	m	struct:Animation_Frame	file:
texture	src/rituals_game_info.cpp	/^	Rect2i texture;$/;"	m	struct:Tile_Info	file:
texture	src/rituals_particles.cpp	/^	Rect2i texture;$/;"	m	struct:Particle_Style	file:
th	src/render.c	/^	i16 tx, ty, tw, th;$/;"	m	struct:wSprite	file:
th	src/render.cpp	/^		struct {i16 tx, ty, tw, th;};$/;"	m	struct:wSprite::__anon7::__anon8	file:
tilemap_get_at	src/rituals_tilemap.cpp	/^Tile tilemap_get_at(Tilemap* tilemap, Vec2 pos)$/;"	f
tilemap_get_at	src/rituals_tilemap.cpp	/^Tile tilemap_get_at(Tilemap* tilemap, isize x, isize y)$/;"	f
tilemap_get_state_at	src/rituals_tilemap.cpp	/^Tile_State* tilemap_get_state_at(Tilemap* tilemap, Vec2 pos)$/;"	f
tilemap_get_state_at	src/rituals_tilemap.cpp	/^Tile_State* tilemap_get_state_at(Tilemap* tilemap, isize x, isize y)$/;"	f
tilemap_set_at	src/rituals_tilemap.cpp	/^bool tilemap_set_at(Tilemap* tilemap, Vec2 pos, Tile value)$/;"	f
tilemap_set_at	src/rituals_tilemap.cpp	/^bool tilemap_set_at(Tilemap* tilemap, isize x, isize y, Tile value)$/;"	f
tiles	src/rituals_game_registry.cpp	/^	Tile_Info* tiles;$/;"	m	struct:Game_Registry	file:
tiles	src/rituals_tilemap.cpp	/^	Tile* tiles;$/;"	m	struct:Tilemap	file:
tiles_capacity	src/rituals_game_registry.cpp	/^	isize tiles_count, tiles_capacity;$/;"	m	struct:Game_Registry	file:
tiles_count	src/rituals_game_registry.cpp	/^	isize tiles_count, tiles_capacity;$/;"	m	struct:Game_Registry	file:
time	src/rituals_particles.cpp	/^	i32 time;$/;"	m	struct:Particle	file:
time_alpha	src/rituals_particles.cpp	/^	bool time_alpha;$/;"	m	struct:Particle_Style	file:
time_max	src/rituals_particles.cpp	/^	i32 time_max;$/;"	m	struct:Particle_Style	file:
time_min	src/rituals_particles.cpp	/^	i32 time_min;$/;"	m	struct:Particle_Style	file:
time_scaling	src/rituals_particles.cpp	/^	bool time_scaling;$/;"	m	struct:Particle_Style	file:
timer	src/rituals_animations.cpp	/^	f32 timer;$/;"	m	struct:Animated_Sprite	file:
tint	src/render.c	/^	u32 tint;$/;"	m	struct:wRenderGroup	file:
tint	src/render.cpp	/^	u32 tint;$/;"	m	struct:wRenderGroup	file:
title	src/rituals_gui.cpp	/^	char* title;$/;"	m	struct:Gui_Window_Handle	file:
tm	src/rituals_main.cpp	/^Tilemap tm;$/;"	v
top_texture	src/rituals_game_info.cpp	/^	Rect2i top_texture;$/;"	m	struct:Tile_Info	file:
totalHigh	src/wb_alloc.h	/^	wbi__u64 totalHigh;$/;"	m	struct:sysinfo
totalMemory	src/wb_alloc.h	/^	usize totalMemory, commitSize, pageSize;$/;"	m	struct:MemoryInfo
totalSwap	src/wb_alloc.h	/^	wbi__u64 totalSwap;$/;"	m	struct:sysinfo
total_time	src/rituals_particles.cpp	/^	i32 total_time;$/;"	m	struct:Particle	file:
totalram	src/wb_alloc.h	/^	wbi__u64 totalram;$/;"	m	struct:sysinfo
tw	src/render.c	/^	i16 tx, ty, tw, th;$/;"	m	struct:wSprite	file:
tw	src/render.cpp	/^		struct {i16 tx, ty, tw, th;};$/;"	m	struct:wSprite::__anon7::__anon8	file:
tx	src/render.c	/^	i16 tx, ty, tw, th;$/;"	m	struct:wSprite	file:
tx	src/render.cpp	/^		struct {i16 tx, ty, tw, th;};$/;"	m	struct:wSprite::__anon7::__anon8	file:
ty	src/render.c	/^	i16 tx, ty, tw, th;$/;"	m	struct:wSprite	file:
ty	src/render.cpp	/^		struct {i16 tx, ty, tw, th;};$/;"	m	struct:wSprite::__anon7::__anon8	file:
u	src/render.c	/^	f32 u, v;$/;"	m	struct:wVertex	file:
u	src/render.cpp	/^	f32 u, v;$/;"	m	struct:wVertex	file:
u16	src/rituals_defines.h	/^typedef uint16_t u16;$/;"	t
u32	src/rituals_defines.h	/^typedef uint32_t u32;$/;"	t
u64	src/rituals_defines.h	/^typedef uint64_t u64;$/;"	t
u8	src/rituals_defines.h	/^typedef uint8_t u8;$/;"	t
uInvTextureSize	src/render.c	/^	i32 uInvTextureSize;$/;"	m	struct:wShader	file:
uInvTextureSize	src/render.cpp	/^	i32 uInvTextureSize;$/;"	m	struct:wShader	file:
uPxRange	src/render.c	/^	i32 uPxRange;$/;"	m	struct:wShader	file:
uPxRange	src/render.cpp	/^	i32 uPxRange;$/;"	m	struct:wShader	file:
uTint	src/render.c	/^	i32 uTint;$/;"	m	struct:wShader	file:
uTint	src/render.cpp	/^	i32 uTint;$/;"	m	struct:wShader	file:
unknown	src/rituals_game_info.cpp	/^    Unknown_Userdata unknown;$/;"	m	union:Rituals_Entity_Userdata	file:
update_tile_state_at	src/rituals_tilemap.cpp	/^void update_tile_state_at(Game_Registry* Registry, Tilemap* map, Vec2 pos)$/;"	f
update_tile_state_at	src/rituals_tilemap.cpp	/^void update_tile_state_at(Game_Registry* Registry, Tilemap* map, isize x, isize y)$/;"	f
uptime	src/wb_alloc.h	/^	wbi__i64 uptime;$/;"	m	struct:sysinfo
userdata	src/rituals_world_area.cpp	/^	Rituals_Entity_Userdata userdata;$/;"	m	struct:Entity	file:
usize	src/rituals_defines.h	/^typedef size_t usize;$/;"	t
usize	src/wb_alloc.h	/^typedef size_t usize;$/;"	t
v	src/render.c	/^	f32 u, v;$/;"	m	struct:wVertex	file:
v	src/render.cpp	/^	f32 u, v;$/;"	m	struct:wVertex	file:
v	src/rituals_defines.h	/^	vf128 v;$/;"	m	union:vf32x4
v2	src/rituals_math.cpp	/^static inline Vec2 v2(Vec2i vi)$/;"	f	file:
v2	src/rituals_math.cpp	/^static inline Vec2 v2(Vec3 vi)$/;"	f	file:
v2	src/rituals_math.cpp	/^static inline Vec2 v2(f32 x, f32 y)$/;"	f	file:
v2_add	src/rituals_math.cpp	/^static inline Vec2 v2_add(Vec2 a, Vec2 b)$/;"	f	file:
v2_add_scaled	src/rituals_math.cpp	/^static inline Vec2 v2_add_scaled(Vec2 a, Vec2 b, f32 scale)$/;"	f	file:
v2_component_mul	src/rituals_math.cpp	/^static inline Vec2 v2_component_mul(Vec2 a, Vec2 b)$/;"	f	file:
v2_cross	src/rituals_math.cpp	/^static inline f32 v2_cross(Vec2 a, Vec2 b)$/;"	f	file:
v2_div	src/rituals_math.cpp	/^static inline Vec2 v2_div(Vec2 a, f32 s)$/;"	f	file:
v2_dot	src/rituals_math.cpp	/^static inline f32 v2_dot(Vec2 a, Vec2 b)$/;"	f	file:
v2_from_angle	src/rituals_math.cpp	/^static inline Vec2 v2_from_angle(f32 normal)$/;"	f	file:
v2_len	src/rituals_math.cpp	/^static inline f32 v2_len(Vec2 a)$/;"	f	file:
v2_len_sq	src/rituals_math.cpp	/^static inline f32 v2_len_sq(Vec2 a)$/;"	f	file:
v2_mul	src/rituals_math.cpp	/^static inline Vec2 v2_mul(Vec2 a, f32 s)$/;"	f	file:
v2_negate	src/rituals_math.cpp	/^static inline Vec2 v2_negate(Vec2 a)$/;"	f	file:
v2_normalize	src/rituals_math.cpp	/^static inline Vec2 v2_normalize(Vec2 v)$/;"	f	file:
v2_perpendicular	src/rituals_math.cpp	/^static inline Vec2 v2_perpendicular(Vec2 v)$/;"	f	file:
v2_sub	src/rituals_math.cpp	/^static inline Vec2 v2_sub(Vec2 a, Vec2 b)$/;"	f	file:
v2_to_angle	src/rituals_math.cpp	/^static inline f32 v2_to_angle(Vec2 v)$/;"	f	file:
v2i	src/rituals_math.cpp	/^static inline Vec2i v2i(Vec2 vi)$/;"	f	file:
v2i	src/rituals_math.cpp	/^static inline Vec2i v2i(i32 x, i32 y)$/;"	f	file:
v2i_add	src/rituals_math.cpp	/^static inline Vec2i v2i_add(Vec2i a, Vec2i b)$/;"	f	file:
v2i_add_scaled	src/rituals_math.cpp	/^static inline Vec2i v2i_add_scaled(Vec2i a, Vec2i b, f32 scale)$/;"	f	file:
v2i_addi_scaled	src/rituals_math.cpp	/^static inline Vec2i v2i_addi_scaled(Vec2i a, Vec2i b, i32 scale)$/;"	f	file:
v2i_component_mul	src/rituals_math.cpp	/^static inline Vec2i v2i_component_mul(Vec2i a, Vec2i b)$/;"	f	file:
v2i_div	src/rituals_math.cpp	/^static inline Vec2i v2i_div(Vec2i a, f32 s)$/;"	f	file:
v2i_divi	src/rituals_math.cpp	/^static inline Vec2i v2i_divi(Vec2i a, i32 s)$/;"	f	file:
v2i_mul	src/rituals_math.cpp	/^static inline Vec2i v2i_mul(Vec2i a, f32 s)$/;"	f	file:
v2i_muli	src/rituals_math.cpp	/^static inline Vec2i v2i_muli(Vec2i a, i32 s)$/;"	f	file:
v2i_negate	src/rituals_math.cpp	/^static inline Vec2i v2i_negate(Vec2i a)$/;"	f	file:
v2i_sub	src/rituals_math.cpp	/^static inline Vec2i v2i_sub(Vec2i a, Vec2i b)$/;"	f	file:
v3	src/rituals_math.cpp	/^static inline Vec3 v3(Vec2 vi)$/;"	f	file:
v3	src/rituals_math.cpp	/^static inline Vec3 v3(Vec2 vi, f32 z)$/;"	f	file:
v3	src/rituals_math.cpp	/^static inline Vec3 v3(Vec3i vi)$/;"	f	file:
v3	src/rituals_math.cpp	/^static inline Vec3 v3(f32 x, f32 y, f32 z)$/;"	f	file:
v3_add	src/rituals_math.cpp	/^static inline Vec3 v3_add(Vec3 a, Vec3 b)$/;"	f	file:
v3_add_scaled	src/rituals_math.cpp	/^static inline Vec3 v3_add_scaled(Vec3 a, Vec3 b, f32 scale)$/;"	f	file:
v3_component_mul	src/rituals_math.cpp	/^static inline Vec3 v3_component_mul(Vec3 a, Vec3 b)$/;"	f	file:
v3_cross	src/rituals_math.cpp	/^static inline Vec3 v3_cross(Vec3 a, Vec3 b)$/;"	f	file:
v3_div	src/rituals_math.cpp	/^static inline Vec3 v3_div(Vec3 a, f32 s)$/;"	f	file:
v3_dot	src/rituals_math.cpp	/^static inline f32 v3_dot(Vec3 a, Vec3 b)$/;"	f	file:
v3_len	src/rituals_math.cpp	/^static inline f32 v3_len(Vec3 a)$/;"	f	file:
v3_len_sq	src/rituals_math.cpp	/^static inline f32 v3_len_sq(Vec3 a)$/;"	f	file:
v3_mul	src/rituals_math.cpp	/^static inline Vec3 v3_mul(Vec3 a, f32 s)$/;"	f	file:
v3_negate	src/rituals_math.cpp	/^static inline Vec3 v3_negate(Vec3 a)$/;"	f	file:
v3_normalize	src/rituals_math.cpp	/^static inline Vec3 v3_normalize(Vec3 v)$/;"	f	file:
v3_sub	src/rituals_math.cpp	/^static inline Vec3 v3_sub(Vec3 a, Vec3 b)$/;"	f	file:
v3i	src/rituals_math.cpp	/^static inline Vec3i v3i(Vec3 vi)$/;"	f	file:
v3i	src/rituals_math.cpp	/^static inline Vec3i v3i(i32 x, i32 y, i32 z)$/;"	f	file:
v3i_add	src/rituals_math.cpp	/^static inline Vec3i v3i_add(Vec3i a, Vec3i b)$/;"	f	file:
v3i_add_scaled	src/rituals_math.cpp	/^static inline Vec3i v3i_add_scaled(Vec3i a, Vec3i b, f32 scale)$/;"	f	file:
v3i_addi_scaled	src/rituals_math.cpp	/^static inline Vec3i v3i_addi_scaled(Vec3i a, Vec3i b, i32 scale)$/;"	f	file:
v3i_component_mul	src/rituals_math.cpp	/^static inline Vec3i v3i_component_mul(Vec3i a, Vec3i b)$/;"	f	file:
v3i_div	src/rituals_math.cpp	/^static inline Vec3i v3i_div(Vec3i a, f32 s)$/;"	f	file:
v3i_divi	src/rituals_math.cpp	/^static inline Vec3i v3i_divi(Vec3i a, i32 s)$/;"	f	file:
v3i_mul	src/rituals_math.cpp	/^static inline Vec3i v3i_mul(Vec3i a, f32 s)$/;"	f	file:
v3i_muli	src/rituals_math.cpp	/^static inline Vec3i v3i_muli(Vec3i a, i32 s)$/;"	f	file:
v3i_negate	src/rituals_math.cpp	/^static inline Vec3i v3i_negate(Vec3i a)$/;"	f	file:
v3i_sub	src/rituals_math.cpp	/^static inline Vec3i v3i_sub(Vec3i a, Vec3i b)$/;"	f	file:
v4	src/rituals_math.cpp	/^static inline Vec4 v4(Vec2 vi)$/;"	f	file:
v4	src/rituals_math.cpp	/^static inline Vec4 v4(Vec2 vi, f32 z, f32 w)$/;"	f	file:
v4	src/rituals_math.cpp	/^static inline Vec4 v4(Vec3 vi)$/;"	f	file:
v4	src/rituals_math.cpp	/^static inline Vec4 v4(Vec3 vi, f32 w)$/;"	f	file:
v4	src/rituals_math.cpp	/^static inline Vec4 v4(Vec4i vi)$/;"	f	file:
v4	src/rituals_math.cpp	/^static inline Vec4 v4(f32 x, f32 y, f32 z, f32 w)$/;"	f	file:
v4_add	src/rituals_math.cpp	/^static inline Vec4 v4_add(Vec4 a, Vec4 b)$/;"	f	file:
v4_add_scaled	src/rituals_math.cpp	/^static inline Vec4 v4_add_scaled(Vec4 a, Vec4 b, f32 scale)$/;"	f	file:
v4_compenent_mul	src/rituals_math.cpp	/^static inline Vec4 v4_compenent_mul(Vec4 a, Vec4 b)$/;"	f	file:
v4_div	src/rituals_math.cpp	/^static inline Vec4 v4_div(Vec4 a, f32 b)$/;"	f	file:
v4_dot	src/rituals_math.cpp	/^static inline f32 v4_dot(Vec4 a, Vec4 b)$/;"	f	file:
v4_len	src/rituals_math.cpp	/^static inline f32 v4_len(Vec4 a)$/;"	f	file:
v4_len_sq	src/rituals_math.cpp	/^static inline f32 v4_len_sq(Vec4 a)$/;"	f	file:
v4_mul	src/rituals_math.cpp	/^static inline Vec4 v4_mul(Vec4 a, f32 b)$/;"	f	file:
v4_negate	src/rituals_math.cpp	/^static inline Vec4 v4_negate(Vec4 a)$/;"	f	file:
v4_normalize	src/rituals_math.cpp	/^static inline Vec4 v4_normalize(Vec4 v)$/;"	f	file:
v4_sub	src/rituals_math.cpp	/^static inline Vec4 v4_sub(Vec4 a, Vec4 b)$/;"	f	file:
v4i	src/rituals_math.cpp	/^static inline Vec4i v4i(Vec4 vi)$/;"	f	file:
v4i	src/rituals_math.cpp	/^static inline Vec4i v4i(i32 x, i32 y, i32 z, i32 w)$/;"	f	file:
v4i_add	src/rituals_math.cpp	/^static inline Vec4i v4i_add(Vec4i a, Vec4i b)$/;"	f	file:
v4i_add_scaled	src/rituals_math.cpp	/^static inline Vec4i v4i_add_scaled(Vec4i a, Vec4i b, f32 scale)$/;"	f	file:
v4i_addi_scaled	src/rituals_math.cpp	/^static inline Vec4i v4i_addi_scaled(Vec4i a, Vec4i b, i32 scale)$/;"	f	file:
v4i_compenent_mul	src/rituals_math.cpp	/^static inline Vec4i v4i_compenent_mul(Vec4i a, Vec4i b)$/;"	f	file:
v4i_div	src/rituals_math.cpp	/^static inline Vec4i v4i_div(Vec4i a, f32 b)$/;"	f	file:
v4i_divi	src/rituals_math.cpp	/^static inline Vec4i v4i_divi(Vec4i a, f32 b)$/;"	f	file:
v4i_mul	src/rituals_math.cpp	/^static inline Vec4i v4i_mul(Vec4i a, f32 b)$/;"	f	file:
v4i_muli	src/rituals_math.cpp	/^static inline Vec4i v4i_muli(Vec4i a, i32 b)$/;"	f	file:
v4i_negate	src/rituals_math.cpp	/^static inline Vec4i v4i_negate(Vec4i a)$/;"	f	file:
v4i_sub	src/rituals_math.cpp	/^static inline Vec4i v4i_sub(Vec4i a, Vec4i b)$/;"	f	file:
vao	src/render.c	/^	u32 vao, vbo;$/;"	m	struct:wRenderGroup	file:
vao	src/render.cpp	/^	u32 vao, vbo;$/;"	m	struct:wRenderGroup	file:
vbo	src/render.c	/^	u32 vao, vbo;$/;"	m	struct:wRenderGroup	file:
vbo	src/render.cpp	/^	u32 vao, vbo;$/;"	m	struct:wRenderGroup	file:
velocity	src/rituals_particles.cpp	/^	Vec3 velocity;$/;"	m	struct:Particle	file:
velocity	src/rituals_simulation.cpp	/^	Vec2 velocity, force, collision_vel;$/;"	m	struct:Sim_Body	file:
vert	src/render.c	/^	u32 vert, frag, program;$/;"	m	struct:wShader	file:
vert	src/render.cpp	/^	u32 vert, frag, program;$/;"	m	struct:wShader	file:
vertex_shader	src/rituals_game.cpp	/^	const char* vertex_shader;$/;"	m	struct:Platform	file:
verts	src/render.c	/^	wVertex* verts;$/;"	m	struct:wRenderGroup	file:
verts	src/render.cpp	/^	wVertex* verts;$/;"	m	struct:wRenderGroup	file:
vf128	src/rituals_defines.h	/^typedef __m128 vf128;$/;"	t
vf32x4	src/rituals_defines.h	/^union vf32x4$/;"	u
vfShuffle	src/rituals_defines.h	38;"	d
w	src/render.c	/^	f32 x, y, w, h, cx, cy;$/;"	m	struct:wSprite	file:
w	src/render.c	/^	i32 w, h;$/;"	m	struct:wTexture	file:
w	src/render.cpp	/^	i32 w, h;$/;"	m	struct:wTexture	file:
w	src/render.cpp	/^	union { Vec2 size; struct{f32 w, h;};};$/;"	m	struct:wSprite::__anon3::__anon4	file:
w	src/rituals_math.cpp	/^		f32 x, y, w, h;$/;"	m	struct:Rect2::__anon7	file:
w	src/rituals_math.cpp	/^		f32 x, y, z, w;$/;"	m	struct:Vec4::__anon3	file:
w	src/rituals_math.cpp	/^		i32 x, y, z, w;$/;"	m	struct:Vec4i::__anon6	file:
w	src/rituals_math.cpp	/^	i16 x, y, w, h;$/;"	m	struct:Rect2i	file:
w	src/rituals_tilemap.cpp	/^	isize w, h;$/;"	m	struct:Tilemap	file:
wGetSprite	src/render.c	/^wSprite* wGetSprite(wRenderGroup* group)$/;"	f
wGetSprite	src/render.cpp	/^wSprite* wGetSprite(wRenderGroup* group)$/;"	f
wGroupAddRaw	src/render.c	/^wSprite* wGroupAddRaw($/;"	f
wGroupAddRaw	src/render.cpp	/^wSprite* wGroupAddRaw($/;"	f
wGroupDraw	src/render.c	/^void wGroupDraw(i32 width, i32 height, wRenderGroup* group)$/;"	f
wGroupDraw	src/render.cpp	/^void wGroupDraw(i32 width, i32 height, wRenderGroup* group)$/;"	f
wGroupInit	src/render.c	/^void wGroupInit(wRenderGroup* group, i32 cap, wShader* shader, wTexture* texture)$/;"	f
wGroupInit	src/render.cpp	/^void wGroupInit(wRenderGroup* group, i32 cap, wShader* shader, wTexture* texture)$/;"	f
wInitDefaultShader	src/render.c	/^void wInitDefaultShader(const char* vertShader, const char* fragShader, wShader* shader)$/;"	f	file:
wInitDefaultShader	src/render.cpp	/^void wInitDefaultShader(const char* vertShader, const char* fragShader, wShader* shader)$/;"	f	file:
wInitSprite	src/render.c	/^void wInitSprite(wSprite* s)$/;"	f
wInitSprite	src/render.cpp	/^void wInitSprite(wSprite* s)$/;"	f
wLoadTexture	src/render.cpp	/^wTexture* wLoadTexture(const char* basePath, const char* filename, MemoryArena* arena)$/;"	f
wProcessorArchitecture	src/wb_alloc.h	/^      WORD wProcessorArchitecture;$/;"	m	struct:_SYSTEM_INFO::__anon1::__anon2
wProcessorLevel	src/wb_alloc.h	/^  WORD      wProcessorLevel;$/;"	m	struct:_SYSTEM_INFO
wProcessorRevision	src/wb_alloc.h	/^  WORD      wProcessorRevision;$/;"	m	struct:_SYSTEM_INFO
wRenderGroup	src/render.c	/^struct wRenderGroup$/;"	s	file:
wRenderGroup	src/render.cpp	/^struct wRenderGroup$/;"	s	file:
wReserved	src/wb_alloc.h	/^      WORD wReserved;$/;"	m	struct:_SYSTEM_INFO::__anon1::__anon2
wShader	src/render.c	/^struct wShader$/;"	s	file:
wShader	src/render.cpp	/^struct wShader$/;"	s	file:
wSprite	src/render.c	/^struct wSprite$/;"	s	file:
wSprite	src/render.cpp	/^struct wSprite$/;"	s	file:
wSpriteList	src/render.c	/^struct wSpriteList$/;"	s	file:
wSpriteList	src/render.cpp	/^struct wSpriteList$/;"	s	file:
wSpriteMake	src/render.cpp	/^wSprite wSpriteMake($/;"	f
wTexture	src/render.c	/^struct wTexture$/;"	s	file:
wTexture	src/render.cpp	/^struct wTexture$/;"	s	file:
wUploadTexture	src/render.c	/^void wUploadTexture(wTexture* texture)$/;"	f
wUploadTexture	src/render.cpp	/^void wUploadTexture(wTexture* texture)$/;"	f
wVertex	src/render.c	/^struct wVertex$/;"	s	file:
wVertex	src/render.cpp	/^struct wVertex$/;"	s	file:
walk_impulse	src/rituals_world_area.cpp	/^	Vec2 walk_impulse;$/;"	m	struct:Entity	file:
wbi__SystemExtern	src/wb_alloc.h	501;"	d
wbi__SystemExtern	src/wb_alloc.h	503;"	d
wbi__TaggedHeapArena	src/wb_alloc.h	/^struct wbi__TaggedHeapArena$/;"	s
wbi__TaggedHeapArena	src/wb_alloc.h	/^typedef struct wbi__TaggedHeapArena wbi__TaggedHeapArena;$/;"	t	typeref:struct:wbi__TaggedHeapArena
wbi__TaggedHeapSearchSize	src/wb_alloc.h	247;"	d
wbi__allocateVirtualSpace	src/wb_alloc.h	/^void* wbi__allocateVirtualSpace(usize size)$/;"	f
wbi__arenaSize	src/wb_alloc.h	1337;"	d
wbi__arenaSize	src/wb_alloc.h	1352;"	d
wbi__commitMemory	src/wb_alloc.h	/^void* wbi__commitMemory(void* addr, usize size, isize flags)$/;"	f
wbi__decommitMemory	src/wb_alloc.h	/^void wbi__decommitMemory(void* addr, usize size)$/;"	f
wbi__freeAddressSpace	src/wb_alloc.h	/^void wbi__freeAddressSpace(void* addr, usize size)$/;"	f
wbi__i64	src/wb_alloc.h	/^typedef long int wbi__i64;$/;"	t
wbi__taggedArenaInit	src/wb_alloc.h	/^void wbi__taggedArenaInit(TaggedHeap* heap, $/;"	f
wbi__taggedArenaSortBySize	src/wb_alloc.h	/^void wbi__taggedArenaSortBySize(wbi__TaggedHeapArena** array, isize count)$/;"	f
wbi__u16	src/wb_alloc.h	/^typedef short unsigned int wbi__u16;$/;"	t
wbi__u32	src/wb_alloc.h	/^typedef unsigned int wbi__u32;$/;"	t
wbi__u64	src/wb_alloc.h	/^typedef unsigned long int wbi__u64;$/;"	t
west	src/rituals_world_area.cpp	/^	Area_Link west;$/;"	m	struct:World_Area_Stub	file:
window	src/rituals_game.cpp	/^	SDL_Window* window;$/;"	m	struct:Game_Main	file:
window	src/rituals_game.cpp	/^	SDL_Window* window;$/;"	m	struct:Platform	file:
window_size	src/rituals_game.cpp	/^	Vec2i window_size;$/;"	m	struct:Game_Main	file:
window_size	src/rituals_game.cpp	/^	Vec2i window_size;$/;"	m	struct:Platform	file:
window_title	src/rituals_game.cpp	/^	const char* window_title;$/;"	m	struct:Platform	file:
world	src/rituals_game_states.cpp	/^	World* world;$/;"	m	struct:Play_State	file:
world	src/rituals_world_area.cpp	/^	World* world;$/;"	m	struct:World_Area	file:
world_area_animate_entities	src/rituals_world.cpp	/^void world_area_animate_entities(World_Area* area, World* world)$/;"	f
world_area_build_hitboxes	src/rituals_world_area.cpp	/^void world_area_build_hitboxes(World_Area* area)$/;"	f
world_area_contact_entities	src/rituals_world.cpp	/^void world_area_contact_entities(World_Area* area, World* world)$/;"	f
world_area_deinit_player	src/rituals_world.cpp	/^void world_area_deinit_player(World_Area* area, bool move_player=true)$/;"	f
world_area_find_entity	src/rituals_world_area.cpp	/^Entity* world_area_find_entity(World_Area* area, isize id)$/;"	f
world_area_frametick_entities	src/rituals_world.cpp	/^bool world_area_frametick_entities(World_Area* area, World* world)$/;"	f
world_area_get_next_entity	src/rituals_world_area.cpp	/^Entity* world_area_get_next_entity(World_Area* area)$/;"	f
world_area_hit_entities	src/rituals_world.cpp	/^void world_area_hit_entities(World_Area* area, World* world)$/;"	f
world_area_init_player	src/rituals_world.cpp	/^void world_area_init_player(World_Area* area, Vec2i tile_pos, bool move_player=true)$/;"	f
world_area_interact	src/rituals_world.cpp	/^void world_area_interact(World_Area* area, World* world)$/;"	f
world_area_on_activate_entity	src/rituals_world.cpp	/^void world_area_on_activate_entity(Entity* e, World_Area* area, World* world)$/;"	f
world_area_on_destroy_entity	src/rituals_world.cpp	/^void world_area_on_destroy_entity(Entity* e, World_Area* area, World* world)$/;"	f
world_area_process_hitboxes	src/rituals_world_area.cpp	/^void world_area_process_hitboxes(World_Area* area)$/;"	f
world_area_process_removed_entities	src/rituals_world_area.cpp	/^void world_area_process_removed_entities(World_Area* area)$/;"	f
world_area_remove_entity	src/rituals_world_area.cpp	/^bool world_area_remove_entity(World_Area* area, Entity* entity)$/;"	f
world_area_remove_entity_internal	src/rituals_world_area.cpp	/^void world_area_remove_entity_internal(World_Area* area, isize id)$/;"	f
world_area_render	src/rituals_world.cpp	/^void world_area_render(World_Area* area, World* world)$/;"	f
world_area_slowtick_entities	src/rituals_world.cpp	/^void world_area_slowtick_entities(World_Area* area, World* world)$/;"	f
world_area_sort_entities_on_id	src/rituals_world_area.cpp	/^void world_area_sort_entities_on_id(World_Area* area)$/;"	f
world_area_synchronize_entities_and_bodies	src/rituals_world_area.cpp	/^void world_area_synchronize_entities_and_bodies(World_Area* area)$/;"	f
world_area_update	src/rituals_world.cpp	/^void world_area_update(World_Area* area, World* world)$/;"	f
world_area_walk_entities	src/rituals_world.cpp	/^void world_area_walk_entities(World_Area* area, World* world)$/;"	f
world_delete_self	src/rituals_world.cpp	/^void world_delete_self(World* world)$/;"	f
world_load_area	src/rituals_world.cpp	/^World_Area* world_load_area(World* world, isize id, MemoryArena* arena)$/;"	f
world_name_in	src/rituals_game_states.cpp	/^	const char* world_name_in;$/;"	m	struct:Play_State	file:
world_start_in_area	src/rituals_world.cpp	/^void world_start_in_area(World* world, World_Area_Stub* area, MemoryArena* arena)$/;"	f
world_switch_current_area	src/rituals_world.cpp	/^void world_switch_current_area(World* world, Area_Link link, MemoryArena* arena)$/;"	f
world_xy	src/rituals_game_states.cpp	/^	Vec2i world_xy;$/;"	m	struct:Play_State	file:
x	src/render.c	/^	f32 x, y, w, h, cx, cy;$/;"	m	struct:wSprite	file:
x	src/render.c	/^	f32 x, y;$/;"	m	struct:wVertex	file:
x	src/render.cpp	/^		struct {f32 x, y;};$/;"	m	struct:wSprite::__anon1::__anon2	file:
x	src/render.cpp	/^	f32 x, y;$/;"	m	struct:wVertex	file:
x	src/rituals_math.cpp	/^		f32 x, y, w, h;$/;"	m	struct:Rect2::__anon7	file:
x	src/rituals_math.cpp	/^		f32 x, y, z, w;$/;"	m	struct:Vec4::__anon3	file:
x	src/rituals_math.cpp	/^		f32 x, y, z;$/;"	m	struct:Vec3::__anon2	file:
x	src/rituals_math.cpp	/^		f32 x, y;$/;"	m	struct:Vec2::__anon1	file:
x	src/rituals_math.cpp	/^		i32 x, y, z, w;$/;"	m	struct:Vec4i::__anon6	file:
x	src/rituals_math.cpp	/^		i32 x, y, z;$/;"	m	struct:Vec3i::__anon5	file:
x	src/rituals_math.cpp	/^		i32 x, y;$/;"	m	struct:Vec2i::__anon4	file:
x	src/rituals_math.cpp	/^	i16 x, y, w, h;$/;"	m	struct:Rect2i	file:
x	src/rituals_random.cpp	/^	u64 x, y;$/;"	m	struct:Random	file:
y	src/render.c	/^	f32 x, y, w, h, cx, cy;$/;"	m	struct:wSprite	file:
y	src/render.c	/^	f32 x, y;$/;"	m	struct:wVertex	file:
y	src/render.cpp	/^		struct {f32 x, y;};$/;"	m	struct:wSprite::__anon1::__anon2	file:
y	src/render.cpp	/^	f32 x, y;$/;"	m	struct:wVertex	file:
y	src/rituals_math.cpp	/^		f32 x, y, w, h;$/;"	m	struct:Rect2::__anon7	file:
y	src/rituals_math.cpp	/^		f32 x, y, z, w;$/;"	m	struct:Vec4::__anon3	file:
y	src/rituals_math.cpp	/^		f32 x, y, z;$/;"	m	struct:Vec3::__anon2	file:
y	src/rituals_math.cpp	/^		f32 x, y;$/;"	m	struct:Vec2::__anon1	file:
y	src/rituals_math.cpp	/^		i32 x, y, z, w;$/;"	m	struct:Vec4i::__anon6	file:
y	src/rituals_math.cpp	/^		i32 x, y, z;$/;"	m	struct:Vec3i::__anon5	file:
y	src/rituals_math.cpp	/^		i32 x, y;$/;"	m	struct:Vec2i::__anon4	file:
y	src/rituals_math.cpp	/^	i16 x, y, w, h;$/;"	m	struct:Rect2i	file:
y	src/rituals_random.cpp	/^	u64 x, y;$/;"	m	struct:Random	file:
z	src/rituals_gui.cpp	/^	i32 z;$/;"	m	struct:Gui_Window_Handle	file:
z	src/rituals_math.cpp	/^		f32 x, y, z, w;$/;"	m	struct:Vec4::__anon3	file:
z	src/rituals_math.cpp	/^		f32 x, y, z;$/;"	m	struct:Vec3::__anon2	file:
z	src/rituals_math.cpp	/^		i32 x, y, z, w;$/;"	m	struct:Vec4i::__anon6	file:
z	src/rituals_math.cpp	/^		i32 x, y, z;$/;"	m	struct:Vec3i::__anon5	file:
z	src/rituals_world_area.cpp	/^	f32 z;$/;"	m	struct:Entity	file:
