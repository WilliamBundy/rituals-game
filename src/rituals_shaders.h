const char* GLES2_frag = "" "#version 100\n"
"precision mediump float;\n"
"varying float fKind;\n"
"varying vec2 fScale;\n"
"varying vec2 fUV;\n"
"varying vec4 fColor;\n"
"uniform float uPxRange;\n"
"uniform vec2 uInvTextureSize;\n"
"uniform vec4 uTint;\n"
"uniform sampler2D uTexture;\n"
"float median(float a, float b, float c)\n"
"{\n"
"	return max(min(a, b), min(max(a, b), c));\n"
"}\n"
"vec2 subpixelAA(vec2 pixel, float zoom)\n"
"{\n"
"	vec2 uv = floor(pixel) + 0.5;\n"
"	return uv + 1.0 - clamp((1.0 - fract(pixel)) * zoom, 0.0, 1.0);\n"
"}\n"
"void main()\n"
"{\n"
"	if(fKind < 10.0) {\n"
"		//vec4 dist = texture2D(uTexture, fUV * uInvTextureSize);\n"
"		//float m = median(dist.x, dist.y, dist.z);\n"
"		//float smoothing = 0.25 / (uPxRange * fScale.x);\n"
"		//float alpha = smoothstep(0.5 - smoothing, 0.5 + smoothing, m);\n"
"		//gl_FragColor = vec4(1, 1, 1, alpha) * uTint * fColor;\n"
"		vec2 msdfUnit = uPxRange * uInvTextureSize;\n"
"		vec4 sdfVal = texture2D(uTexture, fUV * uInvTextureSize);\n"
"		float sigDist = median(sdfVal.r, sdfVal.g, sdfVal.b) - 0.5;\n"
"		sigDist *= dot(msdfUnit, 0.5/vec2(fKind / 1000.0));\n"
"		float opacity = clamp(sigDist + 0.5, 0.0, 1.0);\n"
"		gl_FragColor = vec4(1, 1, 1, opacity) * uTint * fColor;\n"
"	} else {\n"
"		vec4 lcolor = fColor;\n"
"		if(fKind < 20.0) {\n"
"			vec2 uv;\n"
"			if(fKind > 1000005.0) {\n"
"				uv = subpixelAA(fUV, fScale.x);\n"
"			} else {\n"
"				uv = floor(fUV) + 0.5;\n"
"			}\n"
"			lcolor *= texture2D(uTexture, uv * uInvTextureSize);\n"
"		}\n"
"		gl_FragColor = lcolor * uTint;\n"
"	}\n"
"}\n"
;
const char* GLES2_vert = "" "#version 100\n"
"attribute float vKind;\n"
"attribute vec2 vPos;\n"
"attribute vec2 vUV;\n"
"attribute vec2 vScale;\n"
"attribute vec4 vColor;\n"
"varying float fKind;\n"
"varying vec2 fScale;\n"
"varying vec2 fUV;\n"
"varying vec4 fColor;\n"
"void main()\n"
"{\n"
"	gl_Position = vec4(vPos, 0, 1);\n"
"	fUV = vUV;\n"
"	fScale = vScale;\n"
"	fKind = vKind;\n"
"	fColor = vColor.wzyx;\n"
"}\n"
;


